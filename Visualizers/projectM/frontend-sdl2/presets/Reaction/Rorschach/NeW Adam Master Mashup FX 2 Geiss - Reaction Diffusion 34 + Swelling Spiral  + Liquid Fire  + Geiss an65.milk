MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.900
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=1
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.451
fWarpScale=3.040
fZoomExponent=2.19476
fShader=0.000
zoom=1.00971
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.25579
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t3 = q7;
wave_0_per_frame2=
wave_0_per_frame3=t1 = .5;
wave_0_per_frame4=t2 = .5;
wave_0_per_frame5=
wave_0_per_frame6=//r = .5 + .5*sin(q2);
wave_0_per_frame7=//g = .5 + .5*sin(q2 + 2.0944);
wave_0_per_frame8=//b = .5 + .5*sin(q2 + 4.1888);
wave_0_per_point1=sp = sample*6.2832;
wave_0_per_point2=ti = time*20;
wave_0_per_point3=raa = sin(ti*12.87 - sp*15.87)*2.5 - cos(ti*7.98 + sp*9.5)*6 + sin(ti*8.9 + sp*48)*7.4;
wave_0_per_point4=raa = abs(raa - int(raa));
wave_0_per_point5=rab = sin(ti*6.74 - sp*18.52)*5.7 + cos(ti*3.94 + sp*27.55)*1.7 + sin(ti*14.8 + sp*3.5)*4;
wave_0_per_point6=rab = abs(rab - int(rab));
wave_0_per_point7=
wave_0_per_point8=cou = 30;
wave_0_per_point9=
wave_0_per_point10=seg = seg*above(sample,0);
wave_0_per_point11=it = (it + 1)*above(sample,0);
wave_0_per_point12=seg = seg + equal(ita,0);
wave_0_per_point13=ita = (ita + 1)*above(sample,0)*below(ita,cou);
wave_0_per_point14=cop = equal(ita,cou);
wave_0_per_point15=
wave_0_per_point16=toll = toll*above(sample,0);
wave_0_per_point17=toll = toll + value1 + value2;
wave_0_per_point18=tav = toll/cou*.1;
wave_0_per_point19=mod = raa*bass*.5 - rab*(mid+treb)*.125;
wave_0_per_point20=mod = if(q1,bass*.5*(.5 + .5*sin(sp)) - (mid+treb)*.25*(.5 + .5*cos(sp)),mod);
wave_0_per_point21=
wave_0_per_point22=toll = toll*(1-cop);
wave_0_per_point23=//toll = 15;
wave_0_per_point24=
wave_0_per_point25=
wave_0_per_point26=la = if((1-t3)*cop*equal(seg,1),tav,la);
wave_0_per_point27=lb = if((1-t3)*cop*equal(seg,2),tav,lb);
wave_0_per_point28=lc = if((1-t3)*cop*equal(seg,3),tav,lc);
wave_0_per_point29=ld = if((1-t3)*cop*equal(seg,4),tav,ld);
wave_0_per_point30=le = if((1-t3)*cop*equal(seg,5),tav,le);
wave_0_per_point31=lf = if((1-t3)*cop*equal(seg,6),tav,lf);
wave_0_per_point32=lg = if((1-t3)*cop*equal(seg,7),tav,lg);
wave_0_per_point33=li = if((1-t3)*cop*equal(seg,8),tav,li);
wave_0_per_point34=lj = if((1-t3)*cop*equal(seg,9),tav,lj);
wave_0_per_point35=lk = if((1-t3)*cop*equal(seg,10),tav,lk);
wave_0_per_point36=
wave_0_per_point37=aa = if((1-t3)*cop*equal(seg,1),mod,aa);
wave_0_per_point38=ab = if((1-t3)*cop*equal(seg,2),mod,ab);
wave_0_per_point39=ac = if((1-t3)*cop*equal(seg,3),mod,ac);
wave_0_per_point40=ad = if((1-t3)*cop*equal(seg,4),mod,ad);
wave_0_per_point41=ae = if((1-t3)*cop*equal(seg,5),mod,ae);
wave_0_per_point42=af = if((1-t3)*cop*equal(seg,6),mod,af);
wave_0_per_point43=ag = if((1-t3)*cop*equal(seg,7),mod,ag);
wave_0_per_point44=ai = if((1-t3)*cop*equal(seg,8),mod,ai);
wave_0_per_point45=aj = if((1-t3)*cop*equal(seg,9),mod,aj);
wave_0_per_point46=ak = if((1-t3)*cop*equal(seg,10),mod,ak)*0;
wave_0_per_point47=
wave_0_per_point48=
wave_0_per_point49=lev = lev*above(sample,0); ud = ud*above(sample,0); rep = rep*above(sample,0); lev = if(ud,lev-1,lev+1); rep = (rep + equal(lev,0)); ud = if(equal(lev,0),0,if(equal(lev,10),1,ud));
wave_0_per_point50=
wave_0_per_point51=mx = above(lev,0)*la*sin(aa) + above(lev,1)*lb*sin(ab) + above(lev,2)*lc*sin(ac) + above(lev,3)*ld*sin(ad);
wave_0_per_point52=my = above(lev,0)*la*cos(aa) + above(lev,1)*lb*cos(ab) + above(lev,2)*lc*cos(ac) + above(lev,3)*ld*cos(ad);
wave_0_per_point53=mx = mx + above(lev,4)*le*sin(ae) + above(lev,5)*lf*sin(af) + above(lev,6)*lg*sin(ag);
wave_0_per_point54=my = my + above(lev,4)*le*cos(ae) + above(lev,5)*lf*cos(af) + above(lev,6)*lg*cos(ag);
wave_0_per_point55=mx = mx + above(lev,7)*li*sin(ai) + above(lev,8)*lj*sin(aj);// + above(lev,9)*lk*sin(ak);
wave_0_per_point56=my = my + above(lev,7)*li*cos(ai) + above(lev,8)*lj*cos(aj) + above(lev,9)*lk*cos(ak);
wave_0_per_point57=mx = (1-2*equal(ud,1))*mx*(1-equal(lev,10));
wave_0_per_point58=
wave_0_per_point59=my = min(my,.25);
wave_0_per_point60=
wave_0_per_point61=// add branches via rotation
wave_0_per_point62=poi = q3;
wave_0_per_point63=modx = if(equal(lev,poi)*ud,mx,modx);
wave_0_per_point64=mody = if(equal(lev,poi)*ud,my,mody);
wave_0_per_point65=mang = (above(rep,7)*below(rep,14) - above(rep,15)*below(rep,22))*above(lev,poi);
wave_0_per_point66=modx = 0;
wave_0_per_point67=mx = mx - modx;
wave_0_per_point68=my = my - mody;
wave_0_per_point69=ox = mx*cos(mang) - my*sin(mang);
wave_0_per_point70=oy = mx*sin(mang) + my*cos(mang);
wave_0_per_point71=mx = ox + modx;
wave_0_per_point72=my = oy + mody;
wave_0_per_point73=
wave_0_per_point74=
wave_0_per_point75=mang = above(rep,1)*rep*1.0472;
wave_0_per_point76=ox = mx*cos(mang) - my*sin(mang);
wave_0_per_point77=oy = mx*sin(mang) + my*cos(mang);
wave_0_per_point78=mx = ox;
wave_0_per_point79=my = oy;
wave_0_per_point80=
wave_0_per_point81=
wave_0_per_point82=sz = .5;
wave_0_per_point83=x = mx*.75*sz + t1;
wave_0_per_point84=y = my*sz + t2;
wave_0_per_point85=
wave_0_per_point86=
wave_0_per_point87=
wave_0_per_point88=a = t3; // drawn every 2nd frame, gets values in other one
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t3 = q7;
wave_1_per_frame2=
wave_1_per_frame3=t1 = .5;
wave_1_per_frame4=t2 = .5;
wave_1_per_point1=sp = sample*6.2832;
wave_1_per_point2=ti = time*20;
wave_1_per_point3=raa = sin(ti*12.87 - sp*15.87)*2.5 - cos(ti*7.98 + sp*9.5)*6 + sin(ti*8.9 + sp*48)*7.4;
wave_1_per_point4=raa = abs(raa - int(raa));
wave_1_per_point5=rab = sin(ti*6.74 - sp*18.52)*5.7 + cos(ti*3.94 + sp*27.55)*1.7 + sin(ti*14.8 + sp*3.5)*4;
wave_1_per_point6=rab = abs(rab - int(rab));
wave_1_per_point7=
wave_1_per_point8=cou = 30;
wave_1_per_point9=
wave_1_per_point10=seg = seg*above(sample,0);
wave_1_per_point11=it = (it + 1)*above(sample,0);
wave_1_per_point12=seg = seg + equal(ita,0);
wave_1_per_point13=ita = (ita + 1)*above(sample,0)*below(ita,cou);
wave_1_per_point14=cop = equal(ita,cou);
wave_1_per_point15=
wave_1_per_point16=toll = toll*above(sample,0);
wave_1_per_point17=toll = toll + value1 + value2;
wave_1_per_point18=tav = toll/cou*.1;
wave_1_per_point19=mod = raa*bass*.5 - rab*(mid+treb)*.125;
wave_1_per_point20=mod = if(q1,bass*.5*(.5 + .5*sin(sp)) - (mid+treb)*.25*(.5 + .5*cos(sp)),mod);
wave_1_per_point21=
wave_1_per_point22=toll = toll*(1-cop);
wave_1_per_point23=//toll = 15;
wave_1_per_point24=
wave_1_per_point25=
wave_1_per_point26=la = if((1-t3)*cop*equal(seg,1),tav,la);
wave_1_per_point27=lb = if((1-t3)*cop*equal(seg,2),tav,lb);
wave_1_per_point28=lc = if((1-t3)*cop*equal(seg,3),tav,lc);
wave_1_per_point29=ld = if((1-t3)*cop*equal(seg,4),tav,ld);
wave_1_per_point30=le = if((1-t3)*cop*equal(seg,5),tav,le);
wave_1_per_point31=lf = if((1-t3)*cop*equal(seg,6),tav,lf);
wave_1_per_point32=lg = if((1-t3)*cop*equal(seg,7),tav,lg);
wave_1_per_point33=li = if((1-t3)*cop*equal(seg,8),tav,li);
wave_1_per_point34=lj = if((1-t3)*cop*equal(seg,9),tav,lj);
wave_1_per_point35=lk = if((1-t3)*cop*equal(seg,10),tav,lk);
wave_1_per_point36=
wave_1_per_point37=aa = if((1-t3)*cop*equal(seg,1),mod,aa);
wave_1_per_point38=ab = if((1-t3)*cop*equal(seg,2),mod,ab);
wave_1_per_point39=ac = if((1-t3)*cop*equal(seg,3),mod,ac);
wave_1_per_point40=ad = if((1-t3)*cop*equal(seg,4),mod,ad);
wave_1_per_point41=ae = if((1-t3)*cop*equal(seg,5),mod,ae);
wave_1_per_point42=af = if((1-t3)*cop*equal(seg,6),mod,af);
wave_1_per_point43=ag = if((1-t3)*cop*equal(seg,7),mod,ag);
wave_1_per_point44=ai = if((1-t3)*cop*equal(seg,8),mod,ai);
wave_1_per_point45=aj = if((1-t3)*cop*equal(seg,9),mod,aj);
wave_1_per_point46=ak = if((1-t3)*cop*equal(seg,10),mod,ak)*0;
wave_1_per_point47=
wave_1_per_point48=
wave_1_per_point49=lev = lev*above(sample,0); ud = ud*above(sample,0); rep = rep*above(sample,0); lev = if(ud,lev-1,lev+1); rep = (rep + equal(lev,0)); ud = if(equal(lev,0),0,if(equal(lev,10),1,ud));
wave_1_per_point50=
wave_1_per_point51=mx = above(lev,0)*la*sin(aa) + above(lev,1)*lb*sin(ab) + above(lev,2)*lc*sin(ac) + above(lev,3)*ld*sin(ad);
wave_1_per_point52=my = above(lev,0)*la*cos(aa) + above(lev,1)*lb*cos(ab) + above(lev,2)*lc*cos(ac) + above(lev,3)*ld*cos(ad);
wave_1_per_point53=mx = mx + above(lev,4)*le*sin(ae) + above(lev,5)*lf*sin(af) + above(lev,6)*lg*sin(ag);
wave_1_per_point54=my = my + above(lev,4)*le*cos(ae) + above(lev,5)*lf*cos(af) + above(lev,6)*lg*cos(ag);
wave_1_per_point55=mx = mx + above(lev,7)*li*sin(ai) + above(lev,8)*lj*sin(aj);// + above(lev,9)*lk*sin(ak);
wave_1_per_point56=my = my + above(lev,7)*li*cos(ai) + above(lev,8)*lj*cos(aj) + above(lev,9)*lk*cos(ak);
wave_1_per_point57=mx = (1-2*equal(ud,1))*mx*(1-equal(lev,10));
wave_1_per_point58=
wave_1_per_point59=my = min(my,.25);
wave_1_per_point60=
wave_1_per_point61=// add branches via rotation
wave_1_per_point62=poi = q3;
wave_1_per_point63=modx = if(equal(lev,poi)*ud,mx,modx);
wave_1_per_point64=mody = if(equal(lev,poi)*ud,my,mody);
wave_1_per_point65=mang = (above(rep,7)*below(rep,14) - above(rep,15)*below(rep,22))*above(lev,poi);
wave_1_per_point66=modx = 0;
wave_1_per_point67=mx = mx - modx;
wave_1_per_point68=my = my - mody;
wave_1_per_point69=ox = mx*cos(mang) - my*sin(mang);
wave_1_per_point70=oy = mx*sin(mang) + my*cos(mang);
wave_1_per_point71=mx = ox + modx;
wave_1_per_point72=my = oy + mody;
wave_1_per_point73=
wave_1_per_point74=
wave_1_per_point75=mang = above(rep,1)*rep*1.0472;
wave_1_per_point76=ox = mx*cos(mang) - my*sin(mang);
wave_1_per_point77=oy = mx*sin(mang) + my*cos(mang);
wave_1_per_point78=mx = ox;
wave_1_per_point79=my = oy;
wave_1_per_point80=
wave_1_per_point81=
wave_1_per_point82=
wave_1_per_point83=sz = .5;
wave_1_per_point84=x = mx*.75*sz + t1;
wave_1_per_point85=y = my*sz + t2;
wave_1_per_point86=
wave_1_per_point87=a = t3; // drawn every 2nd frame, gets values in other one
wave_1_per_point88=
wave_1_per_point89=//r = .5 - .5*sin(q2);
wave_1_per_point90=//g = .5 - .5*sin(q2 + 2.0944);
wave_1_per_point91=//b = .5 - .5*sin(q2 + 4.1888);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.000
wavecode_2_g=1.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_per_point1=sw = 1-sw;
wave_2_per_point2=sp = sample*6.2832 - time;
wave_2_per_point3=
wave_2_per_point4=sz = sp - q1 - .7854*.5;
wave_2_per_point5=sz = .5 + .5*sin(sz*4) + value1 + value2;
wave_2_per_point6=
wave_2_per_point7=cv = sz*6.2832;
wave_2_per_point8=
wave_2_per_point9=sz = pow(sz,.5)*.05*sw;
wave_2_per_point10=
wave_2_per_point11=x = .5 + sz*sin(sp)*.75;
wave_2_per_point12=y = .5 + sz*cos(sp);
wave_2_per_point13=
wave_2_per_point14=r = .5 + .5*sin(.5*(time - cv));
wave_2_per_point15=g = .5 + .5*sin(.5*(time - cv + 2.094));
wave_2_per_point16=b = .5 + .5*sin(.5*(time - cv + 4.188));
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.000
wavecode_3_g=1.000
wavecode_3_b=0.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=50
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.66230
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.100
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.100
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=
shape_0_per_frame2=//r = .5 + .5*sin(time*1.123);
shape_0_per_frame3=//g = .5 + .5*sin(time*1.456);
shape_0_per_frame4=//b = .5 + .5*sin(time*1.789);
shape_0_per_frame5=
shape_0_per_frame6=
shape_0_per_frame7=//r = .5 - .5*sin(q2);
shape_0_per_frame8=//g = .5 - .5*sin(q2 + 2.0944);
shape_0_per_frame9=//b = .5 - .5*sin(q2 + 4.1888);
shapecode_1_enabled=0
shapecode_1_sides=50
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.66230
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=0.000
shapecode_1_r2=0.400
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.200
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=tex_zoom = 1/rad;
shapecode_2_enabled=0
shapecode_2_sides=50
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=1.000
shapecode_2_y=1.000
shapecode_2_rad=0.98609
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=50
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=1.000
shapecode_3_y=0.000
shapecode_3_rad=0.98609
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
per_frame_1=wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );
per_frame_2=wave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );
per_frame_3=wave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );
per_frame_4=cx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );
per_frame_5=cy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );
per_frame_6=decay = decay - 0.01*equal(frame%20,0);
per_frame_7=//zoom = 1;
per_frame_8=//warp = 0;
per_frame_9=zoom = zoom + 0.3*(0.01*cos(time*0.317+1) + 0.01*cos(time*0.1132+4));
per_frame_10=rot  = rot  + 0.5*(0.01*cos(time*0.214+3) + 0.01*cos(time*0.2732+2));
per_frame_11=wave_mystery = time*0.05;
per_frame_12=q4 = cos(wave_mystery*3.1415927*2);
per_frame_13=q5 = sin(wave_mystery*3.1415927*2);
per_frame_14=//zoom = zoom + (max(1, bass_att)-1)*0.01;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret.xyz = tex2D( sampler_main, uv ).xyz;
warp_5=`
warp_6=`      // take the difference between the crisp and blurred images,
warp_7=`      // then add it back into the image.  Creates spots and stripes over time.
warp_8=`      ret.xyz += (ret.xyz - GetBlur2(uv))*0.3;
warp_9=`      ret.xyz *= 0.9;
warp_10=`
warp_11=`      // add noise:
warp_12=`      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;
warp_13=`      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 * saturate(treb_att-1);
warp_14=`
warp_15=`      // desaturate over time, to keep the globs white
warp_16=`      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);
warp_17=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 uv2, uv3;
comp_4=`    float ang2, c, s;
comp_5=`
comp_6=`    uv -= 0.5;
comp_7=`    uv *= aspect.xy;    
comp_8=`
comp_9=`    ang2 = 6.28*0.333;
comp_10=`    c = cos(ang2);
comp_11=`    s = sin(ang2);
comp_12=`    uv2.x =  uv.x*c - uv.y*s;
comp_13=`    uv2.y =  uv.x*s + uv.y*c;
comp_14=`
comp_15=`    ang2 = 6.28*0.667;
comp_16=`    c = cos(ang2);
comp_17=`    s = sin(ang2);
comp_18=`    uv3.x =  uv.x*c - uv.y*s;
comp_19=`    uv3.y =  uv.x*s + uv.y*c;
comp_20=`
comp_21=`    ret = tex2D(sampler_main, uv + 0.5).xyz;
comp_22=`    ret = max(ret, tex2D(sampler_main,uv2 + 0.5).xyz);
comp_23=`    ret = max(ret, tex2D(sampler_main,uv3 + 0.5).xyz);
comp_24=`
comp_25=`    //ret *= 1.3; // a little bit of overbright
comp_26=`}
comp_27=`
comp_28=`
