MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=2.960
fDecay=1.000
fVideoEchoZoom=0.500
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=1
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.549
fWarpScale=2.940
fZoomExponent=0.02049
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=1.45984
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=1.000
ib_g=1.000
ib_b=1.000
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=ti = time*1;
wave_0_per_frame2=r = .75 + .25*sin(ti*1.789);
wave_0_per_frame3=g = .75 + .25*sin(ti*1.123);
wave_0_per_frame4=b = .75 + .25*sin(ti*1.465);
wave_0_per_point1=x = int(rand(1001))*.001;
wave_0_per_point2=Y = int(rand(1001))*.001;
wave_0_per_point3=
wave_0_per_point4=ti = time*.3;
wave_0_per_point5=
wave_0_per_point6=mx = x - .5 + .25*(sin(ti*1.1278) + sin(ti*.7458));
wave_0_per_point7=my = y - .5 + .25*(sin(ti*.9454) + sin(ti*1.2378));
wave_0_per_point8=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;
wave_0_per_point9=tot = zm;
wave_0_per_point10=mx = x - .5 + .25*(sin(ti*1.3185) + sin(ti*.9105));
wave_0_per_point11=my = y - .5 + .25*(sin(ti*.8113) + sin(ti*1.0287));
wave_0_per_point12=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;
wave_0_per_point13=tot = tot + zm;
wave_0_per_point14=
wave_0_per_point15=mx = x - .5 + .25*(sin(ti*1.3488) + sin(ti*.8552));
wave_0_per_point16=my = y - .5 + .25*(sin(ti*.7366) + sin(ti*1.1447));
wave_0_per_point17=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q2)*q5;
wave_0_per_point18=tot = tot + zm;
wave_0_per_point19=mx = x - .5 + .25*(sin(ti*1.1385) + sin(ti*.9901));
wave_0_per_point20=my = y - .5 + .25*(sin(ti*.7028) + sin(ti*1.3548));
wave_0_per_point21=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q2)*q5;
wave_0_per_point22=tot = tot + zm;
wave_0_per_point23=
wave_0_per_point24=
wave_0_per_point25=mx = x - .5 + .25*(sin(ti*1.3544) + sin(ti*.8926));
wave_0_per_point26=my = y - .5 + .25*(sin(ti*.9021) + sin(ti*1.2468));
wave_0_per_point27=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q3)*q6;
wave_0_per_point28=tot = tot + zm;
wave_0_per_point29=mx = x - .5 + .25*(sin(ti*1.5416) + sin(ti*.7852));
wave_0_per_point30=my = y - .5 + .25*(sin(ti*.7436) + sin(ti*1.3266));
wave_0_per_point31=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q3)*q6;
wave_0_per_point32=tot = tot + zm;
wave_0_per_point33=
wave_0_per_point34=tot = abs(tot);
wave_0_per_point35=a = min(1,max(0,tot*10));
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=ti = time*1;
wave_1_per_frame2=
wave_1_per_frame3=r = .75 + .25*sin(ti*1.789);
wave_1_per_frame4=g = .75 + .25*sin(ti*1.123);
wave_1_per_frame5=b = .75 + .25*sin(ti*1.465);
wave_1_per_point1=x = int(rand(1001))*.001;
wave_1_per_point2=Y = int(rand(1001))*.001;
wave_1_per_point3=
wave_1_per_point4=ti = time*.3;
wave_1_per_point5=
wave_1_per_point6=mx = x - .5 + .25*(sin(ti*1.1278) + sin(ti*.7458));
wave_1_per_point7=my = y - .5 + .25*(sin(ti*.9454) + sin(ti*1.2378));
wave_1_per_point8=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;
wave_1_per_point9=tot = zm;
wave_1_per_point10=mx = x - .5 + .25*(sin(ti*1.3185) + sin(ti*.9105));
wave_1_per_point11=my = y - .5 + .25*(sin(ti*.8113) + sin(ti*1.0287));
wave_1_per_point12=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;
wave_1_per_point13=tot = tot + zm;
wave_1_per_point14=
wave_1_per_point15=mx = x - .5 + .25*(sin(ti*1.3488) + sin(ti*.8552));
wave_1_per_point16=my = y - .5 + .25*(sin(ti*.7366) + sin(ti*1.1447));
wave_1_per_point17=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q2)*q5;
wave_1_per_point18=tot = tot + zm;
wave_1_per_point19=mx = x - .5 + .25*(sin(ti*1.1385) + sin(ti*.9901));
wave_1_per_point20=my = y - .5 + .25*(sin(ti*.7028) + sin(ti*1.3548));
wave_1_per_point21=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q2)*q5;
wave_1_per_point22=tot = tot + zm;
wave_1_per_point23=
wave_1_per_point24=
wave_1_per_point25=mx = x - .5 + .25*(sin(ti*1.3544) + sin(ti*.8926));
wave_1_per_point26=my = y - .5 + .25*(sin(ti*.9021) + sin(ti*1.2468));
wave_1_per_point27=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q3)*q6;
wave_1_per_point28=tot = tot + zm;
wave_1_per_point29=mx = x - .5 + .25*(sin(ti*1.5416) + sin(ti*.7852));
wave_1_per_point30=my = y - .5 + .25*(sin(ti*.7436) + sin(ti*1.3266));
wave_1_per_point31=zm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q3)*q6;
wave_1_per_point32=tot = tot + zm;
wave_1_per_point33=
wave_1_per_point34=tot = abs(tot);
wave_1_per_point35=a = min(1,max(0,tot*10));
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.000
wavecode_2_g=0.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_per_frame1=it = it + 1;
wave_2_per_frame2=
wave_2_per_frame3=a = equal(it%10,0);
wave_2_per_frame4=a = q8;
wave_2_per_point1=x = .5;
wave_2_per_point2=y = .5;
wave_2_per_point3=
wave_2_per_point4=it = (it+1)*above(sample,0);
wave_2_per_point5=
wave_2_per_point6=modx = if((1-equal(it%4,0)) + int(rand(10)),modx,int(rand(1001))*.001);
wave_2_per_point7=
wave_2_per_point8=y = .5 + .6*(1 - 2*(equal(it%4,0) + equal((it+1)%4,0)));
wave_2_per_point9=
wave_2_per_point10=mody = if(equal(it%2,0),sample,mody);
wave_2_per_point11=x = modx + mody*.49;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.000
wavecode_3_g=0.000
wavecode_3_b=0.000
wavecode_3_a=1.000
wave_3_per_frame1=it = it + 1;
wave_3_per_frame2=
wave_3_per_frame3=a = equal(it%10,0);
wave_3_per_frame4=a = q8;
wave_3_per_point1=x = .5;
wave_3_per_point2=y = .5;
wave_3_per_point3=
wave_3_per_point4=it = (it+1)*above(sample,0);
wave_3_per_point5=
wave_3_per_point6=modx = if((1-equal(it%4,0)) + int(rand(10)),modx,int(rand(1001))*.001);
wave_3_per_point7=
wave_3_per_point8=x = .5 + .6*(1 - 2*(equal(it%4,0) + equal((it+1)%4,0)));
wave_3_per_point9=
wave_3_per_point10=mody = if(equal(it%2,0),sample,mody);
wave_3_per_point11=y = modx + mody*.49;
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=2.41456
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shape_0_per_frame1=a = q8;
shape_0_per_frame2=a2 = q8;
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=7
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.03333
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = int(rand(100))*.01+instance-instance;
shape_1_per_frame2=y = int(rand(100))*.01+instance-instance;
shape_1_per_frame3=
shape_1_per_frame4=a =1;
shape_1_per_frame5=vol=bass+mid+treb;
shape_1_per_frame6=rad = int(rand(int(vol)))/7+instance-instance;
shapecode_2_enabled=1
shapecode_2_sides=32
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=33
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.000
shapecode_2_g=0.500
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.500
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=trans = rand(int(q30))/15+instance-instance;
shape_2_per_frame2=trans2 = rand(int(q30))/15+instance-instance;
shape_2_per_frame3=trans3 = rand(int(q30))/15+instance-instance;
shape_2_per_frame4=a = trans;
shape_2_per_frame5=
shape_2_per_frame6=x = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_2_per_frame7=y = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_2_per_frame8=rad = .09 + rand(int(q30))/15+instance-instance;
shape_2_per_frame9=r=rand(q30)*.1+instance-instance;
shape_2_per_frame10=g=rand(q30)*.1+instance-instance;
shape_2_per_frame11=b=rand(q30)*.1+instance-instance;
shape_2_per_frame12=r2=rand(q30)*.1+instance-instance;
shape_2_per_frame13=g2=rand(q30)*.1+instance-instance;
shape_2_per_frame14=b2=rand(q30)*.1+instance-instance;
shape_2_per_frame15=border_r=rand(q30)*.1+instance-instance;
shape_2_per_frame16=border_g=rand(q30)*.1+instance-instance;
shape_2_per_frame17=border_b=rand(q30)*.1+instance-instance;
shapecode_3_enabled=1
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=311
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.62832
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.000
shapecode_3_border_g=0.000
shapecode_3_border_b=0.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_3_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_3_per_frame3=
shape_3_per_frame4=mx=mx+(.0002*cos(ma));
shape_3_per_frame5=my=my+(.0002*tan(ma));
shape_3_per_frame6=
shape_3_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_3_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_3_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_3_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_3_per_frame11=
shape_3_per_frame12=x=1-mx;
shape_3_per_frame13=y=1-my;
shape_3_per_frame14=
shape_3_per_frame15=ang=(sin(time*.35)+1)*3;
shape_3_per_frame16=//a=(above(bass+mid+treb,.8));
shape_3_per_frame17=pi23=4*asin(1)*.333333333;
shape_3_per_frame18=t1=bass+mid+treb;
per_frame_init_1=x1 = 0;
per_frame_init_2=y1 = 0;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=
per_frame_26=//q1 = 0;
per_frame_27=v = 0.8;
per_frame_28=j1 = j1*0.95 + sqr(bass*4)*v;
per_frame_29=j2 = j2*0.95 + sqr(mid*4)*v;
per_frame_30=j3 = j3*0.95 + sqr(treb*4)*v;
per_frame_31=
per_frame_32=n = n + j1*0.0052;
per_frame_33=n1 = n1 + j2*0.0052;
per_frame_34=n2 = n2 + j3*0.0052;
per_frame_35=
per_frame_36=
per_frame_37=q12 = n*0.01;
per_frame_38=q13 = n1*0.01;
per_frame_39=q14 = n2*0.01;
per_frame_40=
per_frame_41=k = k*0.99 + sqr(mid_att*2);
per_frame_42=q5 = k*0.00;
per_frame_43=
per_frame_44=zoom = 0.995;
per_frame_45=warp = 0;
per_frame_46=
per_frame_47=rot = -0.00;
per_frame_48=
per_frame_49=w = -0.46;
per_frame_50=q1 = sin(w);
per_frame_51=q2 = cos(w);
per_frame_52=
per_frame_53=w = -n*0.001;
per_frame_54=q3 = sin(w);
per_frame_55=q4 = cos(w);
per_frame_56=q9 = n1*0.004;
per_frame_57=q10 = n2*0.004;
per_frame_58=q30=bass+treb+mid;
per_pixel_1=r = bass/4;
per_pixel_2=cx1 = 0.5+sin(time*0.618)*0.2;
per_pixel_3=cy1 = 0.5+cos(time*1.618)*0.2;
per_pixel_4=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_5=dir = (bass)*(r*r-d*d)*0.3;
per_pixel_6=x1 = if( above(d,r),0,  sin(y-cy1)*dir);
per_pixel_7=y1 = if( above(d,r),0, -sin(x-cx1)*dir);
per_pixel_8=
per_pixel_9=
per_pixel_10=cx1 = 0.5+sin(time*2.618)*0.3;
per_pixel_11=cy1 = 0.5+cos(time*3.14)*0.3;
per_pixel_12=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_13=dir = -(mid)*(r*r-d*d)*0.3;
per_pixel_14=x2 = if( above(d,r),0,  sin(y-cy1)*dir);
per_pixel_15=y2 = if( above(d,r),0, -sin(x-cx1)*dir);
per_pixel_16=
per_pixel_17=cx1 = 0.5+sin(-time*2.618)*0.4;
per_pixel_18=cy1 = 0.5+cos(-time*1.14)*0.4;
per_pixel_19=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_20=dir = -(treb)*(r*r-d*d)*0.3;
per_pixel_21=x3 = if( above(d,r),0,  sin(y-cy1)*dir);
per_pixel_22=y3 = if( above(d,r),0, -sin(x-cx1)*dir);
per_pixel_23=
per_pixel_24=v = 1;
per_pixel_25=dx = (x1+x2+x3)*v;
per_pixel_26=dy = (y1+y2+y3)*v;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_main, uv ).xyz;
warp_5=`
warp_6=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_7=`                      ((uv.xyy*q27
warp_8=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_9=`                      ).xyz*
warp_10=`                      float3(1,1,0)*0.05 + 
warp_11=`                      time*float3(0,0,1)*q29
warp_12=`                     );
warp_13=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_14=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_15=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_16=`
warp_17=`    // take the difference between the crisp and blurred images,
warp_18=`    // then add it back into the image.  Creates spots and stripes over time.
warp_19=`    ret += (ret - GetBlur1(uv))*0.3;
warp_20=`    ret *= 0.9;
warp_21=`
warp_22=`   // add noise:
warp_23=`   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.1;// + rand_frame.xy;
warp_24=`   ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 28;
warp_25=`
warp_26=`   // desaturate over time, to keep the globs white
warp_27=`   ret = lerp(ret, lum(ret), 0.04);
warp_28=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`
comp_5=`    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;
comp_6=`    ret = lerp( tex2D(sampler_main, uv).xyz, 
comp_7=`                tex2D(sampler_main, uv_echo ).xyz, 
comp_8=`                0.50 
comp_9=`              ); //video echo
comp_10=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_11=`                      ((uv_echo.xyy*q28
comp_12=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_13=`                      ).xyz*
comp_14=`                      float3(1,1,0)*0.05 + 
comp_15=`                      time*float3(0,0,1)*q31
comp_16=`                     );
comp_17=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_18=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_19=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_20=`   ret *= 2;  
comp_21=`   ret =  ret*(1-ret)*4; //solarize
comp_22=`//ret=1-ret;
comp_23=`//ret-=roam_sin*roam_cos.yzx;
comp_24=`
comp_25=`}
