MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.280
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=1
fWaveAlpha=0.010
fWaveScale=0.010
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=0.88020
fShader=0.330
zoom=0.99980
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=0.99980
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.010
ib_size=0.500
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.010
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ox=.1*cos(sample*6.2831);
wave_0_per_point2=oy=.35*sin(sample*6.2831)*1.2;
wave_0_per_point3=x=.5+ox*cos(time*0.1+1.0467)-oy*sin(time*0.1+1.0467);
wave_0_per_point4=y=.5+ox*sin(time*0.1+1.0467)+oy*cos(time*0.1+1.0467);
wave_0_per_point5=r=max(abs(sin(3.1415*sample-time))-0.25,0);
wave_0_per_point6=g=max(abs(sin(3.1415*sample-time))-0.25,0);
wave_0_per_point7=b=max(abs(sin(3.1415*sample-time))-0.25,0);
wave_0_per_point8=a=.2+.8*abs(sin(3.1415*sample-time));
wave_0_per_point9=
wave_0_per_point10=x = x+q1;
wave_0_per_point11=y = y+q2;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=ox=.1*cos(sample*6.2831);
wave_1_per_point2=oy=.35*sin(sample*6.2831)*1.2;
wave_1_per_point3=x=.5+ox*cos(time*0.1)-oy*sin(time*0.1);
wave_1_per_point4=y=.5+ox*sin(time*0.1)+oy*cos(time*0.1);
wave_1_per_point5=r=max(abs(sin(3.1415*sample-time*0.754))-0.25,0);
wave_1_per_point6=g=max(abs(sin(3.1415*sample-time*0.754))-0.25,0);
wave_1_per_point7=b=max(abs(sin(3.1415*sample-time*0.754))-0.25,0);
wave_1_per_point8=a=.2+.8*abs(sin(3.1415*sample-time));
wave_1_per_point9=
wave_1_per_point10=x = x+q1;
wave_1_per_point11=y = y+q2;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=ox=.1*cos(sample*6.2831);
wave_2_per_point2=oy=.35*sin(sample*6.2831)*1.2;
wave_2_per_point3=x=.5+ox*cos(time*0.1+2.0933)-oy*sin(time*0.1+2.0933);
wave_2_per_point4=y=.5+ox*sin(time*0.1+2.0933)+oy*cos(time*0.1+2.0933);
wave_2_per_point5=r=max(abs(sin(3.1415*sample-time*0.873))-0.25,0);
wave_2_per_point6=g=max(abs(sin(3.1415*sample-time*0.873))-0.25,0);
wave_2_per_point7=b=max(abs(sin(3.1415*sample-time*0.873))-0.25,0);
wave_2_per_point8=a=.2+.8*abs(sin(3.1415*sample-time));
wave_2_per_point9=
wave_2_per_point10=x = x+q1;
wave_2_per_point11=y = y+q2;
wave_2_per_point12=
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=2.50241
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=0.470
wavecode_3_a=1.000
wave_3_per_frame1=temp1=.1*cos((q3+3.1415*q6)+0.1*bass_att);
wave_3_per_frame2=temp2=.35*sin((q3+3.1415*q6)+0.1*bass_att)*1.2;
wave_3_per_frame3=temp3=.1*cos((q4*1.473+3.1415*q6)+0.1*mid_att);
wave_3_per_frame4=temp4=.35*sin((q4*1.473+3.1415*q6)+0.1*mid_att)*1.2;
wave_3_per_frame5=temp5=.1*cos((q5*1.473+3.1415*q6)+0.1*treb_att);
wave_3_per_frame6=temp6=.35*sin((q5*1.473+3.1415*q6)+0.1*treb_att)*1.2;
wave_3_per_frame7=
wave_3_per_frame8=v1=temp1*cos(0*time*0.1+1.0467)-temp2*sin(0*time*0.1+1.0467)+.5;
wave_3_per_frame9=v2=temp1*sin(0*time*0.1+1.0467)+temp2*cos(0*time*0.1+1.0467)+.5;
wave_3_per_frame10=v3=temp3*cos(0*time*0.1+2.0933)-temp4*sin(0*time*0.1+2.0933)+.5;
wave_3_per_frame11=v4=temp3*sin(0*time*0.1+2.0933)+temp4*cos(0*time*0.1+2.0933)+.5;
wave_3_per_frame12=v5=temp5*cos(0*time*0.1)-temp6*sin(0*time*0.1)+.5;
wave_3_per_frame13=v6=temp5*sin(0*time*0.1)+temp6*cos(0*time*0.1)+.5;
wave_3_per_frame14=
wave_3_per_frame15=tmp=v1*(v4-v6)-v2*(v3-v5)+(v3*v6-v5*v4);
wave_3_per_frame16=xcoef=(v1*v1+v2*v2)*(v4-v6)-(v3*v3+v4*v4)*(v2-v6)+(v5*v5+v6*v6)*(v2-v4);
wave_3_per_frame17=ycoef=(v1*v1+v2*v2)*(v3-v5)-(v3*v3+v4*v4)*(v1-v5)+(v5*v5+v6*v6)*(v1-v3);
wave_3_per_frame18=coef=(v1*v1+v2*v2)*(v3*v6-v5*v4) - (v3*v3+v4*v4)*(v1*v6-v5*v2) +(v5*v5+v6*v6)*(v1*v4-v3*v2);
wave_3_per_frame19=
wave_3_per_frame20=xcoef=-xcoef/tmp;
wave_3_per_frame21=ycoef=ycoef/tmp;
wave_3_per_frame22=coef=-coef/tmp;
wave_3_per_frame23=
wave_3_per_frame24=// circle coordinates (t1,t2,t3)=(centerX,centerY,radius)
wave_3_per_frame25=t1=-xcoef*.5;
wave_3_per_frame26=t2=-ycoef*.5;
wave_3_per_frame27=t3=sqrt(.25*(xcoef*xcoef+ycoef*ycoef-4*coef));
wave_3_per_frame28=
wave_3_per_frame29=// the angles of the electrons with respect to the circle's center
wave_3_per_frame30=// (add 2pi to avoid negative values)
wave_3_per_frame31=v7=atan2(v2-t2,v1-t1)+6.2831;
wave_3_per_frame32=v8=atan2(v4-t2,v3-t1)+6.2831;
wave_3_per_frame33=v9=atan2(v6-t2,v5-t1)+6.2831;
wave_3_per_frame34=
wave_3_per_frame35=// sort v7,v8,v9 (from smaller to bigger) and save in t4,t5,t6.
wave_3_per_frame36=t4=min(v7,v8); t4=min(t4,v9);
wave_3_per_frame37=t6=max(v7,v8); t6=max(t6,v9);
wave_3_per_frame38=t5=if( above(v7-t4,0)*below(v7-t6,0), v7,0);
wave_3_per_frame39=t5=if( above(v8-t4,0)*below(v8-t6,0), v8,t5);
wave_3_per_frame40=t5=if( above(v9-t4,0)*below(v9-t6,0), v9,t5);
wave_3_per_frame41=
wave_3_per_frame42=// t4,t5,t6 now are the sorted angles of the electrons and t4<t5<t6.
wave_3_per_frame43=// the arcs (t4,t5),(t5,t6),(t6,t4) cover the entire circumference.
wave_3_per_frame44=// we must find which of all possible pairs has a minimum sum of lengths.
wave_3_per_frame45=//   only those 2 arcs must be drawn.
wave_3_per_frame46=v1=t6-t5+t5-t4;
wave_3_per_frame47=v2=t6-t5+t4+6.2831-t6;
wave_3_per_frame48=v3=t5-t4+t4+6.2831-t6;
wave_3_per_frame49=v4=min(min(v1,v2),v3);
wave_3_per_frame50=
wave_3_per_frame51=// the circle will be plotted only for angles within (t7...t8)
wave_3_per_frame52=// t7:plot start angle, t8:plot final angle
wave_3_per_frame53=t7=if( equal(v4,v1), t4,t7);
wave_3_per_frame54=t8=if( equal(v4,v1), t6,t8);
wave_3_per_frame55=t7=if( equal(v4,v2), t5,t7);
wave_3_per_frame56=t8=if( equal(v4,v2), t4+6.2831,t8);
wave_3_per_frame57=t7=if( equal(v4,v3), t6,t7);
wave_3_per_frame58=t8=if( equal(v4,v3), t5+6.2831,t8);
wave_3_per_point1=ox=t1+(t3+value1)*cos(t7+sample*(t8-t7));
wave_3_per_point2=oy=t2+(t3+value1)*sin(t7+sample*(t8-t7));
wave_3_per_point3=
wave_3_per_point4=x=.5+(ox-.5)*cos(time*0.1)-(oy-.5)*sin(time*0.1);
wave_3_per_point5=y=.5+(ox-.5)*sin(time*0.1)+(oy-.5)*cos(time*0.1);
wave_3_per_point6=
wave_3_per_point7=a=1-pow(abs(sample-.5)/.5,1.5);
wave_3_per_point8=a=a*(.2+.8*q8);
wave_3_per_point9=
wave_3_per_point10=d=sqrt(sqr(x-.5)+sqr(y-.5));
wave_3_per_point11=a=a*(1-below(d,.08));
wave_3_per_point12=
wave_3_per_point13=x = x+q1;
wave_3_per_point14=y = y+q2;
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.20676
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=x = x+q1;
shape_0_per_frame2=y = y+q2;
shapecode_1_enabled=1
shapecode_1_sides=50
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.05033
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.050
shapecode_1_b=0.050
shapecode_1_a=1.000
shapecode_1_r2=0.400
shapecode_1_g2=0.020
shapecode_1_b2=0.020
shapecode_1_a2=0.100
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=temp1=.1*cos((q3+3.1415*q6)+0.1*bass_att);
shape_1_per_frame2=temp2=.35*sin((q3+3.1415*q6)+0.1*bass_att)*1.2;
shape_1_per_frame3=
shape_1_per_frame4=x=temp1*cos(time*0.1+1.0467)-temp2*sin(time*0.1+1.0467)+.5;
shape_1_per_frame5=y=temp1*sin(time*0.1+1.0467)+temp2*cos(time*0.1+1.0467)+.5;
shape_1_per_frame6=rad=.03+.02*q7+q8*.07;
shape_1_per_frame7=b=b+0.2*(1-q7);
shape_1_per_frame8=b2=b2+0.2*(1-q7);
shape_1_per_frame9=
shape_1_per_frame10=x = x+q1;
shape_1_per_frame11=y = y+q2;
shapecode_2_enabled=1
shapecode_2_sides=50
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.04983
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.050
shapecode_2_b=0.050
shapecode_2_a=1.000
shapecode_2_r2=0.400
shapecode_2_g2=0.020
shapecode_2_b2=0.020
shapecode_2_a2=0.100
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=temp1=.1*cos((q4*1.473+3.1415*q6)+0.1*mid_att);
shape_2_per_frame2=temp2=.35*sin((q4*1.473+3.1415*q6)+0.1*mid_att)*1.2;
shape_2_per_frame3=
shape_2_per_frame4=x=temp1*cos(time*0.1+2.0933)-temp2*sin(time*0.1+2.0933)+.5;
shape_2_per_frame5=y=temp1*sin(time*0.1+2.0933)+temp2*cos(time*0.1+2.0933)+.5;
shape_2_per_frame6=
shape_2_per_frame7=rad=.03+.02*q7+q8*.07;
shape_2_per_frame8=b=b+0.2*(1-q7);
shape_2_per_frame9=b2=b2+0.2*(1-q7);
shape_2_per_frame10=
shape_2_per_frame11=x = x+q1;
shape_2_per_frame12=y = y+q2;
shapecode_3_enabled=1
shapecode_3_sides=50
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.04983
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.050
shapecode_3_b=0.050
shapecode_3_a=1.000
shapecode_3_r2=0.400
shapecode_3_g2=0.020
shapecode_3_b2=0.020
shapecode_3_a2=0.100
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=temp1=.1*cos((q5*1.473+3.1415*q6)+0.1*treb_att);
shape_3_per_frame2=temp2=.35*sin((q5*1.473+3.1415*q6)+0.1*treb_att)*1.2;
shape_3_per_frame3=
shape_3_per_frame4=x=temp1*cos(time*0.1)-temp2*sin(time*0.1)+.5;
shape_3_per_frame5=y=temp1*sin(time*0.1)+temp2*cos(time*0.1)+.5;
shape_3_per_frame6=rad=.03+.02*q7+q8*.07;
shape_3_per_frame7=b=b+0.2*(1-q7);
shape_3_per_frame8=b2=b2+0.2*(1-q7);
shape_3_per_frame9=
shape_3_per_frame10=x = x+q1;
shape_3_per_frame11=y = y+q2;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=// -------------------------------- Beat Detective v0.07 ----------------------------------
per_frame_26=sure=if(equal(sure,0),.6,sure);
per_frame_27=interval=if(equal(interval,0),40,interval);
per_frame_28=lastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);
per_frame_29=dbass=(bass-pbass)/FPS;
per_frame_30=beat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);
per_frame_31=sure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),
per_frame_32=min(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);
per_frame_33=sure=max(.5,sure);
per_frame_34=cheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);
per_frame_35=beat=if(cheat,1,beat);
per_frame_36=sure=if(cheat,.95*sure,sure);
per_frame_37=maxdbass=max(maxdbass*.999,dbass);
per_frame_38=maxdbass=max(.012,maxdbass);
per_frame_39=maxdbass=min(.02,maxdbass);
per_frame_40=interval=if(beat, frame-lastbeat,interval);
per_frame_41=lastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);
per_frame_42=cheat=0;
per_frame_43=pbass=bass;
per_frame_44=// ----------------------------------------------------------------------------------------------
per_frame_45=warp=0;
per_frame_46=zoom=1;
per_frame_47=temp=(time/6.2831-int(time/6.2831));
per_frame_48=q7=abs(temp*6.2831-3.1415)/3.1415;
per_frame_49=q8=beat;
per_frame_50=
per_frame_51=// this echoes the value of the "beat" variable for one more frame after a beat so that both "sparks" are drawn highlighted (on consecutive frames)
per_frame_52=q8=q8+equal(frame-lastbeat,1);
per_frame_53=
per_frame_54=orient = if(alpha,orient,int(rand(3))+1);
per_frame_55=echo_orient = orient;
per_frame_56=
per_frame_57=trans = if(equal(alpha,0),0,if(equal(alpha,1),0,trans));
per_frame_58=trans = if(equal(trans,0),beat,trans);
per_frame_59=alphadir = if(alpha,if(alpha-1,alphadir,-1),1);
per_frame_60=alpha = alpha + trans*alphadir*(1/fps);
per_frame_61=alpha = max(alpha,0); alpha = min(alpha,1);
per_frame_62=echo_alpha = alpha;
per_frame_63=
per_frame_64=// ------------------ Indecision Code ----------------------
per_frame_65=// xpos and ypos are calculated as springs being acted on by a variable force, comprised of vol and bass_att or treb_att.
per_frame_66=vol = 0.167*(bass+mid);
per_frame_67=xamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);
per_frame_68=xamp = xamp + 0.5*(xamptarg-xamp);
per_frame_69=xdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));
per_frame_70=xspeed = xspeed + xdir*xamp - xpos - xspeed*0.1*below(abs(xpos),xamp);
per_frame_71=xpos = xpos + 0.001*xspeed;
per_frame_72=yamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);
per_frame_73=yamp = yamp + 0.5*(yamptarg-yamp);
per_frame_74=ydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));
per_frame_75=yspeed = yspeed + ydir*yamp - ypos - yspeed*0.1*below(abs(ypos),yamp);
per_frame_76=ypos = ypos + 0.001*yspeed;
per_frame_77=// ---------------------------------------------------------
per_frame_78=
per_frame_79=q1 = xpos;
per_frame_80=q2 = ypos;
per_frame_81=
per_frame_82=ob_g = max(min(0.5*(sin(1.345*time)+sin(0.987*time))+0.2,0.4),0);
per_frame_83=ob_b = max(min(0.5*(sin(1.543*time)+sin(0.789*time))+0.2,0.4),0);
per_frame_84=ob_r = max(min(0.5*(sin(0.876*time)+sin(0.543*time))+0.1,0.2),0);
per_frame_85=ib_g = max(min(0.5*(sin(1.246*time)+sin(0.864*time))+0.2,0.4),0);
per_frame_86=ib_b = max(min(0.5*(sin(1.642*time)+sin(0.468*time))+0.2,0.4),0);
per_frame_87=ib_r = max(min(0.5*(sin(0.765*time)+sin(0.654*time))+0.1,0.2),0);
per_frame_88=
per_frame_89=basschange = 0.1*basschange+0.01*bass;
per_frame_90=midchange = 0.1*midchange+0.01*mid;
per_frame_91=trebchange = 0.1*trebchange+0.01*treb;
per_frame_92=
per_frame_93=basstime = basstime + basschange;
per_frame_94=midtime = midtime + midchange;
per_frame_95=trebtime = trebtime + trebchange;
per_frame_96=
per_frame_97=q3 = basstime;
per_frame_98=q4 = midtime;
per_frame_99=q5 = trebtime;
per_frame_100=
per_frame_101=q6 = frame%2;
per_pixel_1=cx=0.5+q1;
per_pixel_2=cy=0.5-q2;
per_pixel_3=rd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );
per_pixel_4=//zm=(1.1-(rd/4));
per_pixel_5=//sx=zm;
per_pixel_6=//sy=zm;
per_pixel_7=//rot=above(rd,0.7)*(rd-0.7)*sin(time*0.3);
per_pixel_8=
per_pixel_9=
per_pixel_10=zoom=1.01+(rd/10000);
per_pixel_11=rot=rd/10000;
per_pixel_12=//cen_x = cos(time)*.2+.3;
per_pixel_13=//cen_y = sin(time)*.5+.5;
per_pixel_14=cen_x = q1;
per_pixel_15=cen_y = q2;
per_pixel_16=radxy = sin(time*.1)*.2+.3;
per_pixel_17=
per_pixel_18=dist_x = (x-cen_x)/(radxy*(sin(time*.2*0)*.3+cos((cen_x-x+ (cen_y-y))*10+time*2)*.3+1));
per_pixel_19=dist_y = (y-cen_y)/(radxy*(sin(time*.2*0)*.3+sin((cen_x-x+ (cen_y-y))*10+time*2)*.3+1));
per_pixel_20=in = below(abs(dist_x),1)*below(abs(dist_y),1);
per_pixel_21=//in = bnot(in);
per_pixel_22=out = bnot(in);
per_pixel_23=inx =(cen_x-q1)+.1*sign(dist_x)*(1-abs(dist_x));
per_pixel_24=iny =(cen_y-q2) +.1*sign(dist_y)*(1-abs(dist_y)); // .05*pow(dist_y,1);
per_pixel_25=
per_pixel_26=//**********outside
per_pixel_27=vang=time*.1;
per_pixel_28=vx = (x-.5)*cos(vang) - (y-.5)*sin(vang)+.5;
per_pixel_29=vy = (x-.5)*sin(vang) +(y-.5)*cos(vang)+.5;
per_pixel_30=
per_pixel_31=dvx=.01*sin(time+vy*80*radxy);
per_pixel_32=dvy=.01*cos(time+vx*80*radxy);
per_pixel_33=
per_pixel_34=outx = dvx*cos(vang) - dvy*sin(vang);
per_pixel_35=outy = -dvx*sin(vang) - dvy*cos(vang);
per_pixel_36=
per_pixel_37=dx=in*inx+out*outx;
per_pixel_38=dy=in*iny+out*outy;
per_pixel_39=num = 8;
per_pixel_40=pi = 3.141592654;
per_pixel_41=radi = (y-.5)*.75;
per_pixel_42=radi = (y-.5);
per_pixel_43=radi = pow(radi*radi + (x-.5)*(x-.5),.5);
per_pixel_44=
per_pixel_45=an = ang + pi + time;
per_pixel_46=an = an - pi*2*int(an/(pi*2));
per_pixel_47=
per_pixel_48=mod = .1;
per_pixel_49=
per_pixel_50=seg = ang + pi;
per_pixel_51=seg = seg/(pi*2)*num;
per_pixel_52=seg = int(seg);
per_pixel_53=seg = seg - equal(seg,num);
per_pixel_54=
per_pixel_55=anga = (ang + pi) - (pi*2/num)*seg;
per_pixel_56=anga = if(equal(seg%2,0),(pi*2/num) - anga,anga);
per_pixel_57=//anga = anga + pi/6; // num = 6
per_pixel_58=anga = anga + pi/4; // num = 8
per_pixel_59=//anga = anga + .85; // num = 10
per_pixel_60=
per_pixel_61=
per_pixel_62=ox = .5 - radi*sin(anga);
per_pixel_63=oy = .5 + radi*cos(anga);
per_pixel_64=
per_pixel_65=rot = if(equal(seg,0),rot,0);
per_pixel_66=
per_pixel_67=//dx = equal(seg,3)*(x-ox);
per_pixel_68=//dy = equal(seg,3)*(y-oy);
per_pixel_69=
per_pixel_70=dx = above(seg,0)*(x-ox);
per_pixel_71=dy = above(seg,0)*(y-oy);
per_pixel_72=
per_pixel_73=//dx = equal(seg,1)*(x - .5)*2;
warp_1=`shader_body
warp_2=`{ret=GetPixel(uv);
warp_3=`float d=lum(abs(uv-uv_orig))*0.6+0.003;
warp_4=`float3 one,two,three,four,five;
warp_5=`float3 sex,drugs,rock,roll,bugs;
warp_6=`float3 maxx;
warp_7=`one=max(
warp_8=`abs(ret-GetPixel(float2(uv.x-d,uv.y-d))),
warp_9=`abs(ret-GetPixel(float2(uv.x-d,uv.y)))
warp_10=`);
warp_11=`two=max(
warp_12=`abs(ret-GetPixel(float2(uv.x-d,uv.y+d))),
warp_13=`abs(ret-GetPixel(float2(uv.x,uv.y-d)))
warp_14=`);
warp_15=`three=max(
warp_16=`abs(ret-GetPixel(float2(uv.x,uv.y))),
warp_17=`abs(ret-GetPixel(float2(uv.x,uv.y+d)))
warp_18=`);
warp_19=`four=max(
warp_20=`abs(ret-GetPixel(float2(uv.x+d,uv.y-d))),
warp_21=`abs(ret-GetPixel(float2(uv.x+d,uv.y)))
warp_22=`);
warp_23=`five=abs(ret-GetPixel(float2(uv.x+d,uv.y+d)));
warp_24=`sex=abs(one-ret);
warp_25=`drugs=abs(two-ret);
warp_26=`rock=abs(three-ret);
warp_27=`roll=abs(four-ret);
warp_28=`bugs=abs(five-ret);
warp_29=`maxx=max(one,max(two,max(three,max(four,five))));
warp_30=`maxx=saturate(maxx);
warp_31=`ret=maxx;
warp_32=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_33=`                      ((uv.xyy*q27
warp_34=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_35=`                      ).xyz*
warp_36=`                      float3(1,1,0)*0.05 + 
warp_37=`                      time*float3(0,0,1)*q29
warp_38=`                     );
warp_39=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_40=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_41=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_42=`ret=(ret+GetPixel(uv+ret.xy*0.01)*0.8)/1.4;
warp_43=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 uv_echo = (uv - 0.5)*1.010*float2(-1,-1) + 0.5;
comp_4=`    ret = abs( tex2D(sampler_main, uv).xyz -
comp_5=`                    tex2D(sampler_main, uv_echo).zyx );
comp_6=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_7=`                      ((uv.xyy*q28
comp_8=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_9=`                      ).xyz*
comp_10=`                      float3(1,1,0)*0.05 + 
comp_11=`                      time*float3(0,0,1)*q31
comp_12=`                     );
comp_13=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_14=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_15=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_16=`}
