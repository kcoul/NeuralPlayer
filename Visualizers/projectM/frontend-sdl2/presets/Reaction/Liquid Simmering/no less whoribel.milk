MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.010
fWarpScale=0.010
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.110
ob_g=0.000
ob_b=0.100
ob_a=0.000
ib_size=0.025
ib_r=0.800
ib_g=0.500
ib_b=0.100
ib_a=0.620
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t1 = (q1 + q2*2);
wave_0_per_frame2=
wave_0_per_point1=sp = sample*6.2832*3.3 - t1;
wave_0_per_point2=ra = .5*(int(rand(1001))*.001 - int(rand(1001))*.001);
wave_0_per_point3=sz = sample*(.05 + ra*.05) + value1*1.6*sample;
wave_0_per_point4=x = q3 + sz*sin(sp);
wave_0_per_point5=y = 1-q4 + sz*cos(sp);
wave_0_per_point6=
wave_0_per_point7=a = min(value1*4,1);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = (q1 + q2*2);
wave_1_per_point1=sp = sample*6.2832*3.3 - t1 + 3.14;
wave_1_per_point2=ra = .5*(int(rand(1001))*.001 - int(rand(1001))*.001);
wave_1_per_point3=sz = sample*(.05 + ra*.05) + value2*1.6*sample;
wave_1_per_point4=x = q3 + sz*sin(sp);
wave_1_per_point5=y = 1-q4 + sz*cos(sp);
wave_1_per_point6=
wave_1_per_point7=a = min(value2*4,1);
wave_1_per_point8=
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=x = q1;
wave_2_per_point2=y = 1-q2;
wavecode_3_enabled=0
wavecode_3_samples=54
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=
wave_3_per_point2=mx = .5 + .5*sin(time);
wave_3_per_point3=my = .5 + .5*cos(time);
wave_3_per_point4=
wave_3_per_point5=x = (mx - .5)*.75 + .5;
wave_3_per_point6=y = my;
shapecode_0_enabled=0
shapecode_0_sides=33
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.72130
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.54934
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=//ang = time;
shape_0_per_frame2=
shape_0_per_frame3=tex_zoom = 1/rad;
shapecode_1_enabled=1
shapecode_1_sides=34
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.88027
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.67032
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.500
shapecode_1_a=0.160
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.500
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = int(rand(1001))*.001*1.5 - .25;
shape_1_per_frame2=y = int(rand(1001))*.001*1.5 - .25;
shapecode_2_enabled=1
shapecode_2_sides=34
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.88027
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.67032
shapecode_2_r=0.000
shapecode_2_g=0.500
shapecode_2_b=0.000
shapecode_2_a=0.160
shapecode_2_r2=0.000
shapecode_2_g2=0.500
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=x = int(rand(1001))*.001*1.5 - .25;
shape_2_per_frame2=y = int(rand(1001))*.001*1.5 - .25;
shapecode_3_enabled=1
shapecode_3_sides=34
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.88027
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.67032
shapecode_3_r=0.500
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=0.160
shapecode_3_r2=0.500
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=x = int(rand(1001))*.001*1.5 - .25;
shape_3_per_frame2=y = int(rand(1001))*.001*1.5 - .25;
shape_3_per_frame3=
per_frame_init_1=mv_x=64;mv_y=48;
per_frame_init_2=nut=0;
per_frame_init_3=stp=0;stq=0;
per_frame_init_4=rtp=0;rtq=0;
per_frame_init_5=wvr=0;
per_frame_init_6=decay=0;
per_frame_init_7=dcsp=0
per_frame_init_8=
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=decay=0.97;
per_frame_29=zoom=1.000;
per_frame_30=//wave_x=(sin(time*0.2)*0.3)+0.5;
per_frame_31=//wave_y=(cos(time*0.223)*0.3)+0.5;
per_frame_32=//wave_r=(treb*treb)*0.3;
per_frame_33=//wave_g=(mid*mid)*0.3;
per_frame_34=//wave_b=(bass*bass)*0.3;
per_frame_35=
per_frame_36=mv_x=sin(time/4)*8 + 56;
per_frame_37=mv_y=cos(time/4)*8 + 40;
per_frame_38=
per_frame_39=mv_r=sin(time/3)*0.3 + 0.3;
per_frame_40=mv_g=cos(time/3)*0.3 + 0.3;
per_frame_41=mv_b=sin(time+1.5)*0.3 + 0.3;
per_frame_42=
per_frame_43=
per_frame_44=
per_pixel_1=xpos1=sin(time/2)*0.3 + 0.5;
per_pixel_2=ypos1=cos(time/2)*0.4 + 0.5;
per_pixel_3=size=0.2;
per_pixel_4=
per_pixel_5=xp_lo=xpos1-size;
per_pixel_6=xp_hi=xpos1+size;
per_pixel_7=yp_lo=ypos1-size;
per_pixel_8=yp_hi=ypos1+size;
per_pixel_9=
per_pixel_10=xcheck=above(x,xp_lo)*below(x,xp_hi);
per_pixel_11=ycheck=above(y,yp_lo)*below(y,yp_hi);
per_pixel_12=
per_pixel_13=xfade_ctrl=sin(time/5)*0.5 + 0.5;
per_pixel_14=crossfade1=xcheck*xfade_ctrl + ycheck*(1-xfade_ctrl);
per_pixel_15=crossfade2=ycheck*xfade_ctrl + xcheck*(1-xfade_ctrl);
per_pixel_16=
per_pixel_17=zflux=sin(time/2)*0.4+0.5;
per_pixel_18=rflux=sin(time/1.5)*0.8;
per_pixel_19=zoom=(1.0*xcheck)+(zflux*(1-xcheck));
per_pixel_20=rot=(0.00*ycheck)+(rflux*(1-ycheck));
per_pixel_21=
per_pixel_22=
warp_1=`shader_body
warp_2=`{
warp_3=`float2 uv_m = 1.0 - abs( frac( uv * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
warp_4=`ret.x = tex2D( sampler_fc_main, uv_m ).z; // first julia fractal iteration
warp_5=`ret.y = lerp(lerp(tex2D( sampler_fc_main, uv_m ).x, ret.x,0.5), 
warp_6=`             GetPixel(uv_orig).y,
warp_7=`             0.75); // 75% of motion blur to the green channel
warp_8=`
warp_9=`
warp_10=`float2 d = texsize.zw*6;
warp_11=`float2 uv_z = (uv_orig-0.5)*0.998 + 0.5; // a small dose of zoom-in
warp_12=`float3 dx = ( GetBlur1(uv_z + float2(1,0)*d) - GetBlur1(uv_z-float2(1,0)*d) );
warp_13=`float3 dy = ( GetBlur1(uv_z + float2(0,1)*d) - GetBlur1(uv_z-float2(0,1)*d) );
warp_14=`uv_z -=float2(dx.z,dy.z)*texsize.zw*2; //shortening of the nebulous matter
warp_15=`ret.z = max((tex2d(sampler_fc_main,uv_m).x-0.5)*3*saturate(1-length(uv_orig-0.5)*3.2), // feeded by the inner of the red channel
warp_16=`             tex2d(sampler_fc_main,uv_z).z);
warp_17=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_18=`                      ((uv_z.xyy*q27
warp_19=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_20=`                      ).xyz*
warp_21=`                      float3(1,1,0)*0.05 + 
warp_22=`                      time*float3(0,0,1)*q29
warp_23=`                     );
warp_24=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_25=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_26=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_27=`ret.z += (tex2d(sampler_fc_main,uv_z).z - GetBlur1(saturate(uv_z)).z)*0.02; // sort of geiss' skin dot code
warp_28=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    uv = 0.05 + 0.9*uv;
comp_4=`
comp_5=`ret = GetPixel(uv);
comp_6=`    uv += -.05*tan(3*(ret.zz+ret.yx));
comp_7=`    
comp_8=`
comp_9=`    // equivalent of a laplacian: [center*4 - each of the 4 neighbors*1]
comp_10=`    ret = 0;
comp_11=`    ret += tex2D(sampler_main, uv ).xyz*4;
comp_12=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_13=`                      ((uv.xyy*q28
comp_14=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_15=`                      ).xyz*
comp_16=`                      float3(1,1,0)*0.05 + 
comp_17=`                      time*float3(0,0,1)*q31
comp_18=`                     );
comp_19=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_20=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_21=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_22=`    ret -= GetBlur1(uv)*3;
comp_23=`
comp_24=`    // little bit of noise:
comp_25=`    ret *= 1 + 0.12*(tex2D(sampler_noise_lq, rand_frame.xy 
comp_26=`           + uv*texsize.xy*texsize_noise_lq.zw).xxx*2-1);
comp_27=` 
comp_28=`    // palettize:
comp_29=`    ret = pow(ret, float3(0.5, 0.5, 0.7));
comp_30=`
comp_31=`    ret = (ret-0.1)*1.1;
comp_32=`   
comp_33=`    //ret.xyz *= 2; // a little bit of overbright
comp_34=`}
comp_35=`
comp_36=`
