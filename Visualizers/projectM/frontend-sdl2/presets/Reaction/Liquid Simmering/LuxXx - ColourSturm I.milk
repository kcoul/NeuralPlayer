MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=3
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=6.820
fWaveScale=0.826
fWaveSmoothing=0.900
fWaveParam=0.200
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=2.007
fWarpScale=1.341
fZoomExponent=4.40100
fShader=0.000
zoom=1.01100
rot=0.00300
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=10.880
nMotionVectorsY=11.520
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=1.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=92
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=1.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=t1 = 1
wave_0_per_point1=x=rand(10000)*(.0001);
wave_0_per_point2=y=rand(10000)*(.0001);
wave_0_per_point3=
wave_0_per_point4=vol=(bass+mid+treb)/3;
wave_0_per_point5=a=vol;
wave_0_per_point6=
wave_0_per_point7=r=bass*.62;
wave_0_per_point8=g=mid*.58;
wave_0_per_point9=b=treb*.6;
wavecode_1_enabled=0
wavecode_1_samples=3
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=1.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.020
wave_1_init1=t1 = 1
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=0.48454
wavecode_2_smoothing=1.00000
wavecode_2_r=0.300
wavecode_2_g=0.500
wavecode_2_b=0.250
wavecode_2_a=0.300
wave_2_per_point1=r=bass*.75;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=0.200
shapecode_0_enabled=0
shapecode_0_sides=45
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.29462
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=3.16787
shapecode_0_r=1.000
shapecode_0_g=0.940
shapecode_0_b=0.890
shapecode_0_a=0.000
shapecode_0_r2=0.840
shapecode_0_g2=0.930
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=0.550
shapecode_0_border_g=0.700
shapecode_0_border_b=1.000
shapecode_0_border_a=1.000
shape_0_per_frame1=redsine=.55+.1*bass*sin(time*3);
shape_0_per_frame2=greensine=.7+.1*mid*sin(time*2);
shape_0_per_frame3=bluesine=.7+.1*treb*sin(time);
shape_0_per_frame4=
shape_0_per_frame5=redif=if(above(bass,1.2),redsine,if(above(redif,.95),0,redif*.95));
shape_0_per_frame6=greenif=if(above(mid,1.2),greensine,if(above(greenif,.95),0,greenif*.95));
shape_0_per_frame7=blueif=if(above(treb,1.2),bluesine,if(above(blueif,.95),0,blueif*.95));
shape_0_per_frame8=
shape_0_per_frame9=border_r=redif;
shape_0_per_frame10=border_g=greenif;
shape_0_per_frame11=border_b=blueif;
shape_0_per_frame12=
shape_0_per_frame13=border_a=1-(.45*(bass+mid));
shape_0_per_frame14=a=(.0155*(bass+mid));
shapecode_1_enabled=0
shapecode_1_sides=50
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.81621
shapecode_1_ang=0.00000
shapecode_1_tex_ang=1.88496
shapecode_1_tex_zoom=3.30640
shapecode_1_r=0.300
shapecode_1_g=0.300
shapecode_1_b=0.300
shapecode_1_a=0.050
shapecode_1_r2=0.500
shapecode_1_g2=0.500
shapecode_1_b2=0.500
shapecode_1_a2=0.550
shapecode_1_border_r=0.500
shapecode_1_border_g=0.500
shapecode_1_border_b=0.500
shapecode_1_border_a=0.200
shapecode_2_enabled=0
shapecode_2_sides=3
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.123
shapecode_2_y=0.000
shapecode_2_rad=0.27319
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.49981
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.500
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=1.000
shapecode_3_rad=0.54822
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.49981
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.500
shapecode_3_border_g=0.500
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_1=zoom = 1;
per_frame_2=warp = 0.04;
per_frame_3=rot = 0;
per_frame_4=//before inversion
per_frame_5=scale = 3;
per_frame_6=angle = time*.01;
per_frame_7=translation_x = 0;
per_frame_8=translation_y = 0.02;
per_frame_9=
per_frame_10=//complex inverted
per_frame_11=iscale = 0.2;
per_frame_12=iangle = sin(time*0.1337)*0.3;
per_frame_13=itranslation_u = 0;
per_frame_14=itranslation_v = 0;
per_frame_15=
per_frame_16=
per_frame_17=// the möbius transformation
per_frame_18=// z -> (az+b)/(cz-d); where a,b,c,d are complex numbers and z will be the uv-vector
per_frame_19=// (az+b)/(cz-d) = a/c + mu/(cz+d), with mu = (bc-ad)/c
per_frame_20=// so a/c and mu can be calculated outside of the shader
per_frame_21=
per_frame_22=a_r = cos(angle)*scale;
per_frame_23=a_i = sin(angle)*scale;
per_frame_24=b_r = translation_x;
per_frame_25=b_i = translation_y;
per_frame_26=
per_frame_27=c_r = -cos(iangle)*iscale;
per_frame_28=c_i = -sin(iangle)*iscale;
per_frame_29=d_r = itranslation_u;
per_frame_30=d_i = itranslation_v;
per_frame_31=
per_frame_32=// c^(-1)
per_frame_33=c_inv_r = c_r/(c_r*c_r+c_i*c_i);
per_frame_34=c_inv_i = c_i/(c_r*c_r+c_i*c_i);
per_frame_35=
per_frame_36=// a*c^(-1)
per_frame_37=ac_r = (a_r*c_inv_r - a_i*c_inv_i);
per_frame_38=ac_i = (a_r*c_inv_i - a_i*c_inv_r);
per_frame_39=
per_frame_40=// (bc-ad)
per_frame_41=bcad_r = (b_r*c_r - b_i*c_i)-(a_r*d_r-a_i*d_i);
per_frame_42=bcad_i = (b_r*c_i - b_i*c_r)-(a_r*d_i-a_i*d_r);
per_frame_43=
per_frame_44=// mu*c^(-1)
per_frame_45=mu_r = bcad_r*c_inv_r - bcad_i*c_inv_i;
per_frame_46=mu_i = bcad_r*c_inv_i - bcad_i*c_inv_r;
per_frame_47=
per_frame_48=q1 = ac_r;
per_frame_49=q2 = ac_i;
per_frame_50=q3 = mu_r;
per_frame_51=q4 = mu_i;
per_frame_52=
per_frame_53=q5 = c_r;
per_frame_54=q6 = c_i;
per_frame_55=q7 = d_r;
per_frame_56=q8 = d_i;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_fc_main, uv ).xyz;
warp_5=`    //ret = lerp(GetBlur1(uv)*1,ret,ret);
warp_6=`    // darken (decay) over time
warp_7=`    if (ret.x+ret.y+ret.z < (0+((mid+bass+treb)/3)*.3)){
warp_8=`       ret.x = ret.x+.6;
warp_9=`       ret.y = ret.y+.6;
warp_10=`       ret.z = ret.z+.6;
warp_11=`       }else{
warp_12=`       ret = (ret - .005)*0.99; //or try: ret -= 0.004;
warp_13=`    }
warp_14=`}
comp_1=`shader_body
comp_2=`{
comp_3=`//initial textures:
comp_4=`//1. Main image
comp_5=`     float3 base=tex2D(sampler_main, uv);
comp_6=`//2. High quality noise sampler
comp_7=`     float3 hinoise=tex2D(sampler_noise_hq, uv);
comp_8=`
comp_9=`//declaring modifying vars:
comp_10=`//1. Perspective UV value
comp_11=`     float2 uvp=uv;
comp_12=`     uvp.y*=.38;
comp_13=`//2. Blur values
comp_14=`     float3 blpi=GetBlur1(uvp);
comp_15=`     float3 blpii=GetBlur2(uvp);
comp_16=`     float3 blpiii= GetBlur3(uvp);
comp_17=`     float3 blmi=GetBlur1(uv);
comp_18=`     float3 blmii=GetBlur2(uv);
comp_19=`     float3 blmiii=GetBlur3(uv);
comp_20=`
comp_21=`//Perspective modified samplers
comp_22=`//1. Perspective Main
comp_23=`     float3 pret=tex2D(sampler_main, uvp);
comp_24=`
comp_25=`//final return value     
comp_26=`float3 fret=(1/blpii-(pret*blpi)).xyz;
comp_27=`fret-=blmii*1.35;
comp_28=`
comp_29=`ret=1-fret*fret;  
comp_30=`}
