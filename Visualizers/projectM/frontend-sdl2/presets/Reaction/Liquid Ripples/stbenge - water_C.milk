MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.000000
fDecay=.975;
fVideoEchoZoom=1.00000
fVideoEchoAlpha=0.000000
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bMotionVectorsOn=0
bRedBlueStereo=0
nMotionVectorsX=12
nMotionVectorsY=9
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=.0001
fWaveScale=1.285751
fWaveSmoothing=0.630000
fWaveParam=0.000000
fModWaveAlphaStart=0.710000
fModWaveAlphaEnd=1.300000
fWarpAnimSpeed=1.000000
fWarpScale=1.331000
fZoomExponent=1.000000
fShader=0.000000
//zoom=1.0105
//rot=-0.010
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.000000
sx=1.000000
sy=1.000000
wave_x=0.500000
wave_y=0.500000
wave_r=0.65
wave_g=0.65
wave_b=0.65
ob_size=0.500000
ob_r=0.010000
ob_g=0.000000
ob_b=0.000000
ob_a=0.000000
ib_size=0.260000
ib_r=0.250000
ib_g=0.250000
ib_b=0.250000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.0
wavecode_0_smoothing=0.5
wavecode_0_r=1.0
wavecode_0_g=1.0
wavecode_0_b=1.0
wavecode_0_a=1.0

wave_0_per_frame1=q1=3.1415;
wave_0_per_frame2=q2=0;

wave_0_per_point1=pi=q1; pad=0.001;
wave_0_per_point2=q2=q2+1;
wave_0_per_point3=v=q2;
wave_0_per_point4=av=av+q1/100;
wave_0_per_point5=tv=tv+bass*.001;
wave_0_per_point6=a=(.5+cos(pi*6.3*tv)*.5)*(1-sample);
wave_0_per_point7=xv=xv+(int(rand(100))-int(rand(100)))*.0000001;
wave_0_per_point8=yv=yv+(int(rand(100))-int(rand(100)))*.0000001;
wave_0_per_point9= xv=if(below(xv,-pad),-pad,xv); yv=if(below(yv,-pad),-pad,yv);
wave_0_per_point10=xv=if(above(xv,pad),pad,xv); yv=if(above(yv,pad),pad,yv);
wave_0_per_point11=//xv=if(below(x2,.15),-xv,xv); xv=if(above(x2,.85),-xv,xv); yv=if(below(y2,.15),-yv,yv); yv=if(above(y2,.85),-yv,yv);
wave_0_per_point12=x2=if(below(x2,-.15),1.15,x2); x2=if(above(x2,1.15),-.15,x2);
wave_0_per_point13=y2=if(below(y2,-.15),1.15,y2); y2=if(above(y2,1.15),-.15,y2);
wave_0_per_point14=
wave_0_per_point15=
wave_0_per_point16=x2=x2+xv*.1; y2=y2+yv*.1;
wave_0_per_point17=
wave_0_per_point18=x=x2; y=y2;

warp_1=` float x, y;
warp_2=` float2 d;
warp_3=` float3 col_old, col;
warp_4=`
warp_5=` shader_body{
warp_6=`  d=2*texsize.zw; x=uv.x, y=uv.y;
warp_7=`  
warp_8=`  col_old=GetPixel(uv);
warp_9=`  col=
warp_10=`  (GetPixel(uv+d*float2(-1,0)).y
warp_11=`  +GetPixel(uv+d*float2(1,0)).y
warp_12=`  +GetPixel(uv+d*float2(0,-1)).y
warp_13=`  +GetPixel(uv+d*float2(0,1)).y)*.5-col_old.x
warp_14=`  +tex2D(sampler_pw_main,uv).z*.005; // remove this line to see the old method, controls the length of the waves
warp_15=` col*=.998;
warp_16=` col.z=
warp_17=`  (GetPixel(uv+d*float2(-1,0)).z
warp_18=`  +GetPixel(uv+d*float2(1,0)).z
warp_19=`  +GetPixel(uv+d*float2(0,-1)).z
warp_20=`  +GetPixel(uv+d*float2(0,1)).z
warp_21=`  +GetPixel(uv).z);
warp_22=` 
warp_23=` if(col.z>1)col.z=0;
warp_24=` ret=float3(col_old.y,col.x,col.z);
warp_25=` 
warp_26=` if(rad>aspect.y*.95)ret=1;
warp_27=`}

comp_1=` float s1, s2, s3, s4, ioffs, x, y;
comp_2=` float2 d;
comp_3=`
comp_4=` shader_body{
comp_5=`  ioffs=2; // higher values = smoother results for distortion
comp_6=`  x=uv.x, y=uv.y;
comp_7=`  d=texsize.zw;
comp_8=` 
comp_9=`  s1=GetPixel(uv+d*float2(x+ioffs,y)).x;
comp_10=` s2=GetPixel(uv+d*float2(x-ioffs,y)).x;
comp_11=` s3=GetPixel(uv+d*float2(x,y+ioffs)).x;
comp_12=` s4=GetPixel(uv+d*float2(x,y-ioffs)).x;
comp_13=`
comp_14=` // distorted noise
comp_15=` ret=tex2D(sampler_noise_hq,d*float2(time*20,time*10)+uv*.2+17000*d*float2( (s1-s2)/(ioffs*64), (s3-s4)/(ioffs*64) ) ).x;
comp_16=`
comp_17=` // distorted, blurred drop shadow to simulate refracted caustics, slow
comp_18=` //ret=float3(1.5,1.85,2.5)*(1-GetBlur1(d*float2(0,-30)+uv+17000*d*float2( (s1-s2)/(ioffs*64), (s3-s4)/(ioffs*64) ) ).x);
comp_19=`
comp_20=` // layer 3, in case you're interested
comp_21=` //ret=lum(tex2d(sampler_main, uv).z);
comp_22=`}