MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.630
fDecay=0.925
fVideoEchoZoom=2.518
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.700
zoom=10.89688
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99984
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=1.000
ib_g=1.000
ib_b=1.000
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=0.400
wavecode_0_g=0.400
wavecode_0_b=0.400
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=0.000
wavecode_1_g=0.000
wavecode_1_b=0.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.000
wavecode_2_g=0.000
wavecode_2_b=0.000
wavecode_2_a=0.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=5.44370
shapecode_0_ang=0.00000
shapecode_0_tex_ang=1.19381
shapecode_0_tex_zoom=0.18923
shapecode_0_r=1.000
shapecode_0_g=0.970
shapecode_0_b=1.000
shapecode_0_a=0.940
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=3.99882
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.25005
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.600
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.600
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=18
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=10
shapecode_2_x=0.463
shapecode_2_y=0.500
shapecode_2_rad=1.60089
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.67634
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.700
shapecode_2_g2=0.800
shapecode_2_b2=0.800
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=1
shapecode_3_sides=16
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=120
shapecode_3_x=0.503
shapecode_3_y=0.500
shapecode_3_rad=0.03760
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.11234
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.040
shape_3_per_frame1=sample=instance/num_inst;
shape_3_per_frame2=rad=.03+.02*sin(sample);
shape_3_per_frame3=
shape_3_per_frame4=t = time*.08;
shape_3_per_frame5=x = .4* (.4*sin(3*t- 14*sample) + .6*sin(5*t- 10*sample)  );
shape_3_per_frame6=y = .4* (.6*sin(6*t- 11*sample) + .4*sin(4*t- 15*sample) );
shape_3_per_frame7=
shape_3_per_frame8=p1 = 3*sin(sample*50+.2*time);
shape_3_per_frame9=p2 = 3*sin(sample*80+.1*time);
shape_3_per_frame10=
shape_3_per_frame11=x = .5+x*p1;
shape_3_per_frame12=y = .5+y*p2;
shape_3_per_frame13=
shape_3_per_frame14=r = .4*sin(sample*80);
shape_3_per_frame15=b = .8*sin(sample*66);
shape_3_per_frame16=g = .6*sin(sample*120);
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=//begin beat code
per_frame_25=volume = 0.3*(bass+mid);
per_frame_26=beatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);
per_frame_27=lastbeat = lastbeat + equal(lastbeat,0)*time;
per_frame_28=meanbass_att = 0.05*(meanbass_att*19 + bass_att);
per_frame_29=peakbass_att = max(bass_att,peakbass_att);
per_frame_30=beat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));
per_frame_31=beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_32=//Adjust responsiveness: To increase responsiveness, set the "0.96 and "0.996" on the next line to slightly lower values. Higher values decrease responsiveness.
per_frame_33=peakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);
per_frame_34=lastbeat = beat*time + (1-beat)*lastbeat;
per_frame_35=peakbass_att = max(peakbass_att,1.1*meanbass_att);
per_frame_36=//end beat code
per_frame_37=
per_frame_38=q8 = beat;
per_frame_39=warp = 0;
per_frame_40=
per_frame_41=tic = min(time-tin,.1);
per_frame_42=tin = time;
per_frame_43=
per_frame_44=vol = (bass_att + treb_att + mid_att)*.333333;
per_frame_45=
per_frame_46=ra = 1/tic*.25;
per_frame_47=
per_frame_48=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_49=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_50=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_51=vav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);
per_frame_52=
per_frame_53=tt = tt + tic*treb;
per_frame_54=mt = mt + tic*mid;
per_frame_55=bt = bt + tic*bass;
per_frame_56=vt = vt + tic*vav*vav;
per_frame_57=
per_frame_58=w1 = vt*.5;
per_frame_59=
per_frame_60=q1 = tt*4;
per_frame_61=q2 = mt*4;
per_frame_62=q3 = bt*4;
per_frame_63=
per_frame_64=st = .1;
per_frame_65=base = .05;
per_frame_66=q4 = base + treb_avg*st;
per_frame_67=q5 = base + mid_avg*st;
per_frame_68=q6 = base + bass_avg*st;
per_frame_69=
per_frame_70=
per_frame_71=dy = 1;
per_pixel_1=ti = time*.5;
per_pixel_2=
per_pixel_3=mx = x - .5 + .35*(sin(ti*1.1278) + sin(ti*.7458));
per_pixel_4=my = y - .5 + .35*(sin(ti*.9454) + sin(ti*1.2378));
per_pixel_5=dx = mx*cos(pow(mx*mx*1.5 + my*my,.5)*6 - q1)*q4;
per_pixel_6=mx = x - .5 + .25*(sin(ti*1.3185) + sin(ti*.9105));
per_pixel_7=my = y - .5 + .25*(sin(ti*.8113) + sin(ti*1.0287));
per_pixel_8=dx = dx + mx*cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;
per_pixel_9=mx = x - .5 + .35*(sin(ti*1.3488) + sin(ti*.8552));
per_pixel_10=my = y - .5 + .35*(sin(ti*.7366) + sin(ti*1.1447));
per_pixel_11=dx = dx + mx*cos(pow(mx*mx*1.5 + my*my,.5)*6 - q1)*q4;
per_pixel_12=mx = x - .5 + .25*(sin(ti*1.1385) + sin(ti*.9901));
per_pixel_13=my = y - .5 + .25*(sin(ti*.7028) + sin(ti*1.3548));
per_pixel_14=dx = dx + mx*cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;
per_pixel_15=mx = x - .5 + .35*(sin(ti*1.3544) + sin(ti*.8926));
per_pixel_16=my = y - .5 + .35*(sin(ti*.9021) + sin(ti*1.2468));
per_pixel_17=dx = dx + mx*cos(pow(mx*mx*1.5 + my*my,.5)*6 - q1)*q4;
per_pixel_18=mx = x - .5 + .25*(sin(ti*1.5416) + sin(ti*.7852));
per_pixel_19=my = y - .5 + .25*(sin(ti*.7436) + sin(ti*1.3266));
per_pixel_20=dx = dx + mx*cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;
per_pixel_21=
per_pixel_22=
warp_1=`shader_body
warp_2=`{
warp_3=`float2 uv_m = 1.0 - abs( frac( uv * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
warp_4=`ret.x = tex2D( sampler_fc_main, uv_m ).z; // first julia fractal iteration
warp_5=`ret.y = lerp(lerp(tex2D( sampler_fc_main, uv_m ).x, ret.x,0.5), 
warp_6=`             GetPixel(uv_orig).y,
warp_7=`             0.75); // 75% of motion blur to the green channel
warp_8=`
warp_9=`
warp_10=`float2 d = texsize.zw*6;
warp_11=`float2 uv_z = (uv_orig-0.5)*0.998 + 0.5; // a small dose of zoom-in
warp_12=`float3 dx = ( GetBlur1(uv_z + float2(1,0)*d) - GetBlur1(uv_z-float2(1,0)*d) );
warp_13=`float3 dy = ( GetBlur1(uv_z + float2(0,1)*d) - GetBlur1(uv_z-float2(0,1)*d) );
warp_14=`uv_z -=float2(dx.z,dy.z)*texsize.zw*2; //shortening of the nebulous matter
warp_15=`ret.z = max((tex2d(sampler_fc_main,uv_m).x-0.5)*3*saturate(1-length(uv_orig-0.5)*3.2), // feeded by the inner of the red channel
warp_16=`             tex2d(sampler_fc_main,uv_z).z);
warp_17=`ret.z += (tex2d(sampler_fc_main,uv_z).z - GetBlur1(saturate(uv_z)).z)*0.02; // sort of geiss' skin dot code
warp_18=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_19=`                      ((uv_z.xyy*q27
warp_20=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_21=`                      ).xyz*
warp_22=`                      float3(1,1,0)*0.05 + 
warp_23=`                      time*float3(0,0,1)*q29
warp_24=`                     );
warp_25=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_26=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_27=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_28=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`//uv = (uv-.5) * aspect.xy + .5;
comp_5=`
comp_6=`
comp_7=`float2 hor = float2 (texsize.z,0)*2;
comp_8=`float2 ver = float2 (0,texsize.w)*2;
comp_9=`float dx = GetBlur1 (uv-hor) - GetBlur1 (uv+hor);
comp_10=`float dy = GetBlur1 (uv-ver) - GetBlur1 (uv+ver);
comp_11=`float2 dz = float2 (dx,dy)*0.5;
comp_12=`
comp_13=`
comp_14=`
comp_15=`float3 crisp = tex2D(sampler_main, uv + dz) * 
comp_16=`               tex2D(sampler_main, 1-uv - dz);
comp_17=`float3 blur = GetBlur1(frac(uv + dz));
comp_18=`
comp_19=`float2 uv1 = uv-.5 + dz/4;
comp_20=`float2 uv2 = uv1*0+.2*float2 (cos(uv1*4+time));;
comp_21=`float3 dots = saturate(.01/(length(uv2))) * float3 (1,1,1);
comp_22=`
comp_23=`
comp_24=`ret = (crisp + blur*2) + q21*dots * (1-blur);
comp_25=`ret *= .7 ;
comp_26=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_27=`                      ((uv2.xyy*q28
comp_28=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_29=`                      ).xyz*
comp_30=`                      float3(1,1,0)*0.05 + 
comp_31=`                      time*float3(0,0,1)*q31
comp_32=`                     );
comp_33=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_34=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_35=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_36=`}
