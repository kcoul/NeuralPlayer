MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.420
fDecay=0.960
fVideoEchoZoom=0.997
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=4
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=1
bInvert=0
fWaveAlpha=100.000
fWaveScale=0.560
fWaveSmoothing=0.000
fWaveParam=-1.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.310
wave_b=1.000
wave_x=0.500
wave_y=0.000
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=beatrate=1;
per_frame_init_2=avgbeatrate=1;
per_frame_init_3=bbtime=1;
per_frame_init_4=lbbtime=1;
per_frame_init_5=avgdb=1;
per_frame_init_6=fakebeatcount=0;
per_frame_1=vb = vb*0.95 + (1-vb)*pow(bass*treb*mid,2)*0.02;
per_frame_2=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_3=vm = vm*0.95 + (1-vm)*pow(mid,2)*0.02;
per_frame_4=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_5=vt = vt*0.95 + (1-vt)*pow(treb,2)*0.02;
per_frame_6=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_7=vvb = min(1,max(0,vvb));
per_frame_8=vvm = min(1,max(0,vvm));
per_frame_9=vvt = min(1,max(0,vvt));
per_frame_10=q1 = vvb*2;//0.5 + vb - vvb;
per_frame_11=q2 = vvm*2;//0.5 + vm - vvm;
per_frame_12=q3 = vvt*2;//0.5 + vt - vvt;
per_frame_13=v=2;
per_frame_14=bb = bb - vvb*v;
per_frame_15=mm = mm - vvm*v;
per_frame_16=tt = tt - vvt*v;
per_frame_17=q4 = -bb;
per_frame_18=q5 = -mm;
per_frame_19=q6 = -tt;
per_frame_20=q4=(q1+q2+q3)*5;
per_frame_21=q5=(q1+q2+q3)*5;
per_frame_22=q6=(q1+q2+q3)*5;
per_frame_23=q7=(q1+q2+q3)*5;
per_frame_24=q8=(q1+q2+q3)*5;
per_frame_25=q9=(q1+q2+q3)*5;
per_frame_26=q10=(q1+q2+q3)*5;
per_frame_27=q11=(q1+q2+q3)*5;
per_frame_28=q12=(q1+q2+q3)*5;
per_frame_29=q13=(q1+q2+q3)*5;
per_frame_30=q14=(q1+q2+q3)*5;
per_frame_31=q15=(q1+q2+q3)*5;
per_frame_32=q16=(q1+q2+q3)*5;
per_frame_33=q17=(q1+q2+q3)*5;
per_frame_34=q18=(q1+q2+q3)*5;
per_frame_35=q19=(q1+q2+q3)*5;
per_frame_36=q20=(q1+q2+q3)*5;
per_frame_37=q21=(q1+q2+q3)*5;
per_frame_38=q22=(q1+q2+q3)*5;
per_frame_39=q23=(q1+q2+q3)*5;
per_frame_40=q24=(q1+q2+q3)*5;
per_frame_41=q25=(q1+q2+q3)*5;
per_frame_42=q26=(q1+q2+q3)*5;
per_frame_43=q27=(q1+q2+q3)*5;
per_frame_44=q28=(q1+q2+q3)*5;
per_frame_45=q29=(q1+q2+q3)*5;
per_frame_46=q30=(q1+q2+q3)*5;
per_frame_47=q31=(q1+q2+q3)*5;
per_frame_48=q32=(q1+q2+q3)*5;
per_frame_49=db=bass-lbass;
per_frame_50=lbass=bass;
per_frame_51=vol=1+bass+mid+treb;
per_frame_52=
per_frame_53=rs=above(abs(db),maxdb);
per_frame_54=drs=1-rs;
per_frame_55=
per_frame_56=beatrate=1*rs+beatrate*drs;
per_frame_57=avgbeatrate=1*rs+avgbeatrate*drs;
per_frame_58=bbtime=1*rs+bbtime*drs;
per_frame_59=lbbtime=1*rs+lbbtime*drs;
per_frame_60=avgdb=1*rs+avgdb*drs;
per_frame_61=fbc=fbc*drs+1*rs;
per_frame_62=bc=bc*drs+1*rs;
per_frame_63=faketime=1*rs+faketime*drs;
per_frame_64=lftime=1*rs+lftime*drs;
per_frame_65=
per_frame_66=
per_frame_67=avgdb=avgdb*.999+abs(db)*.001;
per_frame_68=
per_frame_69=rawbeatb=above(db*fakebeatb,avgdb*1.3);
per_frame_70=beatb=rawbeatb*above(time-lbbtime,.1*avgbeatrate);
per_frame_71=maxdb=max(maxdb*.9999,abs(db));
per_frame_72=
per_frame_73=bbtime=time*beatb;
per_frame_74=
per_frame_75=beatrate=beatb*(bbtime-lbbtime)+(1-beatb)*beatrate;
per_frame_76=avgbeatrate=beatb*(avgbeatrate*.999+beatrate*.001)+(1-beatb)*avgbeatrate;
per_frame_77=
per_frame_78=
per_frame_79=lbbtime=time*beatb+(1-beatb)*lbbtime;
per_frame_80=
per_frame_81=
per_frame_82=faketime=faketime+avgbeatrate*.005;
per_frame_83=//faketime=0;
per_frame_84=fakebeatb=cos(faketime)*.5+.5;
per_frame_85=fb=above(fakebeatb,.9999)*above(faketime-lftime,.5*avgfbr);
per_frame_86=fbr=(1-fb)*fbr+fb*(fbr*.99+(faketime-lftime)*.01);
per_frame_87=avgfbr=avgbr*(1-fb)+fb*(avgfbr*.99+fbr*.01);
per_frame_88=
per_frame_89=fbc=fbc+fb;
per_frame_90=lftime=faketime*fb+(1-fb)*lftime;
per_frame_91=
per_frame_92=
per_frame_93=
per_frame_94=bc=bc+beatb;
per_frame_95=
per_frame_96=monitor=beatb;
per_frame_97=q1=beatb;//equal((fbc-1)%4,0)*fb;
per_frame_98=q2=db;
per_frame_99=q3=fakebeatb;
per_frame_100=q4=avgbeatrate;
per_frame_101=q5=equal(bc%4,0)*beatb;
per_frame_102=q6=equal(bc%16,0)*beatb;
per_frame_103=q7=rawbeatb;
per_frame_104=
per_frame_105=decay=.99;
per_frame_106=warp=0;
per_frame_107=wrap=1;
per_frame_108=worp=0;
per_frame_109=
per_frame_110=dx=.005;
per_frame_111=chng=sin(time*.5);
per_frame_112=cthr=.9999;
per_frame_113=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_114=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_115=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_116=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_117=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_118=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_119=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_120=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_121=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_122=mq30=if(above(chng,cthr),rand(1)*.3,mq30);
per_frame_123=monitor=chng;
per_frame_124=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_125=q27=mq27;q28=mq28;q29=mq29;q30=mq30;
per_frame_126=
per_frame_127=monitor=mq1;
per_pixel_1=//flexi per vertex - circular canvas warps
per_pixel_2=cx1 = 0.5+sin(time*0.618)*0.2;
per_pixel_3=cy1 = 0.5+cos(time*1.618)*0.2;
per_pixel_4=dir = bass;
per_pixel_5=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_6=x1 = if( above(d,0.3),0,  sin(y-cy1)*0.05*dir);
per_pixel_7=y1 = if( above(d,0.3),0, -sin(x-cx1)*0.05*dir);
per_pixel_8=cx1 = 0.5+sin(time*2.618)*0.3;
per_pixel_9=cy1 = 0.5+cos(time*3.14)*0.3;
per_pixel_10=dir = -mid*2;
per_pixel_11=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_12=x2 = if( above(d,0.2),0,  sin(y-cy1)*0.05*dir);
per_pixel_13=y2 = if( above(d,0.2),0, -sin(x-cx1)*0.05*dir);
per_pixel_14=cx1 = 0.5+sin(-time*2.618)*0.4;
per_pixel_15=cy1 = 0.5+cos(-time*1.14)*0.4;
per_pixel_16=dir = treb*3;
per_pixel_17=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_18=x3 = if( above(d,0.1),0,  sin(y-cy1)*0.05*dir);
per_pixel_19=y3 = if( above(d,0.1),0, -sin(x-cx1)*0.05*dir);
per_pixel_20=dx = dx+x1+x2+x3;
per_pixel_21=dy = dy+y1+y2+y3;
per_pixel_22=
warp_1=`shader_body {
warp_2=`
warp_3=`//uv = uv_orig;
warp_4=`float corr = texsize.xy*texsize_noise_lq.zw;
warp_5=`float2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;
warp_6=`
warp_7=`float2 tmp = uv1;
warp_8=`tmp.x = ang*3; tmp.y = rad;
warp_9=`uv1 = tmp;
warp_10=`
warp_11=`float3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);
warp_12=`noise-=roam_sin*roam_cos.zxy*.2;
warp_13=`
warp_14=`float3 ret1 = GetBlur1 (uv)-.3;
warp_15=`float3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;
warp_16=`float3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;
warp_17=`
warp_18=`ret = -.4*blur + crisp;
warp_19=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_20=`                      ((float3(uv.x-uv1.y,uv1.x+uv.y,uv.x/uv1.y)*q27
warp_21=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_22=`                      ).xyz*
warp_23=`                      float3(1,1,0)*0.05 + 
warp_24=`                      time*float3(0,0,1)*q29
warp_25=`                     );
warp_26=`if(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; 
warp_27=`if(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z += (noise9).y*.5; 
warp_28=`if(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; 
warp_29=`    
warp_30=` ret *= 0.98 * pow(1-.01*q28*q28*rad,2); 
warp_31=`  ret -= 0.04;
warp_32=`}
comp_1=`sampler sampler_rose;
comp_2=`shader_body
comp_3=`{
comp_4=`
comp_5=`ret = tex2D(sampler_main, uv).z,
comp_6=`
comp_7=`ret = lerp (
comp_8=`GetBlur1(uv).z + GetBlur3(uv).z,
comp_9=`ret,
comp_10=`pow(ret,1));
comp_11=`  
comp_12=`float1 val = ret*6.2831853;
comp_13=`    ret = pow(ret,float3(.8,2,8))*1.25 - .25;
comp_14=`
comp_15=`ret-=roam_sin.wzy*roam_cos*.2;
comp_16=`ret *= GetBlur2(uv+float2(0,.01)).y*1.2;
comp_17=`
comp_18=`ret *= 2; //gamma
comp_19=`
comp_20=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_21=`                      ((uv.xyy*q28
comp_22=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_23=`                      ).xyz*
comp_24=`                      float3(1,1,0)*0.05 + 
comp_25=`                      time*float3(0,0,1)*q30 
comp_26=`                     );
comp_27=`if(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z -= (noise9).x*.5; 
comp_28=`if(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x -= (noise9).y*.5; 
comp_29=`if(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y -= (noise9).z*.5; 
comp_30=`}
