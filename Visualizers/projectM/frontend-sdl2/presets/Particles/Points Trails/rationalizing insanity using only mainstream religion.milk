MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=0.925
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00100
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=1.248
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=t1=0.5;
wave_0_init2=t2=0.5;
wave_0_init3=t3=0.5;
wave_0_per_point1=//x = a*sin(b*y) - z*cos(c*x); 
wave_0_per_point2=//x = 1.4*sin(q2*t2) - t3*cos(0.5*t1);
wave_0_per_point3=//y = z*sin(d*x) - cos(e*y); 
wave_0_per_point4=//y = t3*sin(-q1*t1) - cos(-0.5*t2);
wave_0_per_point5=//z = f*sin(x);
wave_0_per_point6=//z = 1*sin(t1);
wave_0_per_point7=
wave_0_per_point8=
wave_0_per_point9=x = sin(0.8*t2) - t3*cos(q5*t1);
wave_0_per_point10=y = t3*sin(q2*t1)-cos(-1.4*t2+0.1);
wave_0_per_point11=z = 1.1*sin(t1);
wave_0_per_point12=
wave_0_per_point13=
wave_0_per_point14=//transmit the x,y,z positions to the next point
wave_0_per_point15=t1=x;
wave_0_per_point16=t2=y;
wave_0_per_point17=t3=z;
wave_0_per_point18=
wave_0_per_point19=//adjust the scale and position of the entire attractor *after* we passed xyz to the next point
wave_0_per_point20=
wave_0_per_point21=x = (x*0.5+0.7);
wave_0_per_point22=y = (y*0.5+0.7);
wave_0_per_point23=
wave_0_per_point24=
wave_0_per_point25=r = q8;
wave_0_per_point26=b = q7;
wave_0_per_point27=g = q6;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.050
wave_1_init1=t1=0.5;
wave_1_init2=t2=0.5;
wave_1_init3=t3=0.5;
wave_1_per_point1=
wave_1_per_point2=
wave_1_per_point3=x = sin(0.8*t2) - t3*cos(q5*t1);
wave_1_per_point4=y = t3*sin(q2*t1)-cos(-1.4*t2+0.1);
wave_1_per_point5=z = 1.1*sin(t1);
wave_1_per_point6=
wave_1_per_point7=//transmit the x,y,z positions to the next point
wave_1_per_point8=t1=x;
wave_1_per_point9=t2=y;
wave_1_per_point10=t3=z;
wave_1_per_point11=
wave_1_per_point12=//adjust the scale and position of the entire attractor *after* we passed xyz to the next point
wave_1_per_point13=x = x*0.5+0.7;
wave_1_per_point14=y = y*0.5+0.7;
wave_1_per_point15=
wave_1_per_point16=
wave_1_per_point17=r = q8;
wave_1_per_point18=b = q7;
wave_1_per_point19=g = q6;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=vb = vb*0.95 + (1-vb)*pow(bass*treb*mid,2)*0.02;
per_frame_2=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_3=vm = vm*0.95 + (1-vm)*pow(mid,2)*0.02;
per_frame_4=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_5=vt = vt*0.95 + (1-vt)*pow(treb,2)*0.02;
per_frame_6=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_7=vvb = min(1,max(0,vvb));
per_frame_8=vvm = min(1,max(0,vvm));
per_frame_9=vvt = min(1,max(0,vvt));
per_frame_10=q1 = vvb*2;//0.5 + vb - vvb;
per_frame_11=q2 = vvm*2;//0.5 + vm - vvm;
per_frame_12=q3 = vvt*2*10;//0.5 + vt - vvt;
per_frame_13=v=2;
per_frame_14=bb = bb - vvb*v;
per_frame_15=mm = mm - vvm*v;
per_frame_16=tt = tt - vvt*v;
per_frame_17=q4 = -bb;
per_frame_18=q5 = -mm;
per_frame_19=q6 = -tt;
per_frame_20=q4=(q1+q2+q3)*5;
per_frame_21=q5=(q1+q2+q3)*5;
per_frame_22=q6=(q1+q2+q3)*5;
per_frame_23=q7=(q1+q2+q3)*5;
per_frame_24=q8=(q1+q2+q3)*5;
per_frame_25=q9=(q1+q2+q3)*5;
per_frame_26=q10=(q1+q2+q3)*5;
per_frame_27=q11=(q1+q2+q3)*5;
per_frame_28=q12=(q1+q2+q3)*5;
per_frame_29=q13=(q1+q2+q3)*5;
per_frame_30=q14=(q1+q2+q3)*5;
per_frame_31=q15=(q1+q2+q3)*5;
per_frame_32=q16=(q1+q2+q3)*5;
per_frame_33=q17=(q1+q2+q3)*5;
per_frame_34=q18=(q1+q2+q3)*5;
per_frame_35=q19=(q1+q2+q3)*5;
per_frame_36=q20=(q1+q2+q3)*5;
per_frame_37=q21=(q1+q2+q3)*5;
per_frame_38=q22=(q1+q2+q3)*5;
per_frame_39=q23=(q1+q2+q3)*5;
per_frame_40=q24=(q1+q2+q3)*5;
per_frame_41=q25=(q1+q2+q3)*5;
per_frame_42=q26=(q1+q2+q3)*5;
per_frame_43=q27=(q1+q2+q3)*5;
per_frame_44=q28=(q1+q2+q3)*5;
per_frame_45=q29=(q1+q2+q3)*5;
per_frame_46=q30=(q1+q2+q3)*3;
per_frame_47=q31=(q1+q2+q3)*5;
per_frame_48=q32=(q1+q2+q3)*5;
per_frame_49=mv_g=1-bass_att*.4;
per_frame_50=beat=if(above(bass*bass_att,4.5),1-beat,beat);
per_frame_51=q1=beat*2-1;
per_frame_52=
per_frame_53=amp =amp*.8+.2*(bass_att+mid_att+treb_att)*.3;
per_frame_54=q2 = min(amp,1);
per_frame_55=trebcap=trebcap*.7+.16*treb;
per_frame_56=q3=trebcap*2;
per_frame_57=monitor = q3;
per_pixel_1=wang = (3+q3)*x+time*1.7+bass*.1;
per_pixel_2=in = 0;
per_pixel_3=in = in + below(abs(x-.25),.05)*below(abs(y-.5),.25);
per_pixel_4=in = below(abs(y-(.5+.5*sin(wang)*q2)),.1);
per_pixel_5=in=bnot(bnot(in));
per_pixel_6=dx = .02*in;
per_pixel_7=dy = .08*cos(wang)*q2*in;
per_pixel_8=
per_pixel_9=dx = dx+bnot(in)*.005*q1;
per_pixel_10=dy = dy+bnot(in)*cos(wang)*-.01*q1;
per_pixel_11=
per_pixel_12=
per_pixel_13=cx1 = 0.5+sin(time*0.618)*0.2;
per_pixel_14=cy1 = 0.5+cos(time*1.618)*0.2;
per_pixel_15=
per_pixel_16=dir = bass;
per_pixel_17=
per_pixel_18=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_19=
per_pixel_20=x1 = if( above(d,0.3),0,  sin(y-cy1)*0.05*dir);
per_pixel_21=y1 = if( above(d,0.3),0, -sin(x-cx1)*0.05*dir);
per_pixel_22=
per_pixel_23=
per_pixel_24=cx1 = 0.5+sin(time*2.618)*0.3;
per_pixel_25=cy1 = 0.5+cos(time*3.14)*0.3;
per_pixel_26=
per_pixel_27=dir = -mid*2;
per_pixel_28=
per_pixel_29=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_30=
per_pixel_31=x2 = if( above(d,0.2),0,  sin(y-cy1)*0.05*dir);
per_pixel_32=y2 = if( above(d,0.2),0, -sin(x-cx1)*0.05*dir);
per_pixel_33=
per_pixel_34=cx1 = 0.5+sin(-time*2.618)*0.4;
per_pixel_35=cy1 = 0.5+cos(-time*1.14)*0.4;
per_pixel_36=
per_pixel_37=dir = treb*3;
per_pixel_38=
per_pixel_39=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_40=
per_pixel_41=x3 = if( above(d,0.1),0,  sin(y-cy1)*0.05*dir);
per_pixel_42=y3 = if( above(d,0.1),0, -sin(x-cx1)*0.05*dir);
per_pixel_43=
per_pixel_44=
per_pixel_45=dx = dx+x1+x2+x3;
per_pixel_46=dy = dy+y1+y2+y3;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame 3 times, creating radial blur
warp_4=`    float2 v = normalize(uv - 0.5);
warp_5=`    //v = v.yx * float2(1,-1);
warp_6=`    v *= texsize.zw;
warp_7=`    ret = 0.2*(   tex2D( sampler_main, uv ).xyz
warp_8=`                   +  tex2D(sampler_main, uv - v*2.5 ).xyz
warp_9=`                   +  tex2D(sampler_main, uv - v*5.5 ).xyz
warp_10=`                   +  tex2D(sampler_main, uv - v*9  ).xyz
warp_11=`                   +  tex2D(sampler_main, uv - v*13 ).xyz
warp_12=`    );
warp_13=`    
warp_14=`    // darken over time
warp_15=`    ret *= 0.98; //or try: ret -= 0.004;
warp_16=`}
comp_1=`float3 ret1, neu, crisp, blur;
comp_2=`float2 uv2, uv3;
comp_3=`
comp_4=`shader_body
comp_5=`{
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5;
comp_8=`uv *= aspect.xy;    
comp_9=`
comp_10=`float2 tmp = uv;
comp_11=`float dist = 1;
comp_12=`float inten = 1;
comp_13=`float mask = 0;
comp_14=`ret1 = 0;
comp_15=`int anz = 3;
comp_16=`float n = 0;
comp_17=`float t_rel = q29;
comp_18=`while (n <= anz) {
comp_19=`    ang2 = 6.28*n/anz+q30;
comp_20=`    c = cos(ang2);
comp_21=`    s = sin(ang2);
comp_22=`    uv2.x =  uv.x*c - uv.y*s;
comp_23=`    uv2.y =  uv.x*s + uv.y*c;
comp_24=`    uv2*= aspect.yx;
comp_25=`
comp_26=`    dist = 1-frac(n/anz+t_rel); //evtl sqrt !
comp_27=`
comp_28=`    inten =  4*dist*(1-dist*dist);
comp_29=`    uv3 = 3*uv2*dist + 0.5+.0*float2(q5,q6);
comp_30=`    crisp = GetPixel(uv3);
comp_31=`    blur = GetBlur1(frac(uv3)) * float3 (.8,.9,1);
comp_32=`    ret1 = max(ret1,(crisp+blur)*inten);
comp_33=`n++;
comp_34=`}
comp_35=`
comp_36=`
comp_37=`float3 ret1 = ret1 ;
comp_38=`//ret1 = GetPixel(.5+uv_orig*aspect.yx*1.2);
comp_39=`
comp_40=`
comp_41=`ret = ret1;
comp_42=`
comp_43=`}
