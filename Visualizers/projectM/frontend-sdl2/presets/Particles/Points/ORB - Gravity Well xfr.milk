MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=2.000
fDecay=0.900
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=0.96000
rot=-6.27999
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00052
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=4.950
mv_r=0.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.100
wave_0_per_point1=u = abs(cos(q1*0.1))*3.14159;
wave_0_per_point2=v = abs(cos(q1*0.015))*3.14159*2;
wave_0_per_point3=s = sample*3.14*100;
wave_0_per_point4=ss = sample*6.28*1000;
wave_0_per_point5=
wave_0_per_point6=//draw
wave_0_per_point7=xs = 0.3*sin(s)*cos(ss);
wave_0_per_point8=ys = 0.3*sin(s)*sin(ss);
wave_0_per_point9=zs = 0.3*cos(s);
wave_0_per_point10=
wave_0_per_point11=
wave_0_per_point12=//rotate x axis
wave_0_per_point13=angle = sin(q1*0.027)*6.28;
wave_0_per_point14=yx = ys*cos(angle) - zs*sin(angle);
wave_0_per_point15=zx = ys*sin(angle) + zs*cos(angle);
wave_0_per_point16=xx = xs;
wave_0_per_point17=
wave_0_per_point18=//rotate y axis
wave_0_per_point19=angle2 = sin(q1*0.03)*6.28;
wave_0_per_point20=xd = xx*cos(angle2) - zx*sin(angle2);
wave_0_per_point21=zd = xx*sin(angle2) + zx*cos(angle2);
wave_0_per_point22=yd = yx;
wave_0_per_point23=
wave_0_per_point24=//rotaye z axis
wave_0_per_point25=angle3 = sin(q1*0.028)*6.28;
wave_0_per_point26=xn = xd*cos(angle3) - yd*sin(angle3);
wave_0_per_point27=yn = xd*sin(angle3) + yd*cos(angle3);
wave_0_per_point28=
wave_0_per_point29=zd = zd + 2;
wave_0_per_point30=
wave_0_per_point31=x = xn*zd*0.3 + 0.5;
wave_0_per_point32=y = yn*zd*0.3*1.2 + 0.5;
wave_0_per_point33=
wave_0_per_point34=
wave_0_per_point35=r = 0.5 + 0.5*sin(q1*0.2 + x + x) + xn;
wave_0_per_point36=g = 0.5 + 0.5*sin(q1*0.5 + x + y) + yn;
wave_0_per_point37=b = 0.5 + 0.5*sin(q1*0.36 + y + y) + zn;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=//init
wave_1_per_point2=zs = if(below(zs,100),100,zs);
wave_1_per_point3=zs = if(above(zs, 10100),100, zs);
wave_1_per_point4=
wave_1_per_point5=zs = if(above(zs, 1100),1, zs);
wave_1_per_point6=
wave_1_per_point7=pi = 3.141592;
wave_1_per_point8=
wave_1_per_point9=samp = sample;
wave_1_per_point10=
wave_1_per_point11=xx = cos(q1*samp+ q1)*1;
wave_1_per_point12=yy = sin(q1*samp+ q1*0.9)*1;
wave_1_per_point13=
wave_1_per_point14=zz = 2.5*samp*0.1;
wave_1_per_point15=
wave_1_per_point16=x = xx*zz*4;
wave_1_per_point17=y = yy*zz*4;
wave_1_per_point18=
wave_1_per_point19=x = x*0.5 + 0.5;
wave_1_per_point20=y = y*0.5 + 0.5;
wave_1_per_point21=
wave_1_per_point22=r = 1;;//0.5 + 0.5*cos(q1*2*0.1)*sin(q1*0.1);
wave_1_per_point23=g = 1;//0.5 +  0.5*sin(q1*2*0.1)*sin(q1*0.1);
wave_1_per_point24=b = 1;//0.5 + 0.5*cos(q1);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=0.010
wave_2_per_point1=//init
wave_2_per_point2=zs = if(below(zs,100),100,zs);
wave_2_per_point3=zs = if(above(zs, 10100),100, zs);
wave_2_per_point4=
wave_2_per_point5=zs = if(above(zs, 1100),1, zs);
wave_2_per_point6=
wave_2_per_point7=pi = 3.141592;
wave_2_per_point8=
wave_2_per_point9=samp = sample;
wave_2_per_point10=
wave_2_per_point11=xx = cos(q1*samp+ q1)*1;
wave_2_per_point12=yy = sin(q1*samp+ q1*0.9)*1;
wave_2_per_point13=
wave_2_per_point14=zz = 2.5*samp*0.1;
wave_2_per_point15=
wave_2_per_point16=x = xx*zz*4;
wave_2_per_point17=y = yy*zz*4;
wave_2_per_point18=
wave_2_per_point19=x = x*0.5 + 0.5;
wave_2_per_point20=y = y*0.5 + 0.5;
wave_2_per_point21=
wave_2_per_point22=r = 0.5 + 0.5*cos(q1*2*0.1)*sin(q1*0.1);
wave_2_per_point23=g = 0.5 +  0.5*sin(q1*2*0.1)*sin(q1*0.1);
wave_2_per_point24=b = 0.5 + 0.5*cos(q1);
wave_2_per_point25=
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=//apply zoom burst on beat
wave_3_per_point2=flag = above(q3,2);
wave_3_per_point3=//state zero is ready state
wave_3_per_point4=state = state + flag*equal(state,0);
wave_3_per_point5=
wave_3_per_point6=//upwards flight
wave_3_per_point7=yval = if(equal(state,0),0, yval);
wave_3_per_point8=yval = yval + 0.00004*equal(state,1);
wave_3_per_point9=ymax = if(equal(state,0),int(rand(100))*0.004,ymax);
wave_3_per_point10=
wave_3_per_point11=//hit apogee
wave_3_per_point12=state = if(above(yval,0.5+ymax),2,state);
wave_3_per_point13=
wave_3_per_point14=//reset variable
wave_3_per_point15=yval = if(equal(state,0),0, yval);
wave_3_per_point16=burst = if(equal(state,0),0.001,burst);
wave_3_per_point17=alphax = if(equal(state,0),1,alphax);
wave_3_per_point18=xdriftinc = if(equal(state,0),0,xdriftinc);
wave_3_per_point19=
wave_3_per_point20=burstspeed = if(equal(state,0),int(rand(10)),burstspeed);
wave_3_per_point21=xdrift = if(equal(state,0),int(rand(20)),xdrift);
wave_3_per_point22=//to get the numbers small enough have to use constants
wave_3_per_point23=xdriftinc = xdriftinc
wave_3_per_point24=+ equal(xdrift,0)*equal(state,1)*0.00002
wave_3_per_point25=+ equal(xdrift,1)*equal(state,1)*0.000018
wave_3_per_point26=+ equal(xdrift,2)*equal(state,1)*0.000016
wave_3_per_point27=+ equal(xdrift,3)*equal(state,1)*0.000014
wave_3_per_point28=+ equal(xdrift,4)*equal(state,1)*0.000012
wave_3_per_point29=+ equal(xdrift,5)*equal(state,1)*0.00001
wave_3_per_point30=+ equal(xdrift,6)*equal(state,1)*0.000008
wave_3_per_point31=+ equal(xdrift,7)*equal(state,1)*0.000006
wave_3_per_point32=+ equal(xdrift,8)*equal(state,1)*0.000004
wave_3_per_point33=+ equal(xdrift,9)*equal(state,1)*0.000002
wave_3_per_point34=+ equal(xdrift,11)*equal(state,1)*-0.000002
wave_3_per_point35=+ equal(xdrift,12)*equal(state,1)*-0.000004
wave_3_per_point36=+ equal(xdrift,13)*equal(state,1)*-0.000006
wave_3_per_point37=+ equal(xdrift,14)*equal(state,1)*-0.000008
wave_3_per_point38=+ equal(xdrift,15)*equal(state,1)*-0.00001
wave_3_per_point39=+ equal(xdrift,16)*equal(state,1)*-0.000012
wave_3_per_point40=+ equal(xdrift,17)*equal(state,1)*-0.000014
wave_3_per_point41=+ equal(xdrift,18)*equal(state,1)*-0.000016
wave_3_per_point42=+ equal(xdrift,19)*equal(state,1)*-0.000018;
wave_3_per_point43=
wave_3_per_point44=burst = burst
wave_3_per_point45=+ equal(burstspeed,0)*equal(state,2)*0.000024
wave_3_per_point46=+ equal(burstspeed,1)*equal(state,2)*0.000022
wave_3_per_point47=+ equal(burstspeed,2)*equal(state,2)*0.00002
wave_3_per_point48=+ equal(burstspeed,3)*equal(state,2)*0.000018
wave_3_per_point49=+ equal(burstspeed,4)*equal(state,2)*0.000016
wave_3_per_point50=+ equal(burstspeed,5)*equal(state,2)*0.000014
wave_3_per_point51=+ equal(burstspeed,6)*equal(state,2)*0.000012
wave_3_per_point52=+ equal(burstspeed,7)*equal(state,2)*0.00001
wave_3_per_point53=+ equal(burstspeed,8)*equal(state,2)*0.000008
wave_3_per_point54=+ equal(burstspeed,9)*equal(state,2)*0.000008;
wave_3_per_point55=
wave_3_per_point56=alphax = alphax - 0.00004*equal(state,2);
wave_3_per_point57=state = if(below(alphax,0),0,state);
wave_3_per_point58=
wave_3_per_point59=
wave_3_per_point60=s = sample*3.14*100;
wave_3_per_point61=ss = sample*6.28*1000;
wave_3_per_point62=
wave_3_per_point63=//draw torus
wave_3_per_point64=xs = (burst + 0.0001*cos(s))*cos(ss);
wave_3_per_point65=ys = (burst + 0.0001*cos(s))*sin(ss);
wave_3_per_point66=zs = 0.1*burst*sin(s);
wave_3_per_point67=
wave_3_per_point68=
wave_3_per_point69=//rotate x axis
wave_3_per_point70=angle = sin(-q1*0.035)*6.28;
wave_3_per_point71=yx = ys*cos(angle) - zs*sin(angle);
wave_3_per_point72=zx = ys*sin(angle) + zs*cos(angle);
wave_3_per_point73=xx = xs;
wave_3_per_point74=
wave_3_per_point75=//rotate y axis
wave_3_per_point76=angle2 = sin(-q1*0.03)*6.28;
wave_3_per_point77=xd = xx*cos(angle2) - zx*sin(angle2);
wave_3_per_point78=zd = xx*sin(angle2) + zx*cos(angle2);
wave_3_per_point79=yd = yx;
wave_3_per_point80=
wave_3_per_point81=//rotaye z axis
wave_3_per_point82=angle3 = sin(-q1*0.022)*6.28;
wave_3_per_point83=xn = xd*cos(angle3) - yd*sin(angle3);
wave_3_per_point84=yn = xd*sin(angle3) + yd*cos(angle3);
wave_3_per_point85=
wave_3_per_point86=zd = zd + 2;
wave_3_per_point87=
wave_3_per_point88=x = xn*zd*0.3 + 0.5;
wave_3_per_point89=y = yn*zd*0.3*1.2;
wave_3_per_point90=
wave_3_per_point91=
wave_3_per_point92=x = x + xdriftinc;
wave_3_per_point93=y = y + sin(yval*1.5) - 0.18;
wave_3_per_point94=
wave_3_per_point95=
wave_3_per_point96=r = 0.5 + 0.5*sin(q1*1.3 + x + x);
wave_3_per_point97=g = 0.5 + 0.5*sin(q1*1.1 + x + y);
wave_3_per_point98=b = 0.5 + 0.5*sin(q1*1.66 + y + y);
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=2.66718
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.45112
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=0.000
shapecode_0_a=0.150
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.050
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shape_0_per_frame1=r = 0.1 + 0.5*sin(q1);
shape_0_per_frame2=g = 0.1 + 0.5*sin(q1*0.9878);
shape_0_per_frame3=b = 0.1 + 0.5*sin(q1*0.897);
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=2.38096
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.42497
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=1.000
shapecode_1_a=0.400
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.900
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=1.000
shape_1_per_frame1=r = 0.1 + 0.5*sin(q1);
shape_1_per_frame2=g = 0.1 + 0.5*sin(q1*0.9878);
shape_1_per_frame3=b = 0.1 + 0.5*sin(q1*0.897);
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=1.000
shapecode_2_y=0.500
shapecode_2_rad=0.10201
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shape_2_per_frame1=x = 0.5 + 0.02*sin(time);
shape_2_per_frame2=y = 0.5 + 0.02*cos(time);
shape_2_per_frame3=
shape_2_per_frame4=r = 0.1 + 0.5*sin(q1*0.01);
shape_2_per_frame5=g = 0.1 + 0.5*sin(q1*0.09878);
shape_2_per_frame6=b = 0.1 + 0.5*sin(q1*0.0897);
shape_2_per_frame7=
shape_2_per_frame8=r2 = 0.1 + 0.5*sin(q1*0.035);
shape_2_per_frame9=g2 = 0.1 + 0.5*sin(q1*0.09878);
shape_2_per_frame10=b2 = 0.1 + 0.5*sin(q1*0.0897);
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
shape_3_per_frame1=x = 0.5 + 0.02*sin(time*0.5 + 1.68);
shape_3_per_frame2=y = 0.5 + 0.02*cos(time*0.5 + 1.68);
shape_3_per_frame3=
shape_3_per_frame4=
shape_3_per_frame5=r = 0.1 + 0.5*sin(q1*0.0144);
shape_3_per_frame6=g = 0.1 + 0.5*sin(q1*0.05878);
shape_3_per_frame7=b = 0.1 + 0.5*sin(q1*0.0797);
shape_3_per_frame8=
shape_3_per_frame9=r2 = 0.1 + 0.5*sin(q1*0.065);
shape_3_per_frame10=g2 = 0.1 + 0.5*sin(q1*0.07878);
shape_3_per_frame11=b2 = 0.1 + 0.5*sin(q1*0.0897);
per_frame_init_1=state = 0;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=basstime = basstime + bass*0.06;
per_frame_26=q1 = basstime;
per_frame_27=
per_frame_28=q9 = basstime * 0.000005;
per_frame_29=
per_frame_30=basstime = if(below(basstime,1000),1000,basstime);
per_frame_31=
per_frame_32=vol = pow(bass+mid+treb,2);
per_frame_33=basssum = vol;
per_frame_34=
per_frame_35=stickybit = time%2;
per_frame_36=
per_frame_37=//avg vol
per_frame_38=//buffer 1
per_frame_39=volAvg = volAvg + vol*equal(stickybit,1);
per_frame_40=//number of samples 1 or framerate
per_frame_41=sample1 = sample1 + equal(stickybit,1);
per_frame_42=//buffer 2
per_frame_43=volAvg2 = volAvg2 + vol*equal(stickybit,0);
per_frame_44=//number of samples 2
per_frame_45=sample2 = sample2 + equal(stickybit,0);
per_frame_46=
per_frame_47=//transision
per_frame_48=edge = bnot(equal(bit2,stickybit));
per_frame_49=
per_frame_50=volAvg = volAvg - volAvg*edge*stickybit;
per_frame_51=volAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);
per_frame_52=
per_frame_53=sample1 = sample1  - sample1*edge*stickybit;
per_frame_54=sample2 = sample2  - sample2*edge*equal(stickybit,0);
per_frame_55=
per_frame_56=//test vol against avg buffer lvl
per_frame_57=diff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);
per_frame_58=diff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);
per_frame_59=
per_frame_60=q3 = diff;
per_frame_61=
per_frame_62=bit2 = time%2;
per_frame_63=
per_frame_64=difftime = difftime + diff*0.03;
per_frame_65=q2 = difftime;
per_frame_66=
per_frame_67=//fix a strange error
per_frame_68=difftime = if(above(difftime,2000),0, difftime);
per_frame_69=
per_frame_70=
per_frame_71=
per_frame_72=monitor = q1;
per_pixel_1=zoom = 1;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_main, uv ).xyz;
warp_5=`
warp_6=`    // feather pen
warp_7=`    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1-3*length(texsize.zw)) + 0.5 ).xyz);
warp_8=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_9=`                      ((uv.xyy*q27
warp_10=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_11=`                      ).xyz*
warp_12=`                      float3(1,1,0)*0.05 + 
warp_13=`                      time*float3(0,0,1)*q29
warp_14=`                     );
warp_15=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_16=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_17=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_18=`    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1+3*length(texsize.zw)) + 0.5 ).xyz);
warp_19=`
warp_20=`    // darken over time
warp_21=`    ret -= 0.02;
warp_22=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    uv *= 0.5;
comp_4=`    ret = tex2D(sampler_main, uv).xyz;
comp_5=`    ret = max(ret, tex2D(sampler_main,uv + float2(0.5,0)).xyz);
comp_6=`    ret = max(ret, tex2D(sampler_main,uv + float2(0,0.5)).xyz);
comp_7=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_8=`                      ((uv.xyy*q28
comp_9=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_10=`                      ).xyz*
comp_11=`                      float3(1,1,0)*0.05 + 
comp_12=`                      time*float3(0,0,1)*q31
comp_13=`                     );
comp_14=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_15=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_16=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_17=`    ret = max(ret, tex2D(sampler_main,uv + float2(0.5,0.5)).xyz);
comp_18=`    ret *= 1.3; // a little bit of overbright
comp_19=`ret=.6-ret;
comp_20=`}
comp_21=`
comp_22=`
