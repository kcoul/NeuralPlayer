MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=2.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=0.99950
fShader=0.000
zoom=0.99980
rot=0.02000
cx=0.500
cy=0.500
dx=0.00000
dy=-0.00800
warp=0.01000
sx=1.00980
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.800
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=branch=int(rand(2));
wave_0_per_point2=
wave_0_per_point3=//base
wave_0_per_point4=wx=if(equal(sc,0),.5,wx);
wave_0_per_point5=wy=if(equal(sc,0),0,wy);
wave_0_per_point6=
wave_0_per_point7=wx=if(equal(sc,1),.5,wx);
wave_0_per_point8=wy=if(equal(sc,1),.1,wy);
wave_0_per_point9=
wave_0_per_point10=//calculate previous branch length
wave_0_per_point11=d=if(below(sc,2),.3,.7*d);
wave_0_per_point12=
wave_0_per_point13=//angle
wave_0_per_point14=wainc=if(equal(branch,1),.2+sin(time),-.2);
wave_0_per_point15=
wave_0_per_point16=wa=if(below(sc,2),3.1415927*.5,wa+wainc);
wave_0_per_point17=
wave_0_per_point18=//branches
wave_0_per_point19=wx=if(above(sc,2),wx+cos(wa)*d,wx);
wave_0_per_point20=wy=if(above(sc,2),wy+sin(wa)*d,wy);
wave_0_per_point21=
wave_0_per_point22=//sample count
wave_0_per_point23=sc=if(equal(sc,11),0,sc+1);
wave_0_per_point24=
wave_0_per_point25=a=if(below(sc,2),0,.1);
wave_0_per_point26=
wave_0_per_point27=x=wx;
wave_0_per_point28=y=wy;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=branch=int(rand(2));
wave_1_per_point2=
wave_1_per_point3=//base
wave_1_per_point4=wx=if(equal(sc,0),.5,wx);
wave_1_per_point5=wy=if(equal(sc,0),1,wy);
wave_1_per_point6=
wave_1_per_point7=wx=if(equal(sc,1),.5,wx);
wave_1_per_point8=wy=if(equal(sc,1),.9,wy);
wave_1_per_point9=
wave_1_per_point10=//calculate previous branch length
wave_1_per_point11=d=if(below(sc,2),.3,.7*d);
wave_1_per_point12=
wave_1_per_point13=//angle
wave_1_per_point14=wainc=if(equal(branch,1),.2+sin(time),-.2);
wave_1_per_point15=
wave_1_per_point16=wa=if(below(sc,2),3.1415927*1.5,wa+wainc);
wave_1_per_point17=
wave_1_per_point18=//branches
wave_1_per_point19=wx=if(above(sc,2),wx+cos(wa)*d,wx);
wave_1_per_point20=wy=if(above(sc,2),wy+sin(wa)*d,wy);
wave_1_per_point21=
wave_1_per_point22=//sample count
wave_1_per_point23=sc=if(equal(sc,11),0,sc+1);
wave_1_per_point24=
wave_1_per_point25=a=if(below(sc,2),0,.1);
wave_1_per_point26=
wave_1_per_point27=x=wx;
wave_1_per_point28=y=wy;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=branch=int(rand(2));
wave_2_per_point2=
wave_2_per_point3=//base
wave_2_per_point4=wx=if(equal(sc,0),0,wx);
wave_2_per_point5=wy=if(equal(sc,0),.5,wy);
wave_2_per_point6=
wave_2_per_point7=wx=if(equal(sc,1),.1,wx);
wave_2_per_point8=wy=if(equal(sc,1),.5,wy);
wave_2_per_point9=
wave_2_per_point10=//calculate previous branch length
wave_2_per_point11=d=if(below(sc,2),.3,.7*d);
wave_2_per_point12=
wave_2_per_point13=//angle
wave_2_per_point14=wainc=if(equal(branch,1),.25+cos(time),-.25);
wave_2_per_point15=
wave_2_per_point16=wa=if(below(sc,2),3.1415927*2,wa+wainc);
wave_2_per_point17=
wave_2_per_point18=//branches
wave_2_per_point19=wx=if(above(sc,2),wx+cos(wa)*d,wx);
wave_2_per_point20=wy=if(above(sc,2),wy+sin(wa)*d,wy);
wave_2_per_point21=
wave_2_per_point22=//sample count
wave_2_per_point23=sc=if(equal(sc,11),0,sc+1);
wave_2_per_point24=
wave_2_per_point25=a=if(below(sc,2),0,.1);
wave_2_per_point26=
wave_2_per_point27=x=wx;
wave_2_per_point28=y=wy;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=branch=int(rand(2));
wave_3_per_point2=
wave_3_per_point3=//base
wave_3_per_point4=wx=if(equal(sc,0),1,wx);
wave_3_per_point5=wy=if(equal(sc,0),.5,wy);
wave_3_per_point6=
wave_3_per_point7=wx=if(equal(sc,1),.9,wx);
wave_3_per_point8=wy=if(equal(sc,1),.5,wy);
wave_3_per_point9=
wave_3_per_point10=//calculate previous branch length
wave_3_per_point11=d=if(below(sc,2),.3,.7*d);
wave_3_per_point12=
wave_3_per_point13=//angle
wave_3_per_point14=wainc=if(equal(branch,1),.25+cos(time),-.25);
wave_3_per_point15=
wave_3_per_point16=wa=if(below(sc,2),3.1415927*1,wa+wainc);
wave_3_per_point17=
wave_3_per_point18=//branches
wave_3_per_point19=wx=if(above(sc,2),wx+cos(wa)*d,wx);
wave_3_per_point20=wy=if(above(sc,2),wy+sin(wa)*d,wy);
wave_3_per_point21=
wave_3_per_point22=//sample count
wave_3_per_point23=sc=if(equal(sc,11),0,sc+1);
wave_3_per_point24=
wave_3_per_point25=a=if(below(sc,2),0,.1);
wave_3_per_point26=
wave_3_per_point27=x=wx;
wave_3_per_point28=y=wy;
shapecode_0_enabled=1
shapecode_0_sides=3
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.46815
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.63904
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.500
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ang=time*.1;
shape_0_per_frame2=
shape_0_per_frame3=sides=int(abs(sin(time*.5)*7));
shapecode_1_enabled=1
shapecode_1_sides=3
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.02743
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=0.050
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ang=time*.1;
shape_1_per_frame2=
shape_1_per_frame3=r=.7+(sin(time)*.3);
shape_1_per_frame4=g=.7+(cos(time)*.3);
shape_1_per_frame5=b=.7+(sin(time+.12)*.3);
shape_1_per_frame6=
shape_1_per_frame7=rad=rad+(treb_att*bass_att*.5);
shape_1_per_frame8=x=.5+(sin(time)*.5);
shapecode_2_enabled=1
shapecode_2_sides=5
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.02508
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.050
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ang=time*.25;
shape_2_per_frame2=
shape_2_per_frame3=g=.7+(sin(time)*.3);
shape_2_per_frame4=b=.7+(cos(time)*.3);
shape_2_per_frame5=r=.7+(sin(time+.12)*.3);
shape_2_per_frame6=
shape_2_per_frame7=r2=.7+(sin(time)*.3);
shape_2_per_frame8=g2=.7+(cos(time)*.3);
shape_2_per_frame9=b2=.7+(sin(time+.12)*.3);
shape_2_per_frame10=
shape_2_per_frame11=rad=rad+(treb_att*bass_att*.5);
shape_2_per_frame12=y=.5+(sin(time)*.25);
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=2.66717
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.60804
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=0.100
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.010
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=//spiral collide frame
per_frame_2=t = t + 2.5/fps;
per_frame_3=t = if(above(t,2),t-2,t);
per_frame_4=q22 = -t;
per_frame_5=// Flexis dampened sound response functions
per_frame_6=db = db*0.98 + bass_att*0.2; // dampener
per_frame_7=bb = bb + db*0.1; // accumulation, replace time expressions with this ;)
per_frame_8=dt = dt*0.98 + treb_att*0.2;
per_frame_9=tt = tt + dt*0.1;
per_frame_10=dm = dm*0.98 + mid_att*0.2;
per_frame_11=mm = mm + dm*0.1;
per_frame_12=//***** [q11-q18] variables for Flexis caleidoscope shader code *****
per_frame_13=// change
per_frame_14=q13 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x
per_frame_15=q14 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y
per_frame_16=w = (bb-tt)*0.1;                   // angle
per_frame_17=q16 = 0.8 - (db-dt)*0.04;         // size
per_frame_18=//don't change
per_frame_19=q11 = sin(w);
per_frame_20=q12 = cos(w);
per_frame_21=q17 = sin(-w);
per_frame_22=q18 = cos(-w);
per_frame_23=q15 = 1/q16;
per_frame_24=wave_r = wave_r + 0.3*sin(vol*50);
per_frame_25=wave_b = wave_b + 0.3*sin(vol*20);
per_frame_26=wave_g = wave_g + 0.5*sin(vol*35);
per_frame_27=
per_frame_28=
per_frame_29=q8=wave_r;
per_frame_30=q7=wave_b;
per_frame_31=q6=wave_g;
per_frame_32=
per_frame_33=wr = 0.5+0.4*(0.6*sin(time*1.1) + 0.4*sin(0.8*time));
per_frame_34=wb = 0.5+0.4*(0.6*sin(time*1.6) + 0.4*sin(0.5*time));
per_frame_35=wg = 0.5+0.4*(0.6*sin(time*1.34) + 0.4*sin(0.4*time));
per_frame_36=
per_frame_37=monitor=wg;
per_frame_38=q10=wr;
per_frame_39=q21=wb;
per_frame_40=q22=wg;
per_frame_41=q28 = 0.007*sin(time*0.1);
per_frame_42=q27 = -0.007*sin(time*0.254);
per_frame_43=q2=bass_thresh;
per_frame_44=
per_frame_45=vol=(bass+mid+treb)*0.25;
per_frame_46=vol=vol*vol;
per_frame_47=q3=vol;
per_frame_48=
per_frame_49=warp=0;
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`float2 uv1 = (uv-.5) * aspect.xy;
warp_6=`
warp_7=`
warp_8=`float2 uv6 = uv1;
warp_9=`float z = q29*2*length(uv1)+rand_frame * 64;
warp_10=`float2 d = normalize(uv1);
warp_11=`float2 rs = clamp(tan(z)*d,-8,8);
warp_12=`uv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;
warp_13=`
warp_14=`
warp_15=`uv6 = .4*sin(uv1*18*rand_frame);
warp_16=`mus = .051/(length(uv6));
warp_17=`mus *= float3 (treb*.5,bass*.5,mid*.5);
warp_18=`
warp_19=`float3 blur = GetBlur2(frac(uv));
warp_20=`
warp_21=`float3 crisp= tex2D(sampler_main,uv);
warp_22=`
warp_23=`float3 ret1 = crisp - blur*.03 + .15*mus;
warp_24=`float2 uv2 = (uv_orig-.5)-float3(bass*.1,treb*.1+0.1*q25,mid*.1);
warp_25=`
warp_26=`q25 = 1;
warp_27=`ret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);
warp_28=`
warp_29=`}
comp_1=`shader_body
comp_2=`{
comp_3=`float2 uv1 = (uv-0.5)*aspect.xy;
comp_4=`
comp_5=`float rad2 = length(uv1) + .05;
comp_6=`float rad1 = .1/rad2 ;
comp_7=`
comp_8=`float2 uv2 = float2 (ang/3.14, rad1*1.5);
comp_9=`uv2.y = uv2.y  +0.1*time;
comp_10=`uv2.x = uv2.x  +.02*time;
comp_11=`
comp_12=`float2 uv3 = float2 (ang/3.14, rad1);
comp_13=`uv3.y = uv3.y  + q30 ;
comp_14=`uv3.x = uv3.x  + time/32;
comp_15=`
comp_16=`
comp_17=`float3 crisp = GetPixel(uv2) + 2*GetPixel(uv3);
comp_18=`crisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));
comp_19=`
comp_20=`float3 lay1 = float3 (1,0,1)*uv.y*pow(1-rad,8);
comp_21=`
comp_22=`crisp = 3*crisp * pow(rad,1);
comp_23=`
comp_24=`float mask = saturate(1-4*rad);
comp_25=`
comp_26=`ret = crisp + lay1*mask + mask * GetPixel(uv);
comp_27=`
comp_28=`}
