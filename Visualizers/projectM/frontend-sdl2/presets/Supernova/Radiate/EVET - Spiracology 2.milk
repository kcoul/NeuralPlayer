MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.560
fDecay=1.000
fVideoEchoZoom=0.362
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=1.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=1.00000
sx=0.98030
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=1.000
ib_g=0.000
ib_b=0.000
ib_a=0.470
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=4.950
mv_r=1.000
mv_g=0.300
mv_b=0.200
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.100
wave_0_per_point1=//q1 = state;
wave_0_per_point2=//q2 = basstime;
wave_0_per_point3=
wave_0_per_point4=q1 = 0;
wave_0_per_point5=speed = bass_att*0.3;
wave_0_per_point6=v = sample*10000 + value2*bass*0.1;
wave_0_per_point7=
wave_0_per_point8=//state 0 elipse
wave_0_per_point9=xs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);
wave_0_per_point10=ys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);
wave_0_per_point11=
wave_0_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*1 + ys);
wave_0_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*1.1 + xs);
wave_0_per_point14=
wave_0_per_point15=
wave_0_per_point16=r = 0.5 + 0.5*sin(time*0.22) + 0.1;
wave_0_per_point17=g = 0.1 + 0.4*sin(time*0.307) + x;
wave_0_per_point18=//b = 0.4 + 0.4*sin(time*0.959);
wave_0_per_point19=
wave_0_per_point20=
wave_0_per_point21=xs = if(above(xs,1000),0 ,xs);
wave_0_per_point22=ys = if(above(ys,1000),0 ,ys);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=0.200
wavecode_1_b=0.200
wavecode_1_a=0.200
wave_1_per_point1=u = sample*3.14*2;
wave_1_per_point2=v = sample*6.28*20;
wave_1_per_point3=
wave_1_per_point4=xs = cos(u)*sin(v);
wave_1_per_point5=ys = sin(u)*sin(v);
wave_1_per_point6=zs = pow(sin(v),3);
wave_1_per_point7=
wave_1_per_point8=
wave_1_per_point9=//rotate x axis
wave_1_per_point10=angle = q2*0.3;
wave_1_per_point11=yx = ys*cos(angle) - zs*sin(angle);
wave_1_per_point12=zx = ys*sin(angle) + zs*cos(angle);
wave_1_per_point13=xx = xs;
wave_1_per_point14=
wave_1_per_point15=//rotate y axis
wave_1_per_point16=angle2 = q2*0.5;
wave_1_per_point17=xd = xx*cos(angle2) - zx*sin(angle2);
wave_1_per_point18=zd = xx*sin(angle2) + zx*cos(angle2);
wave_1_per_point19=yd = yx;
wave_1_per_point20=
wave_1_per_point21=//rotaye z axis
wave_1_per_point22=angle3 = q2*0.41;
wave_1_per_point23=xn = xd*cos(angle3) - yd*sin(angle3);
wave_1_per_point24=yn = xd*sin(angle3) + yd*cos(angle3);
wave_1_per_point25=
wave_1_per_point26=
wave_1_per_point27=zd = zd +2;
wave_1_per_point28=
wave_1_per_point29=x = xn/zd*0.5+ 0.5;
wave_1_per_point30=y = yn/zd*0.5+ 0.5;
wave_1_per_point31=
wave_1_per_point32=
wave_1_per_point33=r = sin(q2);
wave_1_per_point34=g = sin(q2*2);
wave_1_per_point35=b = sin(q2*3);
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=u = sample*3.14*2;
wave_2_per_point2=v = sample*6.28*20;
wave_2_per_point3=
wave_2_per_point4=xs = cos(u)*sin(v);
wave_2_per_point5=ys = sin(u)*sin(v);
wave_2_per_point6=zs = pow(sin(v),3);
wave_2_per_point7=
wave_2_per_point8=
wave_2_per_point9=//rotate x axis
wave_2_per_point10=angle = q2*0.3;
wave_2_per_point11=yx = ys*cos(angle) - zs*sin(angle);
wave_2_per_point12=zx = ys*sin(angle) + zs*cos(angle);
wave_2_per_point13=xx = xs;
wave_2_per_point14=
wave_2_per_point15=//rotate y axis
wave_2_per_point16=angle2 = q2*0.5;
wave_2_per_point17=xd = xx*cos(angle2) - zx*sin(angle2);
wave_2_per_point18=zd = xx*sin(angle2) + zx*cos(angle2);
wave_2_per_point19=yd = yx;
wave_2_per_point20=
wave_2_per_point21=//rotaye z axis
wave_2_per_point22=angle3 = q2*0.41 + 0.05;
wave_2_per_point23=xn = xd*cos(angle3) - yd*sin(angle3);
wave_2_per_point24=yn = xd*sin(angle3) + yd*cos(angle3);
wave_2_per_point25=
wave_2_per_point26=
wave_2_per_point27=zd = zd +2;
wave_2_per_point28=
wave_2_per_point29=x = xn/zd*0.5+ 0.5;
wave_2_per_point30=y = yn/zd*0.5+ 0.5;
wave_2_per_point31=
wave_2_per_point32=
wave_2_per_point33=r = 0;
wave_2_per_point34=g = 0;
wave_2_per_point35=b = 0;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=//apply zoom burst on beat
wave_3_per_point2=flag = above(q3,2);
wave_3_per_point3=//state zero is ready state
wave_3_per_point4=state = state + flag*equal(state,0);
wave_3_per_point5=
wave_3_per_point6=//upwards flight
wave_3_per_point7=yval = if(equal(state,0),0, yval);
wave_3_per_point8=yval = yval + 0.00004*equal(state,1);
wave_3_per_point9=ymax = if(equal(state,0),int(rand(100))*0.004,ymax);
wave_3_per_point10=
wave_3_per_point11=//hit apogee
wave_3_per_point12=state = if(above(yval,0.5+ymax),2,state);
wave_3_per_point13=
wave_3_per_point14=//reset variable
wave_3_per_point15=yval = if(equal(state,0),0, yval);
wave_3_per_point16=burst = if(equal(state,0),0.001,burst);
wave_3_per_point17=alphax = if(equal(state,0),1,alphax);
wave_3_per_point18=xdriftinc = if(equal(state,0),0,xdriftinc);
wave_3_per_point19=
wave_3_per_point20=burstspeed = if(equal(state,0),int(rand(10)),burstspeed);
wave_3_per_point21=xdrift = if(equal(state,0),int(rand(20)),xdrift);
wave_3_per_point22=//to get the numbers small enough have to use constants
wave_3_per_point23=xdriftinc = xdriftinc
wave_3_per_point24=+ equal(xdrift,0)*equal(state,1)*0.00002
wave_3_per_point25=+ equal(xdrift,1)*equal(state,1)*0.000018
wave_3_per_point26=+ equal(xdrift,2)*equal(state,1)*0.000016
wave_3_per_point27=+ equal(xdrift,3)*equal(state,1)*0.000014
wave_3_per_point28=+ equal(xdrift,4)*equal(state,1)*0.000012
wave_3_per_point29=+ equal(xdrift,5)*equal(state,1)*0.00001
wave_3_per_point30=+ equal(xdrift,6)*equal(state,1)*0.000008
wave_3_per_point31=+ equal(xdrift,7)*equal(state,1)*0.000006
wave_3_per_point32=+ equal(xdrift,8)*equal(state,1)*0.000004
wave_3_per_point33=+ equal(xdrift,9)*equal(state,1)*0.000002
wave_3_per_point34=+ equal(xdrift,11)*equal(state,1)*-0.000002
wave_3_per_point35=+ equal(xdrift,12)*equal(state,1)*-0.000004
wave_3_per_point36=+ equal(xdrift,13)*equal(state,1)*-0.000006
wave_3_per_point37=+ equal(xdrift,14)*equal(state,1)*-0.000008
wave_3_per_point38=+ equal(xdrift,15)*equal(state,1)*-0.00001
wave_3_per_point39=+ equal(xdrift,16)*equal(state,1)*-0.000012
wave_3_per_point40=+ equal(xdrift,17)*equal(state,1)*-0.000014
wave_3_per_point41=+ equal(xdrift,18)*equal(state,1)*-0.000016
wave_3_per_point42=+ equal(xdrift,19)*equal(state,1)*-0.000018;
wave_3_per_point43=
wave_3_per_point44=burst = burst
wave_3_per_point45=+ equal(burstspeed,0)*equal(state,2)*0.000024
wave_3_per_point46=+ equal(burstspeed,1)*equal(state,2)*0.000022
wave_3_per_point47=+ equal(burstspeed,2)*equal(state,2)*0.00002
wave_3_per_point48=+ equal(burstspeed,3)*equal(state,2)*0.000018
wave_3_per_point49=+ equal(burstspeed,4)*equal(state,2)*0.000016
wave_3_per_point50=+ equal(burstspeed,5)*equal(state,2)*0.000014
wave_3_per_point51=+ equal(burstspeed,6)*equal(state,2)*0.000012
wave_3_per_point52=+ equal(burstspeed,7)*equal(state,2)*0.00001
wave_3_per_point53=+ equal(burstspeed,8)*equal(state,2)*0.000008
wave_3_per_point54=+ equal(burstspeed,9)*equal(state,2)*0.000008;
wave_3_per_point55=
wave_3_per_point56=alphax = alphax - 0.00004*equal(state,2);
wave_3_per_point57=state = if(below(alphax,0),0,state);
wave_3_per_point58=
wave_3_per_point59=
wave_3_per_point60=s = sample*3.14*100;
wave_3_per_point61=ss = sample*6.28*1000;
wave_3_per_point62=
wave_3_per_point63=//draw torus
wave_3_per_point64=xs = (burst + 0.0001*cos(s))*cos(ss);
wave_3_per_point65=ys = (burst + 0.0001*cos(s))*sin(ss);
wave_3_per_point66=zs = 0.1*burst*sin(s);
wave_3_per_point67=
wave_3_per_point68=
wave_3_per_point69=//rotate x axis
wave_3_per_point70=angle = sin(-q1*0.035)*6.28;
wave_3_per_point71=yx = ys*cos(angle) - zs*sin(angle);
wave_3_per_point72=zx = ys*sin(angle) + zs*cos(angle);
wave_3_per_point73=xx = xs;
wave_3_per_point74=
wave_3_per_point75=//rotate y axis
wave_3_per_point76=angle2 = sin(-q1*0.03)*6.28;
wave_3_per_point77=xd = xx*cos(angle2) - zx*sin(angle2);
wave_3_per_point78=zd = xx*sin(angle2) + zx*cos(angle2);
wave_3_per_point79=yd = yx;
wave_3_per_point80=
wave_3_per_point81=//rotaye z axis
wave_3_per_point82=angle3 = sin(-q1*0.022)*6.28;
wave_3_per_point83=xn = xd*cos(angle3) - yd*sin(angle3);
wave_3_per_point84=yn = xd*sin(angle3) + yd*cos(angle3);
wave_3_per_point85=
wave_3_per_point86=zd = zd + 2;
wave_3_per_point87=
wave_3_per_point88=x = xn*zd*0.3 + 0.5;
wave_3_per_point89=y = yn*zd*0.3*1.2;
wave_3_per_point90=
wave_3_per_point91=
wave_3_per_point92=x = x + xdriftinc;
wave_3_per_point93=y = y + sin(yval*1.5) - 0.18;
wave_3_per_point94=
wave_3_per_point95=
wave_3_per_point96=r = 0.5 + 0.5*sin(q1*1.3 + x + x);
wave_3_per_point97=g = 0.5 + 0.5*sin(q1*1.1 + x + y);
wave_3_per_point98=b = 0.5 + 0.5*sin(q1*1.66 + y + y);
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=2.66718
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.45112
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=0.000
shapecode_0_a=0.150
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.050
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shape_0_per_frame1=r = 0.1 + 0.5*sin(q1);
shape_0_per_frame2=g = 0.1 + 0.5*sin(q1*0.9878);
shape_0_per_frame3=b = 0.1 + 0.5*sin(q1*0.897);
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.350
shapecode_1_y=0.000
shapecode_1_rad=0.09959
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.42497
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=r = 0.1 + 0.5*sin(q1*0.01);
shape_1_per_frame2=g = 0.1 + 0.5*sin(q1*0.09878);
shape_1_per_frame3=b = 0.1 + 0.5*sin(q1*0.0897);
shape_1_per_frame4=
shape_1_per_frame5=r2 = 0.1 + 0.5*sin(q1*0.035);
shape_1_per_frame6=g2 = 0.1 + 0.5*sin(q1*0.09878);
shape_1_per_frame7=b2 = 0.1 + 0.5*sin(q1*0.0897);
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.000
shapecode_2_rad=0.10201
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=r = 0.1 + 0.5*sin(q1*0.01);
shape_2_per_frame2=g = 0.1 + 0.5*sin(q1*0.03878);
shape_2_per_frame3=b = 0.1 + 0.5*sin(q1*0.0497);
shape_2_per_frame4=
shape_2_per_frame5=r2 = 0.1 + 0.5*sin(q1*0.065);
shape_2_per_frame6=g2 = 0.1 + 0.5*sin(q1*0.07878);
shape_2_per_frame7=b2 = 0.1 + 0.5*sin(q1*0.0597);
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.650
shapecode_3_y=0.000
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
shape_3_per_frame1=//x = 0.5 + 0.02*sin(time*0.5 + 1.68);
shape_3_per_frame2=//y = 0.5 + 0.02*cos(time*0.5 + 1.68);
shape_3_per_frame3=
shape_3_per_frame4=
shape_3_per_frame5=r = 0.1 + 0.5*sin(q1*0.0144);
shape_3_per_frame6=g = 0.1 + 0.5*sin(q1*0.05878);
shape_3_per_frame7=b = 0.1 + 0.5*sin(q1*0.0797);
shape_3_per_frame8=
shape_3_per_frame9=r2 = 0.1 + 0.5*sin(q1*0.065);
shape_3_per_frame10=g2 = 0.1 + 0.5*sin(q1*0.07878);
shape_3_per_frame11=b2 = 0.1 + 0.5*sin(q1*0.0897);
per_frame_1=//wave_mystery = 1;
per_frame_2=bassrun=bass+bassrun;
per_frame_3=trebrun=treb+trebrun;
per_frame_4=midrun=mid+midrun;
per_frame_5=vol=(bassrun+midrun+trebrun)*.03;
per_frame_6=vol2=vol*.001;
per_frame_7=warp = 0;
per_frame_8=zoom = 1.4 +0.15*cos(vol*0.42);
per_frame_9=rot = 0.01*sin(1.34*vol);
per_frame_10=dx = 0.005*sin(vol*0.646);
per_frame_11=dy=0.005*sin(vol*0.314);
per_frame_12=cx = 0.5 + 0.05*sin(0.497*vol);
per_frame_13=cy = 0.5 +0.05*sin(0.413*vol);
per_frame_14=
per_frame_15=pi23=4*asin(-1)*.33333333333333;
per_frame_16=q6= (sin(vol-0*pi23)+1)*.5;
per_frame_17=q7= (sin(vol-1*pi23)+1)*.5;
per_frame_18=q8=(sin(vol-2*pi23)+1)*.5;
per_frame_19=mv_r=q6;
per_frame_20=mv_g=q7;
per_frame_21=mv_b=q8;
per_frame_22=q9=q6+1;
per_frame_23=vol3=(bass+mid+treb)*.3;
per_frame_24=q26=vol3;
per_frame_25=q20=vol3;
per_frame_26=q1=q6*.3;
per_frame_27=q2=q7*.3;
per_frame_28=q3=q8*.3;
per_frame_29=q4=q8/q6*2;
warp_1=`#define Intrinisic GetBlur1
warp_2=`
warp_3=`shader_body
warp_4=`{ 
warp_5=`float2 d[8] = {float2(-1,-1),float2(-1,0),
warp_6=`             float2(-1,1),float2(0,1),
warp_7=`             float2(1,1),float2(1,0),
warp_8=`             float2(1,-1),float2(0,-1)};
warp_9=`int i=0;
warp_10=`float3 tmp=0;
warp_11=`float2 grad=0;
warp_12=`float vals[8];
warp_13=`float nang=0;
warp_14=`texsize.zw*=4;    //------------------adjust size
warp_15=`vals[0]=Intrinisic(uv+d[0]*texsize.zw);
warp_16=`for(i=0;i<=6;i++)
warp_17=`{
warp_18=`tmp=Intrinisic(uv+d[i+1]*texsize.zw);
warp_19=`vals[i+1]=lum(tmp); //vals[i]=(length(tmp)+lum(tmp))/2;
warp_20=`grad+=((i>4)*2-1)*((vals[i])-(vals[i+1]))*d[i];
warp_21=`};
warp_22=`grad+=(vals[7]-vals[0])*d[7];
warp_23=`grad*=0.03;       //------------------adjust speed
warp_24=`//float l=length(grad);
warp_25=`//nang=atan2(grad.x,grad.y);
warp_26=`//nang+=2-floor(ang/90); //adjustable
warp_27=`//grad=float2(sin(nang)*l,cos(nang)*l);
warp_28=`ret=GetPixel(uv+grad);
warp_29=`//ret=GetPixel(uv)*(1-length(grad))+0.005;
warp_30=`/*
warp_31=`//flower fx:
warp_32=`delta2*=8;
warp_33=`float3 a=GetBlur2(uv-float2(delta2.x,0));
warp_34=`float3 b=GetBlur2(uv+float2(delta2.x,0));    
warp_35=`float3 c=GetBlur2(uv-float2(0,delta2.y));
warp_36=`float3 d=GetBlur2(uv+float2(0,delta2.y));
warp_37=`float3 dx=abs(a-b);
warp_38=`float3 dy=abs(c-d);
warp_39=`//ret=lerp(ret*1.2,(dx+dy),0.2);
warp_40=`ret*=0.8+((0+dx)*(1+dy));  
warp_41=`  // darken over time
warp_42=`//    ret -= 0.2*(0.5-tex2D(sampler_noise_lq,uv*9*rand_frame.xy));    
warp_43=`*/
warp_44=`ret+=(0.5-tex2D(sampler_noise_lq,uv*rand_frame.xy*9))*0.01;
warp_45=`}
comp_1=`sampler sampler_fw_noise_hq;
comp_2=`float z;
comp_3=`float3 ret1, neu, mus;
comp_4=`float2 rs,rs2,uv1,uv2, uv3,uv4,uv6,dz,dz1;
comp_5=`shader_body
comp_6=`{
comp_7=`float2 uv2;
comp_8=`//uv = (uv-0.5) * aspect.xy + .5;    
comp_9=`dz = 0;
comp_10=`
comp_11=`float2 hor = float2(texsize.z,0);
comp_12=`float2 ver = float2(0,texsize.w);
comp_13=`
comp_14=`float dist = 1;
comp_15=`float inten = 1;
comp_16=`ret1 = 0;
comp_17=`float anz = 1;
comp_18=`float n = 0;
comp_19=`
comp_20=`    float4 N1 = tex2D(sampler_fw_noise_hq, uv*texsize.xy*.1*texsize_noise_hq.zw/64 +rand_preset.xy)*1;
comp_21=`    float4 N2 = tex2D(sampler_fw_noise_hq, uv*texsize.xy*.1*texsize_noise_hq.zw/16+rand_preset.xy)*0.25;
comp_22=`    float4 N3 = tex2D(sampler_fw_noise_hq, uv*texsize.xy*.1*texsize_noise_hq.zw/32+rand_preset.xy)*0.5;
comp_23=`
comp_24=`    uv = 0.05 + 0.9*uv;
comp_25=`    uv.x += 0.05*cos((N1.x + N2.x + N3.x)*5 + bass_att*.2+time*4.13);
comp_26=`    uv.y += 0.05*sin((N1.y + N2.y + N3.y)*5 + treb_att*.2+time*5);
comp_27=`
comp_28=`uv4 = (uv);
comp_29=`    dz.x = lum(GetPixel(uv4+hor)- GetPixel (uv4-hor));
comp_30=`    dz.y = lum(GetPixel(uv4+ver)- GetPixel (uv4-ver));
comp_31=`
comp_32=`
comp_33=`mus = .5*GetPixel(uv4-0*dz)-0*dz.x;
comp_34=`
comp_35=`uv2 = uv-.5;
comp_36=`while (n <= anz) {
comp_37=`    dist = 1-frac(1.0/anz*n-.1); //evtl sqrt !;
comp_38=`
comp_39=`    inten =  sqrt(dist)*(1-dist*dist)*4;
comp_40=`
comp_41=`    uv3 = q27*2*uv2*dist + float2 (time/8,0);
comp_42=`    uv3 = frac(uv3);
comp_43=`    uv3 *= aspect.yx;
comp_44=`    uv3 = .1 * cos(22*uv3) + 18 *dz ;
comp_45=`    neu = saturate(.02/length(uv3));
comp_46=`    neu = dist*neu + (1-dist)*lum(neu)* .5*(1+roam_cos);
comp_47=`    ret1 = max(ret1,neu*inten);
comp_48=`n++;
comp_49=`}
comp_50=`
comp_51=`ret = ret1  +  saturate(8*mus*(.2+ret1)) ;
comp_52=`}
