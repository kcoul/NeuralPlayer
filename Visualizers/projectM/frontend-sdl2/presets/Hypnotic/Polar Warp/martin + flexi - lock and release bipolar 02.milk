MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=4
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.527
fWaveSmoothing=0.450
fWaveParam=0.000
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=1.400
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.800
wave_g=0.490
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.100
ob_b=0.000
ob_a=0.300
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=0.500
b2x=0.500
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=128
wavecode_0_sep=201
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=2.15542
wavecode_0_smoothing=0.00000
wavecode_0_r=0.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.700
wave_0_per_point1=x = sample;
wave_0_per_point2=
wave_0_per_point3=n = int(sample*128);
wave_0_per_point4=vol = value1 + value2;
wave_0_per_point5=dec = if (vol > gmegabuf(n), .2, .5);
wave_0_per_point6=gmegabuf(n) = gmegabuf(n)*dec + (1-dec)* (vol) * (1+.01*(rand(100)-50));
wave_0_per_point7=
wave_0_per_point8=
wave_0_per_point9=y = gmegabuf (n)*.15+.2;
wave_0_per_point10=a=0;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.900
wave_1_per_point1=m = int(sample*512+.0);
wave_1_per_point2=sw = (m%2);
wave_1_per_point3=p1 = ((m+1)%16);
wave_1_per_point4=p2 = int(m/32);
wave_1_per_point5=
wave_1_per_point6=//p1 = 15; p2 = 0;
wave_1_per_point7=base = 1000;
wave_1_per_point8=x0 = if(sw,gmegabuf(p1*8+base),gmegabuf(p2*8+base));
wave_1_per_point9=y0 = if(sw,gmegabuf(p1*8+base+1),gmegabuf(p2*8+base+1));
wave_1_per_point10=z0 = if(sw,gmegabuf(p1*8+base+2),gmegabuf(p2*8+base+2));
wave_1_per_point11=
wave_1_per_point12=x = x0+.5;
wave_1_per_point13=y = y0+.5;
wave_1_per_point14=
wave_1_per_point15=ind = 5000+ p2*16+p1;
wave_1_per_point16=dist = z0;
wave_1_per_point17=a = min(.008/dist,1) * (dist >= .001) *q10;
wave_1_per_point18=
wave_1_per_point19=//a = .01/z0;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=2.41139
wavecode_2_smoothing=1.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=0.400
wave_2_per_point1=a = treb_att*.5;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=14
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=32
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.03632
shapecode_0_ang=0.00000
shapecode_0_tex_ang=1.00531
shapecode_0_tex_zoom=1.53117
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=1.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.600
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.300
shapecode_1_enabled=1
shapecode_1_sides=3
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=48
shapecode_1_x=0.260
shapecode_1_y=0.200
shapecode_1_rad=0.39317
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.93550
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=0.600
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=sides = q12;
shape_1_per_frame2=copies = int(num_inst/16);
shape_1_per_frame3=
shape_1_per_frame4=n = int(instance/copies)*8+1000;
shape_1_per_frame5=frac = (instance%copies)/(copies);
shape_1_per_frame6=
shape_1_per_frame7=k1 = 1;
shape_1_per_frame8=x0 = gmegabuf(n)*frac + megabuf(n)*(1-frac)*k1;
shape_1_per_frame9=y0 = gmegabuf(n+1)*frac+ megabuf(n+1)*(1-frac)*k1;
shape_1_per_frame10=z0 = gmegabuf(n+2)*frac+ megabuf(n+2)*(1-frac);
shape_1_per_frame11=ang = frac*3.14 + atan2(x0,y0);
shape_1_per_frame12=
shape_1_per_frame13=megabuf(n) = x0;
shape_1_per_frame14=megabuf(n+1) = y0;
shape_1_per_frame15=megabuf(n+2) = z0;
shape_1_per_frame16=
shape_1_per_frame17=x = x0 + .5;
shape_1_per_frame18=y = y0*q32 + .5;
shape_1_per_frame19=z = z0;
shape_1_per_frame20=
shape_1_per_frame21=a =  min(.4/z,1) * (z >= 0) ;
shape_1_per_frame22=a2 = 0;
shape_1_per_frame23=
shape_1_per_frame24=rad = (.02-.0006*sides)/z;
shape_1_per_frame25=r = instance/num_inst;
shape_1_per_frame26=b = 1-r;
shape_1_per_frame27=g = pow(r-.5*q2,2)*4;
shape_1_per_frame28=r2 = 0; b2 = 0; g2 = 0;
shape_1_per_frame29=
shape_1_per_frame30=border_a = .04*(sides >= 6);
shapecode_2_enabled=1
shapecode_2_sides=8
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=192
shapecode_2_x=0.650
shapecode_2_y=0.380
shapecode_2_rad=0.76893
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.73678
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.700
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=copies = int(num_inst/16);
shape_2_per_frame2=
shape_2_per_frame3=n = int(instance/copies)*8+1000;
shape_2_per_frame4=frac = (instance%copies)/(copies);
shape_2_per_frame5=
shape_2_per_frame6=k1 =  1.1; 
shape_2_per_frame7=x0 = gmegabuf(n)*frac + megabuf(n)*(1-frac)*k1;
shape_2_per_frame8=y0 = gmegabuf(n+1)*frac+ megabuf(n+1)*(1-frac)*k1;
shape_2_per_frame9=z0 = gmegabuf(n+2)*frac+ megabuf(n+2)*(1-frac);
shape_2_per_frame10=ang = frac*3.14 + atan2(x0,y0);
shape_2_per_frame11=
shape_2_per_frame12=//x0 = 0; y0 = 0; z0 = 1;
shape_2_per_frame13=pulse = min(q22+.2,1);
shape_2_per_frame14=
shape_2_per_frame15=Tht = instance*14.782;
shape_2_per_frame16=Phi = instance*32.523;
shape_2_per_frame17=
shape_2_per_frame18=kt = time*6+instance/num_inst*copies;
shape_2_per_frame19=v0 = pulse*.015/z0 * (kt-int(kt));
shape_2_per_frame20=ox = x0+v0*sin(Tht) * cos(Phi);
shape_2_per_frame21=oy = y0+v0*cos(Tht);
shape_2_per_frame22=oz = z0+v0*sin(Tht)*sin(Phi); 
shape_2_per_frame23=
shape_2_per_frame24=
shape_2_per_frame25=x = ox + .5;
shape_2_per_frame26=y = oy*q32 + .5;
shape_2_per_frame27=z = oz;
shape_2_per_frame28=
shape_2_per_frame29=a = min(.4/oz,1)*(oz>=0) *q11;
shape_2_per_frame30=a2 = 0;
shape_2_per_frame31=
shape_2_per_frame32=rad = .004/z*(1-frac)*pulse;
shape_2_per_frame33=
shape_2_per_frame34=border_a = .00;
shape_2_per_frame35=r = 1; b = 1; g = 1;
shape_2_per_frame36=r2 = 1; b2 = 1; g2 = 1;
shape_2_per_frame37=
shape_2_per_frame38=
shape_2_per_frame39=dec = q31; //###!
shape_2_per_frame40=megabuf(n) = megabuf(n)*dec + (1-dec)*gmegabuf(n);
shape_2_per_frame41=megabuf(n+1) = megabuf(n+1)*dec + (1-dec)*gmegabuf(n+1);
shape_2_per_frame42=megabuf(n+2) = megabuf(n+2)*dec + (1-dec)*gmegabuf(n+2);
shapecode_3_enabled=0
shapecode_3_sides=12
shapecode_3_additive=1
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=32
shapecode_3_x=0.600
shapecode_3_y=0.550
shapecode_3_rad=0.97237
shapecode_3_ang=1.25664
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.34933
shapecode_3_r=1.000
shapecode_3_g=0.600
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.200
shapecode_3_border_g=0.700
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_init_1=index = 0;
per_frame_init_2=loop (10000,
per_frame_init_3=  megabuf(index) = .1;
per_frame_init_4=  gmegabuf(index) = 0;
per_frame_init_5=  index = index + 1;
per_frame_init_6=);
per_frame_init_7=
per_frame_init_8=vol_=1;
per_frame_init_9=
per_frame_init_10=q10 = rand(100) >= 30;
per_frame_init_11=q11 = rand(100) >= 30;
per_frame_init_12=q12 = (rand(100) >= 30)*9+3;
per_frame_init_13=q13 = min(max((rand(100)/50-.5),0),1);
per_frame_1=dec_m = pow(.9, 30/fps);dec_s = pow(.95, 30/fps);dec_xs = pow(.985, 30/fps);
per_frame_2=
per_frame_3=flen = 128; shapes = 16;
per_frame_4=
per_frame_5=beat = max(max(bass,treb),mid);
per_frame_6=beat_ = beat_*dec_m + (1-dec_m)*beat; 
per_frame_7=is_beat = above(beat, peak*6) * above (time, t0+.2);
per_frame_8=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_9=peak = is_beat * beat + (1-is_beat)*peak*dec_m;
per_frame_10=index = (index + is_beat) %32;
per_frame_11=index2 = if (is_beat && (index%7==0), index2+1, index2)%64;
per_frame_12=q22 = max(peak,.02);
per_frame_13=
per_frame_14=ran1 = if (is_beat, rand(100)/25, ran1);
per_frame_15=ran2 = if (is_beat, rand(100)/25, ran2);
per_frame_16=q27 = ran1;
per_frame_17=q28 = ran2;
per_frame_18=
per_frame_19=n = 0; vol = .1; bbase = 5000;
per_frame_20=loop (flen,
per_frame_21=  value = gmegabuf(n) * (1+2/(n+.5));
per_frame_22=  megabuf(bbase+n) = (beat >= (1.1-n/flen/2)*beat_)*(time >= megabuf(bbase+1000+n)+.1);
per_frame_23=  trig = megabuf(bbase+n); ;
per_frame_24=  megabuf(bbase+1000+n) = if(trig,time, megabuf(bbase+1000+n));
per_frame_25=  dec = if(trig,0.2,.9-.1*n/flen);
per_frame_26=  dec = pow(dec,30/fps);
per_frame_27=  megabuf(n) = megabuf(n)*dec + (1-dec)*value;
per_frame_28=  vol = vol + pow(megabuf(n),2);
per_frame_29=  n = n+1;
per_frame_30=);
per_frame_31=vol = sqrt(vol);
per_frame_32=vol_ = dec_m*vol_ + (1-dec_m)*vol;
per_frame_33=
per_frame_34=// post smoothing
per_frame_35=n = 0;
per_frame_36=loop (flen,
per_frame_37=  value = megabuf(n);
per_frame_38=  dec = if (megabuf(1000+n)<=value,.7,.8-0.1*n/flen);
per_frame_39=  dec = pow(dec,30/fps);
per_frame_40=//  dec = 1; //#
per_frame_41=    megabuf(n+1000) = megabuf(n+1000)*dec+ (1-dec)*value/vol_;
per_frame_42=  n = n+1;
per_frame_43=);
per_frame_44=
per_frame_45=
per_frame_46=// Berechnung Ortskoordinaten aus Spektrum
per_frame_47=dist = 2; reduce = flen/shapes;
per_frame_48=n = 2000; m = 1000+dist; k=0;
per_frame_49=loop (shapes,
per_frame_50=  betr = (megabuf(m)+megabuf(m-dist)+megabuf(m+dist))/3;
per_frame_51=  megabuf(n)   = megabuf(m) - megabuf(m+dist);
per_frame_52=  megabuf(n+1) = megabuf(m) - megabuf(m-dist);
per_frame_53=  z1 = max(.03/betr,.05);
per_frame_54=  z2 = ((k+time)%shapes)/shapes+.06;
per_frame_55=  megabuf(n+2) = q13*z1+(1-q13)*z2;
per_frame_56=  m = m + reduce; n = n+8; k= k+1;
per_frame_57=);
per_frame_58=
per_frame_59=
per_frame_60=//Projektion
per_frame_61=n = 1000; m = 2000;
per_frame_62=loop (shapes,
per_frame_63=  gmegabuf(n) = megabuf(m)/megabuf(m+2);
per_frame_64=  gmegabuf(n+1) = megabuf(m+1)/megabuf(m+2);
per_frame_65=  gmegabuf(n+2) = megabuf(m+2);
per_frame_66=  mx = mx + gmegabuf(n)/shapes/fps;
per_frame_67=  my = my + gmegabuf(n+1)/shapes/fps;
per_frame_68=  n = n+8; m = m+8;
per_frame_69=);
per_frame_70=
per_frame_71=
per_frame_72=
per_frame_73=q32 = aspecty;
per_frame_74=q31 = min(.996,dec_xs);
per_frame_75=monitor = q22;
per_frame_76=
per_frame_77=bb = bb*0.99 + bass*0.02;
per_frame_78=mm = mm*0.99 + mid*0.02;
per_frame_79=tt = tt*0.99 + treb*0.02;
per_frame_80=
per_frame_81=mx = max(max(bb,mm),tt);
per_frame_82=mn = min(min(bb,mm),tt);
per_frame_83=
per_frame_84=h1 = (bb-mn)/(mx-mn);
per_frame_85=h2 = (mm-mn)/(mx-mn);
per_frame_86=h3 = (tt-mn)/(mx-mn);
per_frame_87=
per_frame_88=v = 0.1333/fps;
per_frame_89=bm = bm + (h1-h2)*v;
per_frame_90=mt = mt + (h2-h3)*v;
per_frame_91=bt = bt + (h1-h3)*v;
per_frame_92=
per_frame_93=w = bm*2;
per_frame_94=q24 = sin(w);
per_frame_95=q25 = cos(w);
per_frame_96=
per_frame_97=q26 = bm;
per_frame_98=q29 = mt;
per_frame_99=q30 = bt;
per_pixel_1=rot = 0.0; zoom = .99 ; warp = 0; dx = 0.0; dy = 0.0;
warp_1=`float dist, struc, len; float2 uv0, uv1; float3 uv2; float4 box;
warp_2=`static const float3x3 RotMat = float3x3(1,0,0,0,1,0,0,0,1);
warp_3=`
warp_4=`static const float3 CamPos = float3(q28,q27,-.07);
warp_5=`static const float  ds = q22;
warp_6=`static const float limit = 30;
warp_7=`
warp_8=`
warp_9=`float4 mbox (float3 uvi) {float3 zz, zz0; float tmp, li;
warp_10=`  zz = uvi; zz0 = zz; li=0;
warp_11=`  for (int n = 0; n <= 7; n++) {
warp_12=`    zz = 2.0*clamp(zz,-1,1)-zz;  tmp = dot(zz,zz);
warp_13=`    zz *= clamp(max(.25/tmp, .25), 0.0, 1.0)*4;
warp_14=`    zz = 2.5*zz + zz0;}
warp_15=`  return float4(zz,0);}
warp_16=`
warp_17=`shader_body {
warp_18=`uv1 = (uv-.5)*aspect.xy;
warp_19=`dist = .1;
warp_20=`uv2 = mul(float3(uv1*dist,0),RotMat)+CamPos;
warp_21=`uv2 = (frac(uv2/8.0+.5)-.5)*8.0;
warp_22=`box = mbox (uv2);
warp_23=`len = (length(box.xyz))*2;
warp_24=`struc = length(box.xy)/limit*4;
warp_25=`
warp_26=`
warp_27=`ret = max(GetPixel(uv)*.93,min(1-GetBlur1(uv),float3(1-struc,0,0)));
warp_28=`
warp_29=`
warp_30=`}
comp_1=`float3 ret1, ret2, sky, lava, uv_vol;
comp_2=`float2 rs0,rs,uv0, uv1, uv2;
comp_3=`
comp_4=`float3 lavcol (float t) {
comp_5=`  return smoothstep(0,1,float3(t+.1,t*1.1-.3,t-.5));
comp_6=`}
comp_7=`
comp_8=`float2 complex_div(float2 numerator, float2 denominator){
comp_9=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_10=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_11=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_12=`}
comp_13=`
comp_14=`float2 uv_polar(float2 domain, float2 center){
comp_15=`   float2 c = domain - center;
comp_16=`   float rad_hq = length(c);
comp_17=`   float ang_hq = atan2(c.x,c.y);
comp_18=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
comp_19=`}
comp_20=`
comp_21=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_22=`   float2 polar = uv_polar(domain, center);
comp_23=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_24=`}
comp_25=`
comp_26=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_27=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_28=`}
comp_29=`
comp_30=`float2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_31=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_32=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
comp_33=`}
comp_34=`
comp_35=`
comp_36=`float2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){
comp_37=`   float2 uv_r = (domain-center);
comp_38=`   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;
comp_39=`}
comp_40=`
comp_41=`
comp_42=`shader_body
comp_43=`{
comp_44=`float2 uvo = uv;
comp_45=`
comp_46=`float2 rotate_uv = 0.5-uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q24, q25, 2);
comp_47=`float2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.3, float2(q29,q30));
comp_48=`uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.));
comp_49=`
comp_50=`rotate_uv = 0.5-uv_rotate(0 + (uv-0.5), 0, q24, q25, 2);
comp_51=`bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.3, float2(q27,q28));
comp_52=`uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.));
comp_53=`
comp_54=`uv0 = uv;
comp_55=`uv = float2(abs(uv.x-.5)+.5,uv.y);
comp_56=`ret = abs(GetPixel(uv)-GetBlur1(uv)*.7);
comp_57=`ret = lavcol (ret*2);
comp_58=`
comp_59=`
comp_60=`}
