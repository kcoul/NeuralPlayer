MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.000
fWaveScale=0.000
fWaveSmoothing=0.500
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=51.200
nMotionVectorsY=33.600
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.400
mv_g=0.300
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=60.80387
wavecode_0_smoothing=0.70000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.050
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=67.16520
wavecode_1_smoothing=0.70000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.700
wavecode_3_g=0.700
wavecode_3_b=1.000
wavecode_3_a=0.600
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.700
shapecode_0_y=0.500
shapecode_0_rad=0.04067
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.83492
shapecode_0_r=0.000
shapecode_0_g=0.990
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.200
shapecode_0_border_g=0.140
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=16
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=800
shapecode_1_x=0.800
shapecode_1_y=0.500
shapecode_1_rad=0.55692
shapecode_1_ang=0.00000
shapecode_1_tex_ang=1.50796
shapecode_1_tex_zoom=4.72143
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.500
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=0.700
shapecode_1_border_b=0.400
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=4
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.57386
shapecode_2_ang=0.00000
shapecode_2_tex_ang=1.50790
shapecode_2_tex_zoom=1.13805
shapecode_2_r=0.800
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=0.000
shapecode_2_r2=0.800
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.800
shapecode_2_border_g=0.400
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=3.95513
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.54929
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=0.600
shapecode_3_border_b=0.100
shapecode_3_border_a=0.000
per_frame_init_1=n = 0;
per_frame_init_2=loop (100000,megabuf(n)=0;gmegabuf(n)=0;n += 1;);
per_frame_init_3=
per_frame_init_4=posx = rand(10); posy = rand(10);
per_frame_init_5=ranx = rand (1); rany = rand(1);
per_frame_init_6=ranh = rand(10);
per_frame_init_7=t0 = time;
per_frame_init_8=st = 0.5; st_=0.5;
per_frame_1=st = max (0, st-0.2/fps);
per_frame_2=dec = 1-0.5/fps;
per_frame_3=st_ = st_* (dec) + (1-dec)*st;
per_frame_4=
per_frame_5=//dir
per_frame_6=dir = 0.7*sin(time*.0162+rany*6);
per_frame_7=q2 = dir+0.5; 
per_frame_8=q3 = sin(dir);
per_frame_9=q4 = cos(dir);
per_frame_10=
per_frame_11=//scaling plane
per_frame_12=q7 = 0.002;
per_frame_13=
per_frame_14=//movement
per_frame_15=posx = time*0.0003;
per_frame_16=posy = time*0.004;
per_frame_17=q10 = posx;
per_frame_18=q11 = posy;
per_frame_19=
per_frame_20=//start ran for warp mod 
per_frame_21=q15 = ranx;
per_frame_22=q16 = rany;
per_frame_23=
per_frame_24=test = (t0-time)*0.047-3.14/2;
per_frame_25=view = 0.7 + min(1, max (-1, 2*sin(test)))*0.17;
per_frame_26=
per_frame_27=//Alti
per_frame_28=q8 = 4 + 3* sin(test) + (view-0.55)*16;
per_frame_29=
per_frame_30=//hory (Kippung)
per_frame_31=q6 = view * (1-st_) + st_*2;
per_frame_32=
per_frame_33=//q6  = 0.55;
per_frame_34=monitor = view;
warp_1=`#define sat saturate
warp_2=`sampler sampler_pw_noise_lq;
warp_3=`static const float quality = 4;
warp_4=`float3 rsl, rsl3, ret1, sky, mod;
warp_5=`float2 dz, uv0, uv1, uv2, uv3, uv4, uvc, dz1;
warp_6=`float  lav_gnd,lav_gnd2, smask, ripple, l,d,i,p;
warp_7=`static const float hory = q6, xyscale = q7, alti = q8;
warp_8=`static const float2 hor = texsize.zw*float2 (1.5,0), dir = float2 (q3, q4), modran = float2 (q15,q16);
warp_9=`static const float3 mov = float3 (q10,q11,0);
warp_10=`float comb (float2 uvi) {return dot (tex2D(sampler_noise_lq, uvi).yx, float2(1,1));}
warp_11=`
warp_12=`float2 noise2 (float2 uvi) {float2 tmp = 1; float s = 1;
warp_13=`  for (int n = 1; n <= 2; n +=1 ) {tmp *= 1-tex2D(sampler_noise_lq,uvi*s); s*= 3;}
warp_14=`  return tmp;}
warp_15=`
warp_16=`
warp_17=`float2 noise3 (float3 uvi, float3 mod) {uvi *= 0.16; float2 tmp = 1; float s = 1; float diff = 0;
warp_18=`  uvi.xy+= modran*3;
warp_19=`  for (int n = 1; n <= 2; n +=1 ) {tmp *= sat(1-tex2D(sampler_noise_lq,uvi*s)*(0.8+mod.y/2)/s); s*= 3+tmp*0.002*mod.z;}
warp_20=`  for (int n = 1; n <= 3; n +=1 ) {tmp *= sat(1-tex2D(sampler_noise_lq,uvi*s)*(0.8+mod.y/2)/s); s*= 3;}
warp_21=`  diff = sat (16-2*uvi.z-20000* abs (tmp.x-0.4)) ;
warp_22=`  tmp  -= diff*0.009 ;
warp_23=`  return 1-pow (tmp,0.8+mod.x);}
warp_24=`
warp_25=`float2 enoise3 (float2 uvi, float3 mod) {uvi/=6; float2 tmp = 1; float s = 1;
warp_26=`  for (int n = 1; n <= 6; n +=1 ) {tmp *= 1-tex2D(sampler_noise_lq,uvi*s)/(0.8+mod.y)/s; s*= 2.9;}
warp_27=`  if ((tmp.x > 0.398) && (tmp.x < 0.402)) {tmp = 0.398;}
warp_28=`  return 1-pow (tmp,.8+2*mod.x);}
warp_29=`
warp_30=`float3 rs_lav (float2 uvi, float berg) {  float z; float2 rs;
warp_31=`  z = 1/(uvi.y+hory)*(alti-berg*16); //z = clamp(z,0,4/xyscale);
warp_32=`  rs.x = uvi.x * 2*z ; rs.y = z; 
warp_33=`  return float3(rs*xyscale,z); }
warp_34=`
warp_35=`
warp_36=`shader_body {
warp_37=`uv1=uv-0.5;
warp_38=`lav_gnd=  -min (tex2D(sampler_fc_main,uv).b, tex2D(sampler_fc_main,uv+hor.yx).b);
warp_39=`
warp_40=`rsl = rs_lav(uv1,lav_gnd)+mov; 
warp_41=`mod = tex2D(sampler_noise_mq,rsl.xy*.043+modran);
warp_42=`
warp_43=`i=0, p=0;
warp_44=`for (int n=1; n <= quality; n++) {
warp_45=`  p =  ((lav_gnd+noise3 (rsl, mod))/quality);
warp_46=`  i += p;
warp_47=`  lav_gnd -= p*0.1+i*0.2; 
warp_48=`  rsl = rs_lav(uv1,lav_gnd)+mov; 
warp_49=`}
warp_50=`l = saturate(-lav_gnd);
warp_51=`
warp_52=`d=1.8;
warp_53=`dz = -1.5/rsl.z*xyscale*d*dir;
warp_54=`
warp_55=`rsl3 = rsl * 8 + l*0;
warp_56=`ripple = ((noise2 (rsl3-dz) - noise2 (rsl3+dz))* (1-l))*1+0.02;
warp_57=`
warp_58=`ripple = (1/rsl.z*ripple+noise3 (rsl-float3 (dz,0),mod) - noise3 (rsl+float3 (dz,0),mod))*(1-l)/d/sqrt(50+rsl.z)*2000;
warp_59=`
warp_60=`ripple = 1-exp(-ripple);
warp_61=`
warp_62=`ret.r = ripple;
warp_63=`ret.b = l;
warp_64=`ret = lerp(ret,GetBlur1(uv),0.1);
warp_65=`ret.g = rsl.z*xyscale*4;
warp_66=`}
comp_1=`#define sat saturate
comp_2=`static const float2 pix = texsize.zw;
comp_3=`float glow, tmp, lamp, dist, bdist, b2dist, dist_c;
comp_4=`float2 dz, uv1, uv3;
comp_5=`static const float3 CamPos = float3(q4,q5,q6);
comp_6=`static const float myzoom = q7;
comp_7=`static const float3x3 RotMat = float3x3(q20,q21,q22,q23,q24,q25,q26,q27,q28);
comp_8=`static const float3 col_struc =  float3(1,.7,.3) + .2*(rand_preset.xyz-.5);
comp_9=`static float2 center = float2 (q1,q2);
comp_10=`
comp_11=`float3 GetBlurX (float2 uvi, float x) {return lerp (GetPixel(uvi), GetBlur1(uvi), x);}
comp_12=`float GetDist(float2 uvi)   {return 1-GetPixel(uvi).b;}
comp_13=`float GetDistB(float2 uvi)  {return 1-GetBlur1(uvi).b;}
comp_14=`float GetDistB2(float2 uvi) {return 1-GetBlur2(uvi).b;}
comp_15=`
comp_16=`float MinDistB (float2 uvi) {float tmp; float4 nb; //##nicht ideal
comp_17=`  tmp = GetDist(uvi);
comp_18=`  tmp = min(tmp,GetDistB2(uvi)*1) ;
comp_19=`  return tmp;}
comp_20=`
comp_21=`sampler sampler_pw_noise_lq;
comp_22=`
comp_23=`float3 neu, ret1;
comp_24=`float2 rs2,rs0,rss,uv2;
comp_25=`float ang2,c,s;
comp_26=`float2x2 rota = float2x2(.7,.7,-.7,.7);
comp_27=`shader_body
comp_28=`{
comp_29=`float2 uvo = 0.5 + (uv-0.5)*float2(1.1,0.81);
comp_30=`float2 factorA = uv-float2(1-0.5,0.5);
comp_31=`
comp_32=`uv -= 0.5;
comp_33=`uv *= aspect.xy;    
comp_34=`
comp_35=`rs0.x = atan2(uv.y, uv.x)/3.1416*2;
comp_36=`rs0.y = .02/(length (uv));
comp_37=`rss = float2 (rs0.x,rs0.y+time);
comp_38=`rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_39=`float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.7 >= 0);
comp_40=`rss = abs(frac(rss*8)-.5);
comp_41=`float3 dots = saturate(.04/length(rss)) *noise;
comp_42=`
comp_43=`rss = float2 (rs0.x*2,rs0.y+time/2);
comp_44=`rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_45=`noise = (tex2D(sampler_pw_noise_lq,rss/32)-.7 >= 0);
comp_46=`rss = abs(frac(rss*8)-.5);
comp_47=`dots += saturate(.04/length(rss)) * noise;
comp_48=`
comp_49=`dots *= saturate(.04/abs(.01/rs0.y-q6*0))+.0;
comp_50=`dots *= dots*2;
comp_51=`
comp_52=`float3 ret1 = 0;
comp_53=`int anz = 2;
comp_54=`int n = 0;
comp_55=`while (n <= anz) {
comp_56=`    ang2 = 6.28*n/anz;
comp_57=`    c = cos(ang2);
comp_58=`    s = sin(ang2);
comp_59=`    uv2.x =  uv.x*c - uv.y*s;
comp_60=`    uv2.y =  uv.x*s + uv.y*c;
comp_61=`
comp_62=`    neu = GetPixel(uv2+.5) + GetBlur1(uv2+.5);
comp_63=`    ret1 = max(ret1,neu);
comp_64=`n++;
comp_65=`}
comp_66=`ret = ret1 + dots*(1+ret1);
comp_67=`
comp_68=`float2 factorB = float2(0,-1024);
comp_69=`float2 product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_70=`float2 numerator = float2(1,0);
comp_71=`float2 denominator = product;
comp_72=`float2 fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_73=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_74=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_75=`uv = fraction.yx*float2(-1,1)*100;
comp_76=`uv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);
comp_77=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.98; // Eo.S. mirror code with cutted borders
comp_78=`uv = (uv-.5)*.9 + .5;
comp_79=`
comp_80=`uv1 = (uv-center)*aspect.xy;
comp_81=`
comp_82=`dist = MinDistB(uv);
comp_83=`bdist = lerp(dist,GetDistB(uv),.2);
comp_84=`dist_c = clamp(GetDistB2 (center),.1,.4); //center distance
comp_85=`
comp_86=`float3 uv2 = mul(float3((uv-.5)*MinDistB(uv),MinDistB(uv))/myzoom,RotMat)+CamPos;
comp_87=`glow = pow (sat(tex2D (sampler_noise_hq,.02*uv2).r-.6)*2,2);
comp_88=`//uv += .003*glow*(tex2D (sampler_noise_mq,uv*2+float2(0,time/4).xy-.5));
comp_89=`
comp_90=`float focus = sat(abs(GetDistB2(uv)-dist_c)*1+.2);
comp_91=`float struc = GetBlurX(uv,focus).r;
comp_92=`
comp_93=`glow = sat(1-exp(-(GetBlur1(uv).r))-.2);
comp_94=`q18 = 1;
comp_95=`ret = pow(struc,1) * (.2+(1-focus) *lerp(dist,1-dist,q18)) * (1+.5*sin(uv2));
comp_96=`ret = lerp(ret, float3(0,1,glow*3), glow);
comp_97=`
comp_98=`//distant light
comp_99=`//ret += pow(1-GetBlurX(uv,.8).b,3)*(.5+.5*slow_roam_cos) *q19;
comp_100=`
comp_101=`//Lamp
comp_102=`uv3 = uv1; 
comp_103=`lamp = saturate(1-4*length(uv3))*(struc)*saturate(1-2*bdist)*1.8;
comp_104=`ret += (1-lum(ret))*lamp;
comp_105=`ret = 1-exp((-2)*ret);
comp_106=`//ret = GetPixel(uv).r;
comp_107=`
comp_108=`// laser
comp_109=`
comp_110=`ret = ret + dots*(1+ret);
comp_111=`}
comp_112=`
comp_113=`//-------------------------------------------
comp_114=`//Written by martin
comp_115=`
