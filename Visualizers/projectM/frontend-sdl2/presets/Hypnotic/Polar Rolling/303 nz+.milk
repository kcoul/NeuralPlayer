MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=0.940
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=13.29089
rot=0.00000
cx=0.500
cy=0.500
dx=-0.28000
dy=-0.32000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.015
ib_r=0.010
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.450
wavecode_0_g=0.650
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=advance=advance+0.006*q6;
wave_0_per_frame2=advance=if(above(advance,1), advance-1, advance);
wave_0_per_frame3=t1=advance;
wave_0_per_point1=n=sample*6.283;
wave_0_per_point2=step=sample*128;
wave_0_per_point3=step2=(int(step)/128)*6.283;
wave_0_per_point4=step3=(step - int(step));
wave_0_per_point5=tm = t1 * 6.283 - 3.1415;
wave_0_per_point6=
wave_0_per_point7=//star lines
wave_0_per_point8=xp=sin(step2) * 0.4;
wave_0_per_point9=yp=cos(step2) * 0.4;
wave_0_per_point10=zp=sin(step2*19.3)*3.1415 + step3*0.35 - tm;
wave_0_per_point11=zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_0_per_point12=
wave_0_per_point13=
wave_0_per_point14=//kill stray lines from front to back
wave_0_per_point15=a=if(below(step3,0.36) , 0 , 1);
wave_0_per_point16=a=if(above(step3,0.64) , 0 , a);
wave_0_per_point17=a=if(below(zp,-3) , 0 , a);
wave_0_per_point18=a=if(above(zp,3) , 0 , a);
wave_0_per_point19=
wave_0_per_point20=//a=a*(zp/6.08);
wave_0_per_point21=a=a*(1-step3);
wave_0_per_point22=a=min( max(a,0) , 1);
wave_0_per_point23=
wave_0_per_point24=
wave_0_per_point25=zp=zp*2 - 3.1415;
wave_0_per_point26=
wave_0_per_point27=//zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_0_per_point28=
wave_0_per_point29=a=a * (1-(zp+2.1415)/6.283);
wave_0_per_point30=
wave_0_per_point31=a=if(below(zp,-1.5) , 0 , a);
wave_0_per_point32=a=if(above(zp,4.0) , 0 , a);
wave_0_per_point33=
wave_0_per_point34=//shift back when pointing away from camera
wave_0_per_point35=zp=zp-q4*2;
wave_0_per_point36=
wave_0_per_point37=//z rotation
wave_0_per_point38=sang=sin(q1);cang=cos(q1);
wave_0_per_point39=xn=xp*sang + yp*cang;
wave_0_per_point40=yn=xp*cang - yp*sang;
wave_0_per_point41=zn=zp;
wave_0_per_point42=xp=xn;yp=yn;zp=zn;
wave_0_per_point43=
wave_0_per_point44=//y rotation;
wave_0_per_point45=sang=sin(q2);cang=cos(q2);
wave_0_per_point46=xn=xp*sang + zp*(cang);
wave_0_per_point47=yn=yp;
wave_0_per_point48=zn=xp*cang - zp*sang;
wave_0_per_point49=xp=xn;yp=yn;zp=zn;
wave_0_per_point50=
wave_0_per_point51=//x rotation;
wave_0_per_point52=sang=sin(q3);cang=cos(q3);
wave_0_per_point53=xn=xp;
wave_0_per_point54=yn=yp*sang + zp*cang;
wave_0_per_point55=zn=yp*cang - zp*sang;
wave_0_per_point56=xp=xn;yp=yn;zp=zn;
wave_0_per_point57=
wave_0_per_point58=
wave_0_per_point59=
wave_0_per_point60=zp=zp*2+1.55;
wave_0_per_point61=
wave_0_per_point62=//near clipping plane
wave_0_per_point63=a=a*above(zp,0.75);
wave_0_per_point64=//a=a*below(zp,8.55);
wave_0_per_point65=
wave_0_per_point66=x=xp/zp+ 0.5;
wave_0_per_point67=y=yp/zp * 1.3 + 0.5;
wave_0_per_point68=
wave_0_per_point69=a=a*0.5
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.450
wavecode_1_g=0.650
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=advance=advance+0.005*q6;
wave_1_per_frame2=advance=advance * below(advance,1);
wave_1_per_frame3=t1=advance;
wave_1_per_point1=n=sample*6.283;
wave_1_per_point2=step=sample*128;
wave_1_per_point3=step2=(int(step)/128)*6.283;
wave_1_per_point4=step3=(step - int(step));
wave_1_per_point5=tm = t1 * 6.283 - 3.1415;
wave_1_per_point6=
wave_1_per_point7=//star lines
wave_1_per_point8=xp=sin(step2) * 0.4;
wave_1_per_point9=yp=cos(step2) * 0.4;
wave_1_per_point10=zp=sin(step2*19.3)*3.1415 + step3*0.35 - tm;
wave_1_per_point11=zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_1_per_point12=
wave_1_per_point13=
wave_1_per_point14=//kill stray lines from front to back
wave_1_per_point15=a=if(below(step3,0.36) , 0 , 1);
wave_1_per_point16=a=if(above(step3,0.64) , 0 , a);
wave_1_per_point17=a=if(below(zp,-3) , 0 , a);
wave_1_per_point18=a=if(above(zp,3) , 0 , a);
wave_1_per_point19=
wave_1_per_point20=//a=a*(zp/6.08);
wave_1_per_point21=a=a*(1-step3);
wave_1_per_point22=a=min( max(a,0) , 1);
wave_1_per_point23=
wave_1_per_point24=
wave_1_per_point25=zp=zp*2 - 3.1415;
wave_1_per_point26=
wave_1_per_point27=//zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_1_per_point28=
wave_1_per_point29=a=a * (1-(zp+2.1415)/6.283);
wave_1_per_point30=
wave_1_per_point31=a=if(below(zp,-1.5) , 0 , a);
wave_1_per_point32=a=if(above(zp,4.0) , 0 , a);
wave_1_per_point33=
wave_1_per_point34=//shift back when pointing away from camera
wave_1_per_point35=zp=zp-q4*2;
wave_1_per_point36=
wave_1_per_point37=//z rotation
wave_1_per_point38=sang=sin(q1);cang=cos(q1);
wave_1_per_point39=xn=xp*sang + yp*cang;
wave_1_per_point40=yn=xp*cang - yp*sang;
wave_1_per_point41=zn=zp;
wave_1_per_point42=xp=xn;yp=yn;zp=zn;
wave_1_per_point43=
wave_1_per_point44=//y rotation;
wave_1_per_point45=sang=sin(q2);cang=cos(q2);
wave_1_per_point46=xn=xp*sang + zp*(cang);
wave_1_per_point47=yn=yp;
wave_1_per_point48=zn=xp*cang - zp*sang;
wave_1_per_point49=xp=xn;yp=yn;zp=zn;
wave_1_per_point50=
wave_1_per_point51=//x rotation;
wave_1_per_point52=sang=sin(q3);cang=cos(q3);
wave_1_per_point53=xn=xp;
wave_1_per_point54=yn=yp*sang + zp*cang;
wave_1_per_point55=zn=yp*cang - zp*sang;
wave_1_per_point56=xp=xn;yp=yn;zp=zn;
wave_1_per_point57=
wave_1_per_point58=
wave_1_per_point59=
wave_1_per_point60=zp=zp*2+1.55;
wave_1_per_point61=
wave_1_per_point62=//near clipping plane
wave_1_per_point63=a=a*above(zp,0.75);
wave_1_per_point64=//a=a*below(zp,8.55);
wave_1_per_point65=
wave_1_per_point66=x=-xp/zp+ 0.5;
wave_1_per_point67=y=yp/zp * 1.3 + 0.5;
wave_1_per_point68=a=a*0.5
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.300
wavecode_2_g=0.600
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=advance=advance+0.005*q6;
wave_2_per_frame2=advance=advance * below(advance,1);
wave_2_per_frame3=t1=advance;
wave_2_per_point1=n=sample*6.283;
wave_2_per_point2=step=sample*128;
wave_2_per_point3=step2=(int(step)/128)*6.283;
wave_2_per_point4=step3=(step - int(step));
wave_2_per_point5=tm = t1 * 6.283 - 3.1415;
wave_2_per_point6=
wave_2_per_point7=//star lines
wave_2_per_point8=xp=sin(step2) * 1.1;
wave_2_per_point9=yp=cos(step2) * 1.1;
wave_2_per_point10=zp=sin(step2*15.3)*3.1415 + step3*0.35 - tm;
wave_2_per_point11=zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_2_per_point12=
wave_2_per_point13=
wave_2_per_point14=//kill stray lines from front to back
wave_2_per_point15=a=if(below(step3,0.36) , 0 , 1);
wave_2_per_point16=a=if(above(step3,0.64) , 0 , a);
wave_2_per_point17=a=if(below(zp,-3) , 0 , a);
wave_2_per_point18=a=if(above(zp,3) , 0 , a);
wave_2_per_point19=
wave_2_per_point20=//a=a*(zp/6.08);
wave_2_per_point21=a=a*(1-step3);
wave_2_per_point22=a=min( max(a,0) , 1);
wave_2_per_point23=
wave_2_per_point24=
wave_2_per_point25=zp=zp*2 - 3.1415;
wave_2_per_point26=
wave_2_per_point27=//zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_2_per_point28=
wave_2_per_point29=a=a * (1-(zp+2.1415)/6.283);
wave_2_per_point30=
wave_2_per_point31=a=if(below(zp,-1.5) , 0 , a);
wave_2_per_point32=a=if(above(zp,4.0) , 0 , a);
wave_2_per_point33=
wave_2_per_point34=//shift back when pointing away from camera
wave_2_per_point35=zp=zp-q4*2;
wave_2_per_point36=
wave_2_per_point37=
wave_2_per_point38=//z rotation
wave_2_per_point39=sang=sin(q1);cang=cos(q1);
wave_2_per_point40=xn=xp*sang + yp*cang;
wave_2_per_point41=yn=xp*cang - yp*sang;
wave_2_per_point42=zn=zp;
wave_2_per_point43=xp=xn;yp=yn;zp=zn;
wave_2_per_point44=
wave_2_per_point45=//y rotation;
wave_2_per_point46=sang=sin(q2);cang=cos(q2);
wave_2_per_point47=xn=xp*sang + zp*(cang);
wave_2_per_point48=yn=yp;
wave_2_per_point49=zn=xp*cang - zp*sang;
wave_2_per_point50=xp=xn;yp=yn;zp=zn;
wave_2_per_point51=
wave_2_per_point52=//x rotation;
wave_2_per_point53=sang=sin(q3);cang=cos(q3);
wave_2_per_point54=xn=xp;
wave_2_per_point55=yn=yp*sang + zp*cang;
wave_2_per_point56=zn=yp*cang - zp*sang;
wave_2_per_point57=xp=xn;yp=yn;zp=zn;
wave_2_per_point58=
wave_2_per_point59=
wave_2_per_point60=
wave_2_per_point61=zp=zp*2+1.55;
wave_2_per_point62=
wave_2_per_point63=//near clipping plane
wave_2_per_point64=a=a*above(zp,0.75);
wave_2_per_point65=//a=a*below(zp,8.55);
wave_2_per_point66=
wave_2_per_point67=x=xp/zp+ 0.5;
wave_2_per_point68=y=yp/zp * 1.3 + 0.5;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.000
wavecode_3_g=0.400
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=advance=advance+0.004*q6;
wave_3_per_frame2=advance=advance * below(advance,1);
wave_3_per_frame3=t1=advance;
wave_3_per_point1=n=sample*6.283;
wave_3_per_point2=step=sample*128;
wave_3_per_point3=step2=(int(step)/128)*6.283;
wave_3_per_point4=step3=(step - int(step));
wave_3_per_point5=tm = t1 * 6.283 - 3.1415;
wave_3_per_point6=
wave_3_per_point7=//star lines
wave_3_per_point8=xp=sin(step2) * 1.6;
wave_3_per_point9=yp=cos(step2) * 1.6;
wave_3_per_point10=zp=sin(step2*11.3)*3.1415 + step3*0.35 - tm;
wave_3_per_point11=zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_3_per_point12=
wave_3_per_point13=
wave_3_per_point14=//kill stray lines from front to back
wave_3_per_point15=a=if(below(step3,0.36) , 0 , 1);
wave_3_per_point16=a=if(above(step3,0.64) , 0 , a);
wave_3_per_point17=a=if(below(zp,-3) , 0 , a);
wave_3_per_point18=a=if(above(zp,3) , 0 , a);
wave_3_per_point19=
wave_3_per_point20=//a=a*(zp/6.08);
wave_3_per_point21=a=a*(1-step3);
wave_3_per_point22=a=min( max(a,0) , 1);
wave_3_per_point23=
wave_3_per_point24=
wave_3_per_point25=zp=zp*2 - 3.1415;
wave_3_per_point26=
wave_3_per_point27=//zp=if(below(zp,-3.1415), zp+6.283 , zp);
wave_3_per_point28=
wave_3_per_point29=a=a * (1-(zp+2.1415)/6.283);
wave_3_per_point30=
wave_3_per_point31=a=if(below(zp,-1.5) , 0 , a);
wave_3_per_point32=a=if(above(zp,4.0) , 0 , a);
wave_3_per_point33=
wave_3_per_point34=//shift back when pointing away from camera
wave_3_per_point35=zp=zp-q4*2;
wave_3_per_point36=
wave_3_per_point37=
wave_3_per_point38=//z rotation
wave_3_per_point39=sang=sin(q1);cang=cos(q1);
wave_3_per_point40=xn=xp*sang + yp*cang;
wave_3_per_point41=yn=xp*cang - yp*sang;
wave_3_per_point42=zn=zp;
wave_3_per_point43=xp=xn;yp=yn;zp=zn;
wave_3_per_point44=
wave_3_per_point45=//y rotation;
wave_3_per_point46=sang=sin(q2);cang=cos(q2);
wave_3_per_point47=xn=xp*sang + zp*(cang);
wave_3_per_point48=yn=yp;
wave_3_per_point49=zn=xp*cang - zp*sang;
wave_3_per_point50=xp=xn;yp=yn;zp=zn;
wave_3_per_point51=
wave_3_per_point52=//x rotation;
wave_3_per_point53=sang=sin(q3);cang=cos(q3);
wave_3_per_point54=xn=xp;
wave_3_per_point55=yn=yp*sang + zp*cang;
wave_3_per_point56=zn=yp*cang - zp*sang;
wave_3_per_point57=xp=xn;yp=yn;zp=zn;
wave_3_per_point58=
wave_3_per_point59=
wave_3_per_point60=
wave_3_per_point61=zp=zp*2+1.55;
wave_3_per_point62=
wave_3_per_point63=//near clipping plane
wave_3_per_point64=a=a*above(zp,0.75);
wave_3_per_point65=//a=a*below(zp,8.55);
wave_3_per_point66=
wave_3_per_point67=x=xp/zp+ 0.5;
wave_3_per_point68=y=yp/zp * 1.3 + 0.5;
shapecode_0_enabled=1
shapecode_0_sides=5
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.38700
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.69447
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.800
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=1
shapecode_1_sides=5
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.610
shapecode_1_y=0.410
shapecode_1_rad=0.48170
shapecode_1_ang=1.00531
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.10462
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.400
shapecode_1_r2=0.400
shapecode_1_g2=0.600
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_init1=flip=1
shape_1_per_frame1=flip=-flip;
shape_1_per_frame2=
shape_1_per_frame3=x=sin(q7)*0.2*flip + 0.5;
shape_1_per_frame4=y=cos(q7)*0.2*1.3 + 0.5;
shape_1_per_frame5=ang=-time*0.5;
shape_1_per_frame6=
shape_1_per_frame7=vol=(bass+mid+treb)*0.25;
shape_1_per_frame8=vol=vol*vol;
shape_1_per_frame9=
shape_1_per_frame10=a=a*min(vol,1);
shapecode_2_enabled=1
shapecode_2_sides=5
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.28999
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=2.59926
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=0.500
shapecode_2_b2=0.700
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=x=sin(q8*2)*0.2;
shape_2_per_frame2=y=cos(q8*2)*0.2;
shape_2_per_frame3=
shape_2_per_frame4=
shape_2_per_frame5=
shape_2_per_frame6=x=x+0.2;
shape_2_per_frame7=ang=q7*2;
shape_2_per_frame8=sang=sin(ang);cang=cos(ang);
shape_2_per_frame9=xn=x*sang + y*cang;
shape_2_per_frame10=yn=x*cang - y*sang;
shape_2_per_frame11=x=xn + 0.3;
shape_2_per_frame12=y=yn*1.3 + 0.5;
shape_2_per_frame13=
shape_2_per_frame14=
shape_2_per_frame15=ang=-time*2;
shapecode_3_enabled=1
shapecode_3_sides=15
shapecode_3_additive=1
shapecode_3_thickOutline=1
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.21948
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00815
shapecode_3_r=1.000
shapecode_3_g=0.600
shapecode_3_b=0.500
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.600
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=vol=(bass+mid+treb)*0.25;
shape_3_per_frame2=vol=vol*vol;
shape_3_per_frame3=
shape_3_per_frame4=a=min(vol,1);
per_frame_init_1=
per_frame_init_2=zoom=1;
per_frame_init_3=xpos=0;
per_frame_init_4=ypos=0;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=decay=1;
per_frame_26=
per_frame_27=vol= (bass+mid+treb)*0.55;
per_frame_28=vol=vol;
per_frame_29=
per_frame_30=
per_frame_31=mv_r = 0.5 + 0.4*sin(time*1.324);
per_frame_32=mv_g = 0.5 + 0.4*cos(time*1.371);
per_frame_33=
per_frame_34=
per_frame_35=
per_frame_36=
per_frame_37=zoom=.7;
per_frame_38=
per_frame_39=musictime=(musictime+vol*1.5)-1;
per_frame_40=q4=0.5;
per_frame_41=q5=0.5;
per_frame_42=
per_frame_43=dx=sin(musictime*0.1)*0.05;
per_frame_44=dy=cos(musictime*0.069)*0.04;
per_frame_45=
per_frame_46=
per_frame_47=
per_frame_48=
per_frame_49=
per_pixel_1=rd=sqrt( sqr( (x-0.5-q4)*1.7) + sqr( (y-0.5+q5)*1.2 ) );
per_pixel_2=cx=0.5+q4;
per_pixel_3=cy=0.5-q5;
per_pixel_4=
per_pixel_5=zoom=(rd/rd)-.05;
per_pixel_6=rot=(rd/rd)+sin(time/5);
warp_1=`sampler sampler_fw_clouds;
warp_2=`shader_body
warp_3=`{// sample previous frame
warp_4=`ret = tex2D( sampler_main, uv ).xyz;
warp_5=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_6=`                      ((uv.xyy*q27
warp_7=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_8=`                      ).xyz*
warp_9=`                      float3(1,1,0)*0.05 + 
warp_10=`                      time*float3(0,0,1)*q29
warp_11=`                     );
warp_12=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_13=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_14=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_15=`float blur =sin(bass*90)*rad;
warp_16=`ret=0.125*(
warp_17=`GetPixel(float2(uv.x-0.01*blur,uv.y-0.01*blur)) +
warp_18=`GetPixel(float2(uv.x+0.01*blur,uv.y+0.01*blur)) +
warp_19=`GetPixel(float2(uv.x-0.01*blur,uv.y+0.01*blur)) +
warp_20=`GetPixel(float2(uv.x+0.01*blur,uv.y-0.01*blur)) +
warp_21=`GetPixel(float2(uv.x,uv.y-0.01*blur)) +
warp_22=`GetPixel(float2(uv.x,uv.y+0.01*blur)) +
warp_23=`GetPixel(float2(uv.x-0.01*blur,uv.y)) +
warp_24=`GetPixel(float2(uv.x+0.01*blur,uv.y)));
warp_25=`//add a 'bass overbright' effect:
warp_26=`ret-=-(lum(ret)<sin(time*90))*ret*blur+(lum(ret)>sin(-time*90))*ret*blur;
warp_27=`}
comp_1=`sampler sampler_sunrise;
comp_2=`
comp_3=`float2 factorA, factorB, product;
comp_4=`float2 numerator, denominator, fraction;
comp_5=`
comp_6=`shader_body
comp_7=`{
comp_8=`float2 uvo = uv;
comp_9=`//*** Flexis Moebius transformation code
comp_10=`
comp_11=`float2 uvm2=0;
comp_12=`
comp_13=`uvm2.x=uvo.x-.05*tex2D(sampler_noise_hq, uvo.x*.5).x;
comp_14=`uvm2.y=uvo.y-.05*tex2D(sampler_noise_hq, uvo.y*.5).x;
comp_15=`
comp_16=`
comp_17=`uv = (uv-0.5)*aspect.xy*2;
comp_18=`factorA = uv;
comp_19=`factorB = float2(q21,q22);
comp_20=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
comp_21=`                  factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
comp_22=`
comp_23=`numerator = product + float2(q23,q24);
comp_24=`
comp_25=`factorA = uv;
comp_26=`factorB = float2(q25,q26);
comp_27=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
comp_28=`                  factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
comp_29=`
comp_30=`
comp_31=`denominator = product + float2(q27,q28);
comp_32=`
comp_33=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_34=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_35=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_36=`
comp_37=`uv = fraction*0.5;
comp_38=`
comp_39=`// ***
comp_40=`
comp_41=`
comp_42=`// *** Flexis logarithmic spiral code
comp_43=`
comp_44=`float t = 1.2*time; // set velocity here
comp_45=`float2 c = (uv-0.5)*aspect.wz;
comp_46=`float1 ang_hq = atan2(c.x,c.y);
comp_47=`// q11 = 1/asin(1); from the init section
comp_48=`float2 spiral = float2(ang_hq*q11*4+t,aspect.w*log(length(c))+ang_hq*q11-t);
comp_49=`spiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1 ))*.5; // mirror
comp_50=`uv = spiral.xy;
comp_51=`
comp_52=`// ***
comp_53=`
comp_54=`float2 uvm=0;
comp_55=`
comp_56=`uvm.x=uv.x-.05*tex2D(sampler_noise_hq, uv.x*.5).x;
comp_57=`uvm.y=uv.y-.05*tex2D(sampler_noise_hq, uv.y*.5).x;
comp_58=`
comp_59=`float3 blur = GetBlur1(uvm);
comp_60=`float3 sharp = tex2D(sampler_main, uvm);
comp_61=`float3 fix = GetPixel(frac(uvm));
comp_62=`
comp_63=`float3 mod = GetPixel(float2((fix.x)+cos(uvm.x-roam_sin.y*2-2*q31), (fix.z)-sin(uvm.y+roam_cos.x*2-2*q32)));
comp_64=`
comp_65=`float3 fret = (5*fix-blur*rad)-mod.xyz;
comp_66=`float3 inv = 1-fret;
comp_67=`
comp_68=`float melt = dot(fret, inv);
comp_69=`
comp_70=`ret=tex2D(sampler_main, float2(uv.x, uv.y*.75))*inv+.55*fret;
comp_71=`float3 melt_ret=lerp(ret, inv, 1.5*saturate(melt));
comp_72=`
comp_73=`
comp_74=`float3 blur2 = GetBlur1(uvm2);
comp_75=`float3 sharp2 = tex2D(sampler_main, uvm2);
comp_76=`float3 fix2 = GetPixel(frac(uvm2));
comp_77=`
comp_78=`float mod2 = (fix2+cos(rad*2-roam_sin*2+time));
comp_79=`
comp_80=`float3 fret2 = (4*fix2-blur2*rad)*mod2;
comp_81=`float3 inv2 = 1-fret;
comp_82=`
comp_83=`float melt2 = dot(fret, inv);
comp_84=`
comp_85=`ret=tex2D(sampler_main, float2(uvm2.x, uvm2.y))*inv2+.55*fret2;
comp_86=`float3 warp_ret=lerp(ret, inv2, 1.5*saturate(melt2));
comp_87=`
comp_88=`ret=warp_ret*melt_ret;
comp_89=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_90=`                      ((uvm.xyy*q28
comp_91=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_92=`                      ).xyz*
comp_93=`                      float3(1,1,0)*0.05 + 
comp_94=`                      time*float3(0,0,1)*q31
comp_95=`                     );
comp_96=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_97=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_98=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_99=`
comp_100=`}
comp_101=`
