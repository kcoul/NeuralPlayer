MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.930
fDecay=0.960
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=0.010
fWarpScale=0.010
fZoomExponent=1.00000
fShader=1.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.110
ob_g=0.000
ob_b=0.100
ob_a=0.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.850
wavecode_0_g=0.930
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=advance=advance+0.01;
wave_0_per_frame2=advance=advance * below(advance,1);
wave_0_per_frame3=t1=advance;
wave_0_per_frame4=
wave_0_per_frame5=r = treb_att * 0.32;
wave_0_per_frame6=g = treb_att * 0.32;
wave_0_per_frame7=b = treb_att * 0.32;
wave_0_per_frame8=a = treb_att;
wave_0_per_point1=n=sample*6.283;
wave_0_per_point2=step=sample*32;
wave_0_per_point3=step2=(int(step)/32)*6.283;
wave_0_per_point4=step3=(step - int(step));
wave_0_per_point5=tm = t1 * 6.283 - 2;
wave_0_per_point6=
wave_0_per_point7=xp=sin(step2) * 0.4;
wave_0_per_point8=yp=cos(step2) * 0.4;
wave_0_per_point9=zp=sin(step2*9)*2 + step3 - tm;
wave_0_per_point10=zp=if(below(zp,0), zp+6.283 , zp);
wave_0_per_point11=
wave_0_per_point12=a=if(below(step3,0.07) , 0 , 1);
wave_0_per_point13=a=if(above(step3,0.93) , 0 , a);
wave_0_per_point14=a=if(below(zp,0.07) , 0 , a);
wave_0_per_point15=a=if(above(zp,6.2) , 0 , a);
wave_0_per_point16=a=a*(1-zp/6.28) ;
wave_0_per_point17=a=a*(zp/6.28);
wave_0_per_point18=a=a*(1-step3);
wave_0_per_point19=zp=zp*2 - 3.1415;
wave_0_per_point20=
wave_0_per_point21=//z rotation
wave_0_per_point22=sang=sin(q1);cang=cos(q1);
wave_0_per_point23=xn=xp*sang + yp*cang;
wave_0_per_point24=yn=xp*cang - yp*sang;
wave_0_per_point25=zn=zp;
wave_0_per_point26=xp=xn;yp=yn;zp=zn;
wave_0_per_point27=
wave_0_per_point28=//y rotation;
wave_0_per_point29=sang=sin(q2);cang=cos(q2);
wave_0_per_point30=xn=xp*sang + zp*(cang);
wave_0_per_point31=yn=yp;
wave_0_per_point32=zn=xp*cang - zp*sang;
wave_0_per_point33=xp=xn;yp=yn;zp=zn;
wave_0_per_point34=
wave_0_per_point35=//x rotation;
wave_0_per_point36=sang=sin(q3);cang=cos(q3);
wave_0_per_point37=xn=xp;
wave_0_per_point38=yn=yp*sang + zp*cang;
wave_0_per_point39=zn=yp*cang - zp*sang;
wave_0_per_point40=xp=xn;yp=yn;zp=zn;
wave_0_per_point41=
wave_0_per_point42=
wave_0_per_point43=
wave_0_per_point44=zp=zp+1.5;
wave_0_per_point45=
wave_0_per_point46=
wave_0_per_point47=a=if(below(zp,0.5) , 0 , a);
wave_0_per_point48=
wave_0_per_point49=x=xp/zp+ 0.5;
wave_0_per_point50=y=yp/zp * 1.3 + 0.5;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.600
wavecode_1_g=0.800
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=advance=advance+0.01;
wave_1_per_frame2=advance=advance * below(advance,1);
wave_1_per_frame3=t1=advance;
wave_1_per_frame4=
wave_1_per_frame5=
wave_1_per_frame6=r = mid_att * 0.72;
wave_1_per_frame7=g = mid_att * 0.72;
wave_1_per_frame8=b = mid_att * 0.72;
wave_1_per_frame9=a = mid_att;
wave_1_per_point1=n=sample*6.283;
wave_1_per_point2=step=sample*32;
wave_1_per_point3=step2=(int(step)/32)*6.283;
wave_1_per_point4=step3=(step - int(step));
wave_1_per_point5=tm = t1 * 6.283 - 2;
wave_1_per_point6=
wave_1_per_point7=xp=sin(step2) * 0.6;
wave_1_per_point8=yp=cos(step2) * 0.6;
wave_1_per_point9=zp=sin(step2*7)*2 + step3 - tm;
wave_1_per_point10=zp=if(below(zp,0), zp+6.283 , zp);
wave_1_per_point11=
wave_1_per_point12=a=if(below(step3,0.07) , 0 , 1);
wave_1_per_point13=a=if(above(step3,0.93) , 0 , a);
wave_1_per_point14=a=if(below(zp,0.07) , 0 , a);
wave_1_per_point15=a=if(above(zp,6.2) , 0 , a);
wave_1_per_point16=a=a*(1-zp/6.28) ;
wave_1_per_point17=a=a*(zp/6.28);
wave_1_per_point18=a=a*(1-step3);
wave_1_per_point19=zp=zp*2 - 3.1415;
wave_1_per_point20=
wave_1_per_point21=//z rotation
wave_1_per_point22=sang=sin(q1);cang=cos(q1);
wave_1_per_point23=xn=xp*sang + yp*cang;
wave_1_per_point24=yn=xp*cang - yp*sang;
wave_1_per_point25=zn=zp;
wave_1_per_point26=xp=xn;yp=yn;zp=zn;
wave_1_per_point27=
wave_1_per_point28=//y rotation;
wave_1_per_point29=sang=sin(q2);cang=cos(q2);
wave_1_per_point30=xn=xp*sang + zp*(cang);
wave_1_per_point31=yn=yp;
wave_1_per_point32=zn=xp*cang - zp*sang;
wave_1_per_point33=xp=xn;yp=yn;zp=zn;
wave_1_per_point34=
wave_1_per_point35=//x rotation;
wave_1_per_point36=sang=sin(q3);cang=cos(q3);
wave_1_per_point37=xn=xp;
wave_1_per_point38=yn=yp*sang + zp*cang;
wave_1_per_point39=zn=yp*cang - zp*sang;
wave_1_per_point40=xp=xn;yp=yn;zp=zn;
wave_1_per_point41=
wave_1_per_point42=
wave_1_per_point43=
wave_1_per_point44=zp=zp+1.5;
wave_1_per_point45=
wave_1_per_point46=
wave_1_per_point47=a=if(below(zp,0.5) , 0 , a);
wave_1_per_point48=
wave_1_per_point49=x=xp/zp+ 0.5;
wave_1_per_point50=y=yp/zp * 1.3 + 0.5;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.300
wavecode_2_g=0.600
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=advance=advance+0.015;
wave_2_per_frame2=advance=advance * below(advance,1);
wave_2_per_frame3=t1=advance;
wave_2_per_frame4=
wave_2_per_frame5=
wave_2_per_frame6=r = bass_att * 2.22;
wave_2_per_frame7=g = bass_att * 2.22;
wave_2_per_frame8=b = bass_att * 2.22;
wave_2_per_frame9=a = bass_att;
wave_2_per_point1=n=sample*6.283;
wave_2_per_point2=step=sample*32;
wave_2_per_point3=step2=(int(step)/32)*6.283;
wave_2_per_point4=step3=(step - int(step));
wave_2_per_point5=tm = t1 * 6.283 - 2;
wave_2_per_point6=
wave_2_per_point7=xp=sin(step2) * 1;
wave_2_per_point8=yp=cos(step2) * 1;
wave_2_per_point9=zp=sin(step2*11)*2 + step3 - tm;
wave_2_per_point10=zp=if(below(zp,0), zp+6.283 , zp);
wave_2_per_point11=
wave_2_per_point12=a=if(below(step3,0.07) , 0 , 1);
wave_2_per_point13=a=if(above(step3,0.93) , 0 , a);
wave_2_per_point14=a=if(below(zp,0.07) , 0 , a);
wave_2_per_point15=a=if(above(zp,6.2) , 0 , a);
wave_2_per_point16=a=a*(1-zp/6.28) ;
wave_2_per_point17=a=a*(zp/6.28);
wave_2_per_point18=a=a*(1-step3);
wave_2_per_point19=zp=zp*2 - 3.1415;
wave_2_per_point20=
wave_2_per_point21=//z rotation
wave_2_per_point22=sang=sin(q1);cang=cos(q1);
wave_2_per_point23=xn=xp*sang + yp*cang;
wave_2_per_point24=yn=xp*cang - yp*sang;
wave_2_per_point25=zn=zp;
wave_2_per_point26=xp=xn;yp=yn;zp=zn;
wave_2_per_point27=
wave_2_per_point28=//y rotation;
wave_2_per_point29=sang=sin(q2);cang=cos(q2);
wave_2_per_point30=xn=xp*sang + zp*(cang);
wave_2_per_point31=yn=yp;
wave_2_per_point32=zn=xp*cang - zp*sang;
wave_2_per_point33=xp=xn;yp=yn;zp=zn;
wave_2_per_point34=
wave_2_per_point35=//x rotation;
wave_2_per_point36=sang=sin(q3);cang=cos(q3);
wave_2_per_point37=xn=xp;
wave_2_per_point38=yn=yp*sang + zp*cang;
wave_2_per_point39=zn=yp*cang - zp*sang;
wave_2_per_point40=xp=xn;yp=yn;zp=zn;
wave_2_per_point41=
wave_2_per_point42=
wave_2_per_point43=
wave_2_per_point44=zp=zp+1.5;
wave_2_per_point45=
wave_2_per_point46=
wave_2_per_point47=a=if(below(zp,0.5) , 0 , a);
wave_2_per_point48=
wave_2_per_point49=x=xp/zp+ 0.5;
wave_2_per_point50=y=yp/zp * 1.3 + 0.5;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.000
wavecode_3_g=0.400
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=advance=advance+0.02;
wave_3_per_frame2=advance=advance * below(advance,1);
wave_3_per_frame3=t1=advance;
wave_3_per_frame4=r = bass_att * 4;
wave_3_per_frame5=g = bass_att * 4;
wave_3_per_frame6=b = bass_att * 4;
wave_3_per_frame7=a = bass_att;
wave_3_per_point1=n=sample*6.283;
wave_3_per_point2=step=sample*32;
wave_3_per_point3=step2=(int(step)/32)*6.283;
wave_3_per_point4=step3=(step - int(step));
wave_3_per_point5=tm = t1 * 6.283 - 2;
wave_3_per_point6=
wave_3_per_point7=xp=sin(step2) * 1.6;
wave_3_per_point8=yp=cos(step2) * 1.6;
wave_3_per_point9=zp=sin(step2*17)*2 + step3 - tm;
wave_3_per_point10=zp=if(below(zp,0), zp+6.283 , zp);
wave_3_per_point11=
wave_3_per_point12=a=if(below(step3,0.07) , 0 , 1);
wave_3_per_point13=a=if(above(step3,0.93) , 0 , a);
wave_3_per_point14=a=if(below(zp,0.07) , 0 , a);
wave_3_per_point15=a=if(above(zp,6.2) , 0 , a);
wave_3_per_point16=a=a*(1-zp/6.28) ;
wave_3_per_point17=a=a*(zp/6.28);
wave_3_per_point18=a=a*(1-step3);
wave_3_per_point19=zp=zp*2 - 3.1415;
wave_3_per_point20=
wave_3_per_point21=//z rotation
wave_3_per_point22=sang=sin(q1);cang=cos(q1);
wave_3_per_point23=xn=xp*sang + yp*cang;
wave_3_per_point24=yn=xp*cang - yp*sang;
wave_3_per_point25=zn=zp;
wave_3_per_point26=xp=xn;yp=yn;zp=zn;
wave_3_per_point27=
wave_3_per_point28=//y rotation;
wave_3_per_point29=sang=sin(q2);cang=cos(q2);
wave_3_per_point30=xn=xp*sang + zp*(cang);
wave_3_per_point31=yn=yp;
wave_3_per_point32=zn=xp*cang - zp*sang;
wave_3_per_point33=xp=xn;yp=yn;zp=zn;
wave_3_per_point34=
wave_3_per_point35=//x rotation;
wave_3_per_point36=sang=sin(q3);cang=cos(q3);
wave_3_per_point37=xn=xp;
wave_3_per_point38=yn=yp*sang + zp*cang;
wave_3_per_point39=zn=yp*cang - zp*sang;
wave_3_per_point40=xp=xn;yp=yn;zp=zn;
wave_3_per_point41=
wave_3_per_point42=
wave_3_per_point43=
wave_3_per_point44=zp=zp+1.5;
wave_3_per_point45=
wave_3_per_point46=
wave_3_per_point47=a=if(below(zp,0.5) , 0 , a);
wave_3_per_point48=
wave_3_per_point49=x=xp/zp+ 0.5;
wave_3_per_point50=y=yp/zp * 1.3 + 0.5;
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.050
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.050
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=mv_x=64;mv_y=48;
per_frame_init_2=nut=0;
per_frame_init_3=stp=0;stq=0;
per_frame_init_4=rtp=0;rtq=0;
per_frame_init_5=wvr=0;
per_frame_init_6=decay=0;
per_frame_init_7=dcsp=0
per_frame_init_8=
per_frame_1=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1   = (vvb+vvm+vvt)*10;
per_frame_12=q2   = (vvb+vvm+vvt)*10;
per_frame_13=q3   = (vvb+vvm+vvt)*10;
per_frame_14=q4   = (vvb+vvm+vvt)*10;
per_frame_15=q5   = (vvb+vvm+vvt)*10;
per_frame_16=q6   = (vvb+vvm+vvt)*10;
per_frame_17=q7   = (vvb+vvm+vvt)*10;
per_frame_18=q8   = (vvb+vvm+vvt)*10;
per_frame_19=q9   = (vvb+vvm+vvt)*10;
per_frame_20=q10  = (vvb+vvm+vvt)*10;
per_frame_21=q11  = (vvb+vvm+vvt)*10;
per_frame_22=q12  = (vvb+vvm+vvt)*10;
per_frame_23=q13  = (vvb+vvm+vvt)*10;
per_frame_24=q14  = (vvb+vvm+vvt)*10;
per_frame_25=q15  = (vvb+vvm+vvt)*10;
per_frame_26=q16  = (vvb+vvm+vvt)*10;
per_frame_27=q17  = (vvb+vvm+vvt)*10;
per_frame_28=q18  = (vvb+vvm+vvt)*10;
per_frame_29=q19  = (vvb+vvm+vvt)*10;
per_frame_30=q20  = (vvb+vvm+vvt)*10;
per_frame_31=q21  = (vvb+vvm+vvt)*10;
per_frame_32=q22  = (vvb+vvm+vvt)*10;
per_frame_33=q23  = (vvb+vvm+vvt)*10;
per_frame_34=q24  = (vvb+vvm+vvt)*10;
per_frame_35=q25  = (vvb+vvm+vvt)*10;
per_frame_36=q26  = (vvb+vvm+vvt)*10;
per_frame_37=q27  = (vvb+vvm+vvt)*10;
per_frame_38=q28  = (vvb+vvm+vvt)*10;
per_frame_39=q29  = (vvb+vvm+vvt)*10;
per_frame_40=q30  = (vvb+vvm+vvt)*10;
per_frame_41=q31  = (vvb+vvm+vvt)*10;
per_frame_42=q32  = (vvb+vvm+vvt)*10;
per_frame_43=
per_frame_44=decay=0.975;
per_frame_45=zoom=1.000;
per_frame_46=
per_frame_47=q1=time*0.3;
per_frame_48=
per_frame_49=flx= sin(time*0.3)*0.8;
per_frame_50=flx= if(below(flx,0) , -(flx*flx*flx) , flx*flx*flx);
per_frame_51=q2=1.57 + flx;
per_frame_52=
per_frame_53=flx= sin(time*0.23)*0.8;
per_frame_54=flx= if(below(flx,0) , -(flx*flx*flx) , flx*flx*flx);
per_frame_55=q3=1.57 + flx;
per_frame_56=
per_frame_57=zoom=treb_att - 3;
per_frame_58= //* 1.004;
per_frame_59=
per_frame_60=
per_frame_61=
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`
warp_6=`
warp_7=`float2 uv1 = (uv-.5) * aspect.xy;
warp_8=`
warp_9=`float2 uv6 = uv1;
warp_10=`float z = q10*24*length(((uv1.x)*(uv1.y)));
warp_11=`float2 d = normalize(uv1);
warp_12=`float2 rs = clamp(tan(z)*d,-2,2);
warp_13=`uv += .01*lum(GetBlur1(uv))*float2 (0,1);
warp_14=`uv -= rs/200;
warp_15=`
warp_16=`uv6 = .4*sin(uv*6+rand_frame*16);
warp_17=`mus = .1/(length(uv6));
warp_18=`mus *= .5*(1+roam_cos);
warp_19=`
warp_20=`float3 blur = GetBlur2(frac(uv));
warp_21=`
warp_22=`float3 crisp= tex2D(sampler_main,uv);
warp_23=`
warp_24=`float3 ret1 = crisp - blur*.02 + .1*mus;
warp_25=`
warp_26=`q25 = 1;
warp_27=`ret = q25*(ret1*.99-.025) + (1-q25)* GetPixel(uv_orig);
warp_28=`
warp_29=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 uv_echo = (uv - .5)*1.00*float2(-1,1) + .5;
comp_4=`    ret = lerp( tex2D(sampler_main, uv).xyz, 
comp_5=`                tex2D(sampler_main, uv_echo).xyz, 
comp_6=`                0.50 
comp_7=`              ); //video echo
comp_8=`    
comp_9=`    float lum = ret.xyz;
comp_10=`    ret = lum;
comp_11=`
comp_12=`    float2 texc = .2 + 0.8*ret.xyz;
comp_13=`    ret = tex2D(sampler_main, texc) * ret.z * 3;
comp_14=`
comp_15=`    ret *= 2; //gamma
comp_16=`}
