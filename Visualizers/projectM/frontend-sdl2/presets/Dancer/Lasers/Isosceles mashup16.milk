MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=4
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.527
fWaveSmoothing=0.450
fWaveParam=0.000
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=1.320
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.800
wave_g=0.490
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.300
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=1.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=75
wavecode_0_sep=20
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=7.85800
wavecode_0_smoothing=0.10000
wavecode_0_r=1.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.200
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=0.000
wavecode_2_g=0.200
wavecode_2_b=0.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=33
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=81
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.04896
shapecode_0_ang=0.00000
shapecode_0_tex_ang=1.00531
shapecode_0_tex_zoom=1.53117
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=
shape_0_per_frame2=trel = time/4;
shape_0_per_frame3=k1 = instance/num_inst;
shape_0_per_frame4=k2 = k1 + trel - int(k1+trel);
shape_0_per_frame5=
shape_0_per_frame6=y0 = k2+.01 ;
shape_0_per_frame7=
shape_0_per_frame8=xwidth = .1*(cos(6*k1)+3); //breite
shape_0_per_frame9=xofs = .1*cos(k2*6+trel)*y0;
shape_0_per_frame10=x = .5 + .4*xwidth*(.2+y0)*sin(k1*1383*xwidth) + xofs;
shape_0_per_frame11=//xwidth in der letzten Klammer : Test
shape_0_per_frame12=
shape_0_per_frame13=y = y0;
shape_0_per_frame14=
shape_0_per_frame15=bright = 1-sqr(y0); 
shape_0_per_frame16=a = max(bright,0)*.4; a2 = 0;
shape_0_per_frame17=rad = .4*y0+.1 - .0*sin(k1*954);
shape_0_per_frame18=
shape_0_per_frame19=r = .0; g = 0; b = .0;
shape_0_per_frame20=r2 = 0; g2 = 0; b2= .3; //## rot mit ampl. mod !
shape_0_per_frame21=additive = 1; ///sonst andere farben im warp-s gestoert
shapecode_1_enabled=0
shapecode_1_sides=14
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=21
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.16056
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.93550
shapecode_1_r=0.000
shapecode_1_g=1.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = instance/num_inst;
shape_1_per_frame2=y = .4;
shape_1_per_frame3=a = .3;
shape_1_per_frame4=a2 = 0;
shapecode_2_enabled=0
shapecode_2_sides=13
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=212
shapecode_2_x=0.650
shapecode_2_y=0.380
shapecode_2_rad=1.26467
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.73678
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=0.000
shapecode_2_a=0.300
shapecode_2_r2=1.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=//q25 = time/4;
shape_2_per_frame2=//trel = 2* (q25/2-int(q25/2));
shape_2_per_frame3=trel = q25;
shape_2_per_frame4=copies = 1;
shape_2_per_frame5=copy = (instance%copies)/copies;
shape_2_per_frame6=k1 = int(instance/copies)*copies/num_inst;
shape_2_per_frame7=k2 = k1 + .5;
shape_2_per_frame8=trel = trel ;
shape_2_per_frame9=t0 = .5; //do not change
shape_2_per_frame10=
shape_2_per_frame11=phase = above(trel,t0);
shape_2_per_frame12=mov1 = bnot(phase)* (t0-trel + .01*k1);
shape_2_per_frame13=mov2 = phase * (trel-t0); //####
shape_2_per_frame14=//mov2 = pow(mov2,.8);
shape_2_per_frame15=stray = 1.2-phase;
shape_2_per_frame16=
shape_2_per_frame17=Tht = 3.14*sin(1234.2*k1+time*bnot(phase)) * stray ;
shape_2_per_frame18=Phi = 3245.1*k1;
shape_2_per_frame19=
shape_2_per_frame20=size0 = .02;
shape_2_per_frame21=ox = mov1*q27 + sin(Tht)*cos(phi)* (size0+mov2*(2+k1));
shape_2_per_frame22=oy = mov1*12 + cos(Tht)* (size0+4*mov2*k2)*(1-mov2*k2)/2;
shape_2_per_frame23=oz = mov1*8 + sin(Tht)*sin(phi)* (size0+mov2*2*(2+k1));
shape_2_per_frame24=
shape_2_per_frame25=z0 = 1;
shape_2_per_frame26=rad = .03 / (oz+z0)/(1+trel*rand(100)/50);
shape_2_per_frame27=
shape_2_per_frame28=x = .5 + ox/(oz+z0);
shape_2_per_frame29=y = q29+.2+ oy/(oz+z0);
shape_2_per_frame30=
shape_2_per_frame31=a = .1*bnot(phase)+phase*max(0,1-mov2*0)*above(oz+z0,0)*.8; 
shapecode_3_enabled=0
shapecode_3_sides=14
shapecode_3_additive=1
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=31
shapecode_3_x=0.750
shapecode_3_y=0.600
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.33570
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=0.000
shapecode_3_a=0.500
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.200
shapecode_3_border_g=0.700
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_init_1=q1 = 0; q2 = 0; q3 = 0; q4 = 0; q5 = 0; q6 = 0; q7 = 0; q8 = 0; q9 = 0; q10 = 0;
per_frame_init_2=q11 = 0; q12 = 0; q13 = 0; q14 = 0; q15 = 0; q16 = 0; q17 = 0; q18 = 0; q19 = 0; q20 = 0;
per_frame_init_3=q21 = 0; q22 = 0; q23 = 0; q24 = 0; q25 = 0; q26 = 0; q27 = 0; q28 = 0; q29 = 0; q10 = 3;
per_frame_init_4=q31 = 0; q32 = 0;
per_frame_init_5=
per_frame_init_6=dir = 0;
per_frame_init_7=rvol = 1;
per_frame_init_8=n = 0;
per_frame_init_9=loop (10000,
per_frame_init_10=  gmegabuf(n) = 0;
per_frame_init_11=  megabuf(n) = 0;
per_frame_init_12=  n = n+1;
per_frame_init_13=);
per_frame_init_14=
per_frame_1=dec_m = pow (0.8, 30/fps); dec_s = pow (0.94, 30/fps); 
per_frame_2=
per_frame_3=
per_frame_4=beat = bass+mid+treb; 
per_frame_5=avg = avg*dec_s + beat*(1-dec_s);
per_frame_6=is_beat = above(beat, peak*8+1*avg) * above (time, t0+.2);
per_frame_7=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_8=peak = is_beat * beat + (1-is_beat)*peak*dec_m;
per_frame_9=index = (index + is_beat) %16;
per_frame_10=index2 = (index2 + is_beat*bnot(index))%8;
per_frame_11=
per_frame_12=q20 = avg;
per_frame_13=q22 = max(0,peak-.0)+.01;
per_frame_14=q24 = is_beat;
per_frame_15=q27 = index +1;
per_frame_16=q28 = index2;
per_frame_17=
per_frame_18=p1 = dec_m * p1 + (1-dec_m) * index;
per_frame_19=p2 = dec_m * p2 + (1-dec_m) * p1;
per_frame_20=p1 = index;
per_frame_21=rot1 = rot1 + sin(p1*2)/fps * avg/5;
per_frame_22=rot2 = rot2 + cos(p1*2/3)/fps*avg/5;
per_frame_23=q1 = rot1;
per_frame_24=q2 = rot2;
per_frame_25=
per_frame_26=pulse = pulse + (bass>.8)/fps*(bass-.8)*16;
per_frame_27=q8 = int(pulse*16)%16;
per_frame_28=q9  = cos(q8)*3;
per_frame_29=q10 = sin(q8)*3;
per_frame_30=
per_frame_31=trig = is_beat * bnot(index%6);
per_frame_32=speed = .35 *pos_z*2 ;
per_frame_33=
per_frame_34=dir  = if (trig, dir + int(rand(3)-1.5)*3.1416/2, dir);
per_frame_35=dir_ = dec_m*dir_ + (1-dec_m)*dir;
per_frame_36=dir__ = dec_m*dir__ + (1-dec_m)*dir_;
per_frame_37=xpos = xpos + cos(dir_)/fps*speed +q24;
per_frame_38=ypos = ypos + sin(dir_)/fps*speed +q24;
per_frame_39=q5 = xpos;
per_frame_40=q6 = ypos;
per_frame_41=
per_frame_42=proxy = max(min(sin((q28%2)*q27+(xpos+ypos)),.5),-.5);
per_frame_43=
per_frame_44=xang =0*cos(dir); yang = 0*sin(dir);
per_frame_45=zang = dir__; ;
per_frame_46=
per_frame_47=pos_z = .5 + proxy/2;
per_frame_48=q29 = .02/pos_z;
per_frame_49=
per_frame_50=ox = 0; oy = 0; oz = pos_z;
per_frame_51=mx = ox*cos(zang) - oy*sin(zang);
per_frame_52=my = ox*sin(zang) + oy*cos(zang);
per_frame_53=ox = mx;oy = my;
per_frame_54=mx = ox*cos(yang) + oz*sin(yang);
per_frame_55=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_56=ox = mx;oz = mz;
per_frame_57=my = oy*cos(xang) - oz*sin(xang);
per_frame_58=mz = oy*sin(xang) + oz*cos(xang);
per_frame_59=oy = my;oz = mz;
per_frame_60=q11=ox; q12 = oy; q13 = oz; //Position
per_frame_61=
per_frame_62=//Vektor x nach rechts
per_frame_63=ox = 1; oy = 0; oz = 0;
per_frame_64=mx = ox*cos(zang) - oy*sin(zang);
per_frame_65=my = ox*sin(zang) + oy*cos(zang);
per_frame_66=ox = mx;oy = my;
per_frame_67=mx = ox*cos(yang) + oz*sin(yang);
per_frame_68=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_69=ox = mx;oz = mz;
per_frame_70=my = oy*cos(xang) - oz*sin(xang);
per_frame_71=mz = oy*sin(xang) + oz*cos(xang);
per_frame_72=oy = my;oz = mz;
per_frame_73=q14=ox; q15 = oy; q16 = oz;
per_frame_74=
per_frame_75=
per_frame_76=//Vektor z nach hinten
per_frame_77=ox = 0; oy = 0; oz = 1;;
per_frame_78=
per_frame_79=mx = ox*cos(zang) - oy*sin(zang);
per_frame_80=my = ox*sin(zang) + oy*cos(zang);
per_frame_81=ox = mx;oy = my;
per_frame_82=mx = ox*cos(yang) + oz*sin(yang);
per_frame_83=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_84=ox = mx;oz = mz;
per_frame_85=my = oy*cos(xang) - oz*sin(xang);
per_frame_86=mz = oy*sin(xang) + oz*cos(xang);
per_frame_87=oy = my;
per_frame_88=oz = mz;
per_frame_89=q17=ox; q18 = oy; q19 = oz;
per_frame_90=
per_frame_91=
per_pixel_1=dx = .02;
warp_1=`float3 ret1, tree;
warp_2=`float mask1;
warp_3=`
warp_4=`shader_body {
warp_5=`float corr = texsize.xy*texsize_noise_hq.zw * 0.05;
warp_6=`float2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;
warp_7=`
warp_8=`float2 uv3 = uv1;
warp_9=`float dist = 40 + 30*rand_preset;
warp_10=`
warp_11=`uv3 = dist * uv1;
warp_12=`
warp_13=`float zu = lum(tex2D (sampler_noise_lq,uv));
warp_14=`float shape = 40* (q29+2);
warp_15=`float leaf = (400*treb) + 16*rand_preset;
warp_16=`float ky = saturate(-uv3.y/50+zu/leaf*cos(16*zu)+.2);
warp_17=`//Faktor an uv.y drehen
warp_18=`
warp_19=`float k1 = uv3.x*(2-.0*uv.y);;
warp_20=`
warp_21=`k1 = k1 - sign (k1)*24; //Verdoppelung
warp_22=`k1 = k1 - sign (k1)*9; //Verdoppelung
warp_23=`k1 = k1 - sign (k1)*5; //Verdoppelung
warp_24=`
warp_25=`int n = 1 ;
warp_26=`float delta = .1;
warp_27=`while (n <= 5) 
warp_28=`{
warp_29=`  k1 += 2*(k1-(3+6*rand_preset.x)*n*sign(k1))*ky;
warp_30=`  //Mult. mit n steuert "Breitenwuchs"
warp_31=`  ky = saturate (ky - delta);
warp_32=`  delta *= 1;
warp_33=`  //delta ist vertikaler Verzweig. abstand
warp_34=`  n++; 
warp_35=`}
warp_36=`
warp_37=`k1 = clamp(k1,-1.6,1.6);
warp_38=`
warp_39=`tree = abs(cos(k1))/2;
warp_40=`tree *= float3 (1,.0,.0) ;
warp_41=`
warp_42=`ret1 = saturate(tree*mid_att*(1-pow(3*uv1.y-.1,4)));
warp_43=`
warp_44=`ret = saturate( ret1+ float3(.5,0,0)*pow(2*uv1.y,6)); //Boden dunkel
warp_45=`
warp_46=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`static const float quality =3, depth = q29;
comp_3=`float3 screen3, sun, cog;
comp_4=`float2 dz, uv0, uv1, uv2, uv4, rsk, dz1,tmp2, Kugel1, rsl;
comp_5=`float  m,n,noise,mask, smoke, mask1, gmask,dx,dy,rad1, lprof,dist,flash;
comp_6=`float  mask2;
comp_7=`static float2 hor = float2 (texsize.z,0)*2;
comp_8=`static float2 ver = float2 (0,texsize.w)*2;
comp_9=`static float2 mov = float2 (q5,q6);
comp_10=`
comp_11=`static float3 t = float3(q14,q15,q16);
comp_12=`static float3 s = float3(q17,q18,q19);
comp_13=`static float3 ts = -cross(s,t);
comp_14=`static float3 pos = float3 (q11,q12,q13);
comp_15=`float3 lavcol (float t) {return saturate(float3(t,pow(t,2.1),pow(t,6)));}
comp_16=`
comp_17=`float2 project (float dist) {  float z;
comp_18=`  z = 4*dist/mul(cross(ts,-t),screen3);
comp_19=`  gmask = (z >= -4) * (z <= 4);
comp_20=`  return float2(mul(float2x3(ts,t),cross(pos,screen3))*z*gmask);}
comp_21=`
comp_22=`shader_body {uv0 = uv;
comp_23=`screen3 = float3 ((uv-.5)*aspect.xy,1);//wirkt wie zoom / Tele ###
comp_24=`
comp_25=`//********* SMOKE
comp_26=`dist = .25; 
comp_27=`rsl = project (dist)+ mov*.5 ;
comp_28=`smoke = GetPixel(frac(rsl)).b ; //mittelwert null !#
comp_29=`
comp_30=`//********* COGWHEELS
comp_31=`dist = .5; 
comp_32=`for (m=1; m <= quality; m++) {
comp_33=`  rsl = project (dist)+ mov ;
comp_34=`  lprof = GetPixel(frac(rsl)).g-.5 ; //mittelwert null !#
comp_35=`  dist -= lprof/quality*depth; 
comp_36=`}
comp_37=`cog = lprof+.5;
comp_38=`
comp_39=`mask = saturate(4*cog-smoke*2);// * (rsl.y >= -1) : Oberkante;
comp_40=`mask1 = saturate(8*cog);
comp_41=`dz.x = GetPixel (rsl.xy-hor).g - GetPixel (rsl.xy+hor).g;
comp_42=`dz.y = GetPixel (rsl.xy-ver).g - GetPixel (rsl.xy+ver).g;
comp_43=`sun = saturate(.1/length(sin(rsl*4)+dz*16)) ;
comp_44=`sun *= .5+.5*tex2D (sampler_noise_hq,sun/4+mov/4);
comp_45=`cog = 2*sun*(1+1*cog);
comp_46=`ret = lerp(smoke/2,cog,mask) ;
comp_47=`
comp_48=`rsl = project(.5)+float2(q9,q10);
comp_49=`flash = saturate(1+(q8%2)-mask1)*bass/2/sqrt(length(sin(time+q8+4*atan2(rsl.y,rsl.x))));
comp_50=`ret += (.1+smoke)*(q28%3 <= 1)*flash*float3(0,.5,1);
comp_51=`//ret = GetPixel(uv0*aspect.xy+.0);
comp_52=`}
comp_53=`
comp_54=`written by martin
comp_55=`END
