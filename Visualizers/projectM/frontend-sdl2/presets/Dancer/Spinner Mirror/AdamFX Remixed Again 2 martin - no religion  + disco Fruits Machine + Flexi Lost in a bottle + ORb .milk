MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=0.97000
rot=-6.27999
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00052
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.800
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=//q1 = state;
wave_0_per_point2=//q2 = basstime;
wave_0_per_point3=
wave_0_per_point4=q1 = 0;
wave_0_per_point5=speed = bass_att*0.6;
wave_0_per_point6=v = sample*1000000 + value2*bass*0.1;
wave_0_per_point7=
wave_0_per_point8=//state 0 elipse
wave_0_per_point9=xs = xs + sin(v)*speed*atan(v*1.51);
wave_0_per_point10=ys = ys + sin(v)*speed*atan((v));
wave_0_per_point11=
wave_0_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);
wave_0_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);
wave_0_per_point14=
wave_0_per_point15=x = x*0.6 + 0.3;
wave_0_per_point16=y = y;
wave_0_per_point17=y = y*0.8;
wave_0_per_point18=
wave_0_per_point19=r = 0.5 + 0.5*sin(time*1.22 + x*2) + 0.1;
wave_0_per_point20=g = 0.4 + 0.4*sin(time*1.307 + y*2);
wave_0_per_point21=b = 0.4 + 0.4*sin(time*1.959 + x*y);
wave_0_per_point22=
wave_0_per_point23=xs = if(above(xs,1000),0 ,xs);
wave_0_per_point24=ys = if(above(ys,1000),0 ,ys);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=//q1 = state;
wave_1_per_point2=//q2 = basstime;
wave_1_per_point3=
wave_1_per_point4=q1 = 0;
wave_1_per_point5=speed = bass_att*0.6;
wave_1_per_point6=v = sample*1000000 + value2*bass*0.1;
wave_1_per_point7=
wave_1_per_point8=//state 0 elipse
wave_1_per_point9=xs = xs + sin(v)*speed*atan(v*1.51);
wave_1_per_point10=ys = ys + sin(v)*speed*atan((v));
wave_1_per_point11=
wave_1_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);
wave_1_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);
wave_1_per_point14=
wave_1_per_point15=x = x*0.6 + 0.3;
wave_1_per_point16=x = -x + 1;
wave_1_per_point17=y = y;
wave_1_per_point18=y = y*0.8;
wave_1_per_point19=
wave_1_per_point20=r = 0.5 + 0.5*sin(time*1.22 + x*x) + 0.1;
wave_1_per_point21=g = 0.4 + 0.4*sin(time*1.107 + y*2);
wave_1_per_point22=b = 0.4 + 0.4*sin(time*1.959 + x*y);
wave_1_per_point23=
wave_1_per_point24=xs = if(above(xs,1000),0 ,xs);
wave_1_per_point25=ys = if(above(ys,1000),0 ,ys);
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=//q1 = state;
wave_2_per_point2=//q2 = basstime;
wave_2_per_point3=
wave_2_per_point4=q1 = 0;
wave_2_per_point5=speed = bass_att*0.8;
wave_2_per_point6=v = sample*10000 + value2*bass*0.1;
wave_2_per_point7=
wave_2_per_point8=//state 0 elipse
wave_2_per_point9=xs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);
wave_2_per_point10=ys = ys + (equal(0,q1))*sin(v*1)*speed;
wave_2_per_point11=
wave_2_per_point12=
wave_2_per_point13=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);
wave_2_per_point14=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);
wave_2_per_point15=
wave_2_per_point16=x = x*0.6;
wave_2_per_point17=y = y*0.9 + 0.05 + bass*0.08;
wave_2_per_point18=y = y*0.8;
wave_2_per_point19=
wave_2_per_point20=r = 0.5 + 0.5*sin(time*1.789) + 0.1;
wave_2_per_point21=g = 0.4 + 0.4*sin(time*1.478);
wave_2_per_point22=b = 0.4 + 0.4*sin(time*1.125);
wave_2_per_point23=
wave_2_per_point24=xs = if(above(xs,1000),0 ,xs);
wave_2_per_point25=ys = if(above(ys,1000),0 ,ys);
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=//q1 = state;
wave_3_per_point2=//q2 = basstime;
wave_3_per_point3=
wave_3_per_point4=q1 = 0;
wave_3_per_point5=speed = bass_att*0.8;
wave_3_per_point6=v = sample*10000 + value2*bass*0.1;
wave_3_per_point7=
wave_3_per_point8=//state 0 elipse
wave_3_per_point9=xs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);
wave_3_per_point10=ys = ys + (equal(0,q1))*sin(v*1)*speed;
wave_3_per_point11=
wave_3_per_point12=
wave_3_per_point13=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);
wave_3_per_point14=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);
wave_3_per_point15=
wave_3_per_point16=x = -x*0.6 + 1;
wave_3_per_point17=y = y*0.9 + 0.05 + bass*0.08;
wave_3_per_point18=y = y*0.8;
wave_3_per_point19=
wave_3_per_point20=r = 0.5 + 0.5*sin(time*1.789) + 0.1;
wave_3_per_point21=g = 0.4 + 0.4*sin(time*1.478);
wave_3_per_point22=b = 0.4 + 0.4*sin(time*1.125);
wave_3_per_point23=
wave_3_per_point24=xs = if(above(xs,1000),0 ,xs);
wave_3_per_point25=ys = if(above(ys,1000),0 ,ys);
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.36960
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.22746
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.500
shape_0_init1=tex_saw = 0.4;
shape_0_per_frame1=ang = -q1*0.2;
shape_0_per_frame2=
shape_0_per_frame3=tex_capture = above(q3,1);
shape_0_per_frame4=tex_zoom = 1.2;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.250
shapecode_1_y=0.750
shapecode_1_rad=0.74180
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.22746
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_init1=tex_saw = 0.4;
shape_1_per_frame1=ang = q1*0.2;
shape_1_per_frame2=//x = 0.5 + 0.2*sin(q2);
shape_1_per_frame3=//y = 0.5 + (0.3*sin(q2));
shape_1_per_frame4=
shape_1_per_frame5=tex_capture = above(q3,2);
shape_1_per_frame6=tex_zoom = 0.6;
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=1.81639
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.22746
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.000
shapecode_2_border_g=0.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_init1=tex_saw = 0.4;
shape_2_per_frame1=ang = q1*0.2;
shape_2_per_frame2=tex_capture = 1;//above(q3,1);
shape_2_per_frame3=tex_zoom = 0.6;
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=1.08922
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
shape_3_per_frame1=x = 0.5 + 0.5*sin(q1*1.5);
shape_3_per_frame2=y = 0.5 + 0.5*sin(q1*1.7);
per_frame_1=basstime = basstime + bass*0.03;
per_frame_2=q1 = basstime*4;
per_frame_3=
per_frame_4=//start in most active range
per_frame_5=basstime = if(below(basstime,1000),1000,basstime);
per_frame_6=//basstime = if(above(basstime,495),450,basstime);
per_frame_7=
per_frame_8=basstime = basstime + bass_att*0.03;
per_frame_9=vol = pow(bass+mid+treb,2);
per_frame_10=basssum = vol;
per_frame_11=
per_frame_12=stickybit = time%2;
per_frame_13=
per_frame_14=//avg vol
per_frame_15=//buffer 1
per_frame_16=volAvg = volAvg + vol*equal(stickybit,1);
per_frame_17=//number of samples 1 or framerate
per_frame_18=sample1 = sample1 + equal(stickybit,1);
per_frame_19=//buffer 2
per_frame_20=volAvg2 = volAvg2 + vol*equal(stickybit,0);
per_frame_21=//number of samples 2
per_frame_22=sample2 = sample2 + equal(stickybit,0);
per_frame_23=
per_frame_24=//transision
per_frame_25=edge = bnot(equal(bit2,stickybit));
per_frame_26=
per_frame_27=volAvg = volAvg - volAvg*edge*stickybit;
per_frame_28=volAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);
per_frame_29=
per_frame_30=sample1 = sample1  - sample1*edge*stickybit;
per_frame_31=sample2 = sample2  - sample2*edge*equal(stickybit,0);
per_frame_32=
per_frame_33=//test vol against avg buffer lvl
per_frame_34=diff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);
per_frame_35=diff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);
per_frame_36=
per_frame_37=q3 = diff;
per_frame_38=
per_frame_39=bit2 = time%2;
per_frame_40=
per_frame_41=difftime = difftime + diff*0.03;
per_frame_42=q2 = difftime;
per_frame_43=
per_frame_44=//fix a strange error
per_frame_45=difftime = if(above(difftime,2000),0, difftime);
per_frame_46=
per_frame_47=monitor = abs(cos(time))*3.14;
per_frame_48=
per_frame_49=
per_frame_50=mv_a = above(diff,10);
per_pixel_1=zoom = 1 + 0.05*q3*rad;
per_pixel_2=
per_pixel_3=decay_r = 0.2*rad*sin(q2*0.35) + 0.85 + 0.1*sin(q2);
per_pixel_4=decay_g = 0.2*rad*sin(q2*0.5) + 0.85 + 0.1*sin(0.7*q2);
per_pixel_5=decay_b = 0.2*rad*sin(q2*0.4) + 0.85 + 0.1*sin(0.8*q2);
per_pixel_6=
per_pixel_7=rot = 0;
warp_1=`shader_body {
warp_2=`float corr = texsize.xy*texsize_noise_lq.zw;
warp_3=`//float2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;
warp_4=`
warp_5=`
warp_6=`float2 hor = float2 (.003,0);
warp_7=`float2 ver = float2 (0,.003);
warp_8=`float dx = lum(tex2D(sampler_main,uv+hor) - tex2D(sampler_main,uv-hor));
warp_9=`float dy = lum(tex2D(sampler_main,uv+ver) - tex2D(sampler_main,uv-ver));
warp_10=`
warp_11=`float2 dz = float2 (dx,dy);
warp_12=`
warp_13=`
warp_14=`float3 noise2 = lum(tex2D(sampler_noise_hq, 
warp_15=`                    uv+ .0*time+.01*rand_frame));
warp_16=`noise2 = 2*(noise2-.5);
warp_17=`
warp_18=`float3 noise3 = lum(tex2D(sampler_noise_lq, 
warp_19=`                    corr*uv*.5 + 0.1*rand_frame));
warp_20=`
warp_21=`
warp_22=`float3 blur = GetBlur1(frac(uv));
warp_23=`float3 blur2 = GetBlur1(frac(uv*noise3));
warp_24=`
warp_25=`float2 zz = (blur*noise3)* (dz);
warp_26=`
warp_27=`double3 crisp = tex2D(sampler_main,uv+zz*.03);
warp_28=`crisp += noise2*(.01) +.02 ;
warp_29=`
warp_30=`
warp_31=`float3 ret1 = -0.03*blur2+ crisp - length(zz)*.0;
warp_32=`
warp_33=`//ret1 -= .1*pow(rad,4);
warp_34=`ret1 -= .07*pow(uv.x-.6,2) + .1*pow(uv.y-.6,2);
warp_35=`
warp_36=`ret = ret1 * .99 -  .01;
warp_37=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 uv2;
comp_4=`
comp_5=`    float4 c = float4(1,0.4,0.15,0.1);
comp_6=`
comp_7=`    uv2 = uv + float2(1,0)*texsize.zw;
comp_8=`    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_9=`    uv2 = uv + float2(-1,0)*texsize.zw;
comp_10=`    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_11=`
comp_12=`    uv2 = uv + float2(0,1)*texsize.zw;
comp_13=`    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_14=`    uv2 = uv + float2(0,-1)*texsize.zw;
comp_15=`    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_16=`
comp_17=`    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));
comp_18=`
comp_19=`    ret = 0.5 + 0.5*g;
comp_20=`    ret *= saturate(length(ret.xy-0.5)*5);
comp_21=`    ret = ret.xxy;
comp_22=`    ret += 1;
comp_23=`    float3 what = lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader,ret));
comp_24=`    ret *=what;
comp_25=`    ret *= hue_shader;
comp_26=`
comp_27=`    //ret *= 1.5; //old gamma effect    
comp_28=`}
