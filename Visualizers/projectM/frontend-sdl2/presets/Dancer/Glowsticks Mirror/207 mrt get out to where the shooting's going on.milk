MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.560
fDecay=0.970
fVideoEchoZoom=0.997
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.25990
cx=0.320
cy=0.290
dx=0.00000
dy=0.00000
warp=0.01105
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=3.000
nMotionVectorsY=2.000
mv_dx=0.020
mv_dy=-0.020
mv_l=0.150
mv_r=0.490
mv_g=0.480
mv_b=0.300
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.100
wavecode_0_g=1.000
wavecode_0_b=0.700
wavecode_0_a=1.000
wave_0_per_point1=n=sample*6.283;
wave_0_per_point2=tm=q1;
wave_0_per_point3=phs=-sample*0.5;
wave_0_per_point4=
wave_0_per_point5=flip=flip+1;
wave_0_per_point6=flip=flip*below(flip,2);
wave_0_per_point7=
wave_0_per_point8=xp=0;
wave_0_per_point9=yp=flip*0.1;
wave_0_per_point10=zp=0;
wave_0_per_point11=
wave_0_per_point12=//wrist movement;
wave_0_per_point13=ang=sin(tm*2+phs)*0.5 +0.5;
wave_0_per_point14=
wave_0_per_point15=xq=xp;
wave_0_per_point16=yq=yp*sin(ang) + zp*cos(ang);
wave_0_per_point17=zq=yp*cos(ang) - zp*sin(ang);
wave_0_per_point18=
wave_0_per_point19=ang=cos(tm*2+phs)*1.5;
wave_0_per_point20=xp=xq*sin(ang) + yq*cos(ang);
wave_0_per_point21=yp=xq*cos(ang) - yq*sin(ang);
wave_0_per_point22=zp=zq;
wave_0_per_point23=
wave_0_per_point24=//forearm movement;
wave_0_per_point25=zp=zp-0.3;
wave_0_per_point26=ang=3.14 + sin(tm*2+phs - 0.5)*1.5;
wave_0_per_point27=xq=xp;
wave_0_per_point28=yq=yp*sin(ang) + zp*cos(ang);
wave_0_per_point29=zq=yp*cos(ang) - zp*sin(ang);
wave_0_per_point30=
wave_0_per_point31=//upper arm twist
wave_0_per_point32=ang=-1.0 + cos(tm*3 + 0.5 +phs);
wave_0_per_point33=xp=xq*sin(ang) + yq*cos(ang);
wave_0_per_point34=yp=xq*cos(ang) - yq*sin(ang);
wave_0_per_point35=zp=zq;
wave_0_per_point36=
wave_0_per_point37=//upper arm outward;
wave_0_per_point38=zp=zp-0.35;
wave_0_per_point39=ang=cos(tm*2+phs)*0.75 - 1.05;
wave_0_per_point40=xq=xp*sin(ang) + zp*cos(ang);
wave_0_per_point41=yq=yp;
wave_0_per_point42=zq=xp*cos(ang) - zp*sin(ang);
wave_0_per_point43=
wave_0_per_point44=//upper arm up down;
wave_0_per_point45=ang=cos(tm+phs)*0.5 - 0.5;
wave_0_per_point46=xp=xq;
wave_0_per_point47=yp=yq*cos(ang) - zq*sin(ang);
wave_0_per_point48=zp=yq*sin(ang) + zq*cos(ang);
wave_0_per_point49=
wave_0_per_point50=//xp=xq;yp=yq;zp=zq;
wave_0_per_point51=
wave_0_per_point52=
wave_0_per_point53=//project into screenspace and draw on screen
wave_0_per_point54=zp=zp+2;
wave_0_per_point55=xs=xp/zp;
wave_0_per_point56=ys=yp/zp;
wave_0_per_point57=
wave_0_per_point58=x=xs+0.5;
wave_0_per_point59=y=ys*1.3+0.5;
wave_0_per_point60=
wave_0_per_point61=
wave_0_per_point62=a=(1-sample)*0.03;
wave_0_per_point63=
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.200
wavecode_1_g=1.000
wavecode_1_b=0.600
wavecode_1_a=1.000
wave_1_per_point1=n=sample*6.283;
wave_1_per_point2=tm=q1 ;
wave_1_per_point3=phs=-sample*0.5;
wave_1_per_point4=
wave_1_per_point5=flip=flip+1;
wave_1_per_point6=flip=flip*below(flip,2);
wave_1_per_point7=
wave_1_per_point8=xp=0;
wave_1_per_point9=yp=flip*0.1;
wave_1_per_point10=zp=0;
wave_1_per_point11=
wave_1_per_point12=//wrist movement;
wave_1_per_point13=ang=sin(tm*2+phs)*0.5 +0.5;
wave_1_per_point14=
wave_1_per_point15=xq=xp;
wave_1_per_point16=yq=yp*sin(ang) + zp*cos(ang);
wave_1_per_point17=zq=yp*cos(ang) - zp*sin(ang);
wave_1_per_point18=
wave_1_per_point19=ang=cos(tm*2+phs)*1.5;
wave_1_per_point20=xp=xq*sin(ang) + yq*cos(ang);
wave_1_per_point21=yp=xq*cos(ang) - yq*sin(ang);
wave_1_per_point22=zp=zq;
wave_1_per_point23=
wave_1_per_point24=//forearm movement;
wave_1_per_point25=zp=zp-0.3;
wave_1_per_point26=ang=3.14 + sin(tm*2+phs+0.5)*1.5;
wave_1_per_point27=xq=xp;
wave_1_per_point28=yq=yp*sin(ang) + zp*cos(ang);
wave_1_per_point29=zq=yp*cos(ang) - zp*sin(ang);
wave_1_per_point30=
wave_1_per_point31=//upper arm twist
wave_1_per_point32=ang=-1.0 + cos(tm*3 + 0.5 +phs);
wave_1_per_point33=xp=xq*sin(ang) + yq*cos(ang);
wave_1_per_point34=yp=xq*cos(ang) - yq*sin(ang);
wave_1_per_point35=zp=zq;
wave_1_per_point36=
wave_1_per_point37=//upper arm outward;
wave_1_per_point38=zp=zp-0.35;
wave_1_per_point39=ang=cos(tm*2+phs)*0.75 - 1.05;
wave_1_per_point40=xq=xp*sin(ang) + zp*cos(ang);
wave_1_per_point41=yq=yp;
wave_1_per_point42=zq=xp*cos(ang) - zp*sin(ang);
wave_1_per_point43=
wave_1_per_point44=//upper arm up down;
wave_1_per_point45=ang=cos(tm+phs)*0.5 - 0.5;
wave_1_per_point46=xp=xq;
wave_1_per_point47=yp=yq*cos(ang) - zq*sin(ang);
wave_1_per_point48=zp=yq*sin(ang) + zq*cos(ang);
wave_1_per_point49=
wave_1_per_point50=//xp=xq;yp=yq;zp=zq;
wave_1_per_point51=
wave_1_per_point52=
wave_1_per_point53=//project into screenspace and draw on screen
wave_1_per_point54=zp=zp+2;
wave_1_per_point55=xs=xp/zp;
wave_1_per_point56=ys=yp/zp;
wave_1_per_point57=
wave_1_per_point58=x=-xs+0.5;
wave_1_per_point59=y=ys*1.3+0.5;
wave_1_per_point60=
wave_1_per_point61=
wave_1_per_point62=a=(1-sample)*0.03;
wave_1_per_point63=
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=0.600
wavecode_2_b=0.100
wavecode_2_a=1.000
wave_2_per_point1=n=sample*6.283;
wave_2_per_point2=tm=q1;
wave_2_per_point3=phs=-sample*0.5;
wave_2_per_point4=
wave_2_per_point5=flip=flip+1;
wave_2_per_point6=flip=flip*below(flip,2);
wave_2_per_point7=
wave_2_per_point8=xp=0;
wave_2_per_point9=yp=flip*0.1;
wave_2_per_point10=zp=0;
wave_2_per_point11=
wave_2_per_point12=//wrist movement;
wave_2_per_point13=ang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;
wave_2_per_point14=
wave_2_per_point15=xq=xp;
wave_2_per_point16=yq=yp*sin(ang) + zp*cos(ang);
wave_2_per_point17=zq=yp*cos(ang) - zp*sin(ang);
wave_2_per_point18=
wave_2_per_point19=ang=cos(tm*2+phs - 2)*1.5 ;
wave_2_per_point20=xp=xq*sin(ang) + yq*cos(ang);
wave_2_per_point21=yp=xq*cos(ang) - yq*sin(ang);
wave_2_per_point22=zp=zq;
wave_2_per_point23=
wave_2_per_point24=//forearm movement;
wave_2_per_point25=zp=zp-0.3;
wave_2_per_point26=ang=3.14 + sin(tm*2+phs - 0.5)*1.5;
wave_2_per_point27=xq=xp;
wave_2_per_point28=yq=yp*sin(ang) + zp*cos(ang);
wave_2_per_point29=zq=yp*cos(ang) - zp*sin(ang);
wave_2_per_point30=
wave_2_per_point31=//upper arm twist
wave_2_per_point32=ang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);
wave_2_per_point33=xp=xq*sin(ang) + yq*cos(ang);
wave_2_per_point34=yp=xq*cos(ang) - yq*sin(ang);
wave_2_per_point35=zp=zq;
wave_2_per_point36=
wave_2_per_point37=//upper arm outward;
wave_2_per_point38=zp=zp-0.35;
wave_2_per_point39=ang=cos(tm*2+phs)*0.75 - 1.05;
wave_2_per_point40=xq=xp*sin(ang) + zp*cos(ang);
wave_2_per_point41=yq=yp;
wave_2_per_point42=zq=xp*cos(ang) - zp*sin(ang);
wave_2_per_point43=
wave_2_per_point44=//upper arm up down;
wave_2_per_point45=ang=cos(tm+phs)*0.5 - 0.5;
wave_2_per_point46=xp=xq;
wave_2_per_point47=yp=yq*cos(ang) - zq*sin(ang);
wave_2_per_point48=zp=yq*sin(ang) + zq*cos(ang);
wave_2_per_point49=
wave_2_per_point50=//xp=xq;yp=yq;zp=zq;
wave_2_per_point51=
wave_2_per_point52=
wave_2_per_point53=//project into screenspace and draw on screen
wave_2_per_point54=zp=zp+2;
wave_2_per_point55=xs=xp/zp;
wave_2_per_point56=ys=yp/zp;
wave_2_per_point57=
wave_2_per_point58=x=xs+0.5;
wave_2_per_point59=y=ys*1.3+0.5;
wave_2_per_point60=
wave_2_per_point61=
wave_2_per_point62=a=(1-sample)*0.05
wave_2_per_point63=
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=0.300
wavecode_3_b=0.100
wavecode_3_a=1.000
wave_3_per_point1=n=sample*6.283;
wave_3_per_point2=tm=q1 ;
wave_3_per_point3=phs=-sample*0.5;
wave_3_per_point4=
wave_3_per_point5=flip=flip+1;
wave_3_per_point6=flip=flip*below(flip,2);
wave_3_per_point7=
wave_3_per_point8=xp=0;
wave_3_per_point9=yp=flip*0.1;
wave_3_per_point10=zp=0;
wave_3_per_point11=
wave_3_per_point12=//wrist movement;
wave_3_per_point13=ang=sin(tm*2+phs-2)*0.5 +0.5 + 2;
wave_3_per_point14=
wave_3_per_point15=xq=xp;
wave_3_per_point16=yq=yp*sin(ang) + zp*cos(ang);
wave_3_per_point17=zq=yp*cos(ang) - zp*sin(ang);
wave_3_per_point18=
wave_3_per_point19=ang=cos(tm*2+phs-2)*1.5;
wave_3_per_point20=xp=xq*sin(ang) + yq*cos(ang);
wave_3_per_point21=yp=xq*cos(ang) - yq*sin(ang);
wave_3_per_point22=zp=zq;
wave_3_per_point23=
wave_3_per_point24=//forearm movement;
wave_3_per_point25=zp=zp-0.3;
wave_3_per_point26=ang=3.14 + sin(tm*2+phs-0.5)*1.5;
wave_3_per_point27=xq=xp;
wave_3_per_point28=yq=yp*sin(ang) + zp*cos(ang);
wave_3_per_point29=zq=yp*cos(ang) - zp*sin(ang);
wave_3_per_point30=
wave_3_per_point31=//upper arm twist
wave_3_per_point32=ang=-1.0 + cos(tm*3 + 0.5 +phs);
wave_3_per_point33=xp=xq*sin(ang) + yq*cos(ang);
wave_3_per_point34=yp=xq*cos(ang) - yq*sin(ang);
wave_3_per_point35=zp=zq;
wave_3_per_point36=
wave_3_per_point37=//upper arm outward;
wave_3_per_point38=zp=zp-0.35;
wave_3_per_point39=ang=cos(tm*2+phs)*0.75 - 1.05;
wave_3_per_point40=xq=xp*sin(ang) + zp*cos(ang);
wave_3_per_point41=yq=yp;
wave_3_per_point42=zq=xp*cos(ang) - zp*sin(ang);
wave_3_per_point43=
wave_3_per_point44=//upper arm up down;
wave_3_per_point45=ang=cos(tm+phs)*0.5 - 0.5;
wave_3_per_point46=xp=xq;
wave_3_per_point47=yp=yq*cos(ang) - zq*sin(ang);
wave_3_per_point48=zp=yq*sin(ang) + zq*cos(ang);
wave_3_per_point49=
wave_3_per_point50=//xp=xq;yp=yq;zp=zq;
wave_3_per_point51=
wave_3_per_point52=
wave_3_per_point53=//project into screenspace and draw on screen
wave_3_per_point54=zp=zp+2;
wave_3_per_point55=xs=xp/zp;
wave_3_per_point56=ys=yp/zp;
wave_3_per_point57=
wave_3_per_point58=x=-xs+0.5;
wave_3_per_point59=y=ys*1.3+0.5;
wave_3_per_point60=
wave_3_per_point61=
wave_3_per_point62=a=(1-sample)*0.05;
wave_3_per_point63=
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=warp = 0;
per_frame_26=//zoom = 1;
per_frame_27=
per_frame_28=tic = min(time-tin,.1);
per_frame_29=tin = time;
per_frame_30=
per_frame_31=vol = (bass_att + treb_att + mid_att)*.333333;
per_frame_32=
per_frame_33=ra = 1/tic*.25;
per_frame_34=
per_frame_35=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_36=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_37=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_38=vav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);
per_frame_39=
per_frame_40=tt = tt + tic*treb;
per_frame_41=mt = mt + tic*mid;
per_frame_42=bt = bt + tic*bass;
per_frame_43=vt = vt + tic*vav;
per_frame_44=
per_frame_45=q1 = tt*3;// wave morph speeds
per_frame_46=q2 = mt*3;
per_frame_47=q3 = bt*3;
per_frame_48=
per_frame_49=q4 = vt; // wave colour cycle
per_frame_50=
per_frame_51=rb = if(rb,rb,.2 + rand(1001)*.001*.6);
per_frame_52=rc = if(rc,rc,.2 + rand(1001)*.001*.6);
per_frame_53=rd = if(rd,rd,.2 + rand(1001)*.001*.6);
per_frame_54=re = if(re,re,.2 + rand(1001)*.001*.6);
per_frame_55=
per_frame_56=rot = .26;
per_frame_57=cx = .3 + .1*sin(vt*re) + .1*cos(vt*rc);
per_frame_58=cy = .5 + .2*sin(vt*rb) + .1*cos(vt*rd);
per_frame_59=
per_frame_60=
per_frame_61=q5 = min(1,.5*treb_avg)*.035;
per_frame_62=q6 = min(1,.5*mid_avg)*.035;
per_frame_63=q7 = min(1,.5*bass_avg)*.035;
per_frame_64=
per_frame_65=
per_pixel_1=num = 8;
per_pixel_2=pi = 3.141592654;
per_pixel_3=radi = (y-.5)*.75;
per_pixel_4=radi = (y-.5);
per_pixel_5=radi = pow(radi*radi + (x-.5)*(x-.5),.5);
per_pixel_6=
per_pixel_7=an = ang + pi + time;
per_pixel_8=an = an - pi*2*int(an/(pi*2));
per_pixel_9=
per_pixel_10=mod = .1;
per_pixel_11=
per_pixel_12=seg = ang + pi;
per_pixel_13=seg = seg/(pi*2)*num;
per_pixel_14=seg = int(seg);
per_pixel_15=seg = seg - equal(seg,num);
per_pixel_16=
per_pixel_17=anga = (ang + pi) - (pi*2/num)*seg;
per_pixel_18=anga = if(equal(seg%2,0),(pi*2/num) - anga,anga);
per_pixel_19=//anga = anga + pi/6; // num = 6
per_pixel_20=anga = anga + pi/4; // num = 8
per_pixel_21=//anga = anga + .85; // num = 10
per_pixel_22=
per_pixel_23=
per_pixel_24=ox = .5 - radi*sin(anga);
per_pixel_25=oy = .5 + radi*cos(anga);
per_pixel_26=
per_pixel_27=//rot = if(equal(seg,0),rot,0);
per_pixel_28=
per_pixel_29=dx = equal(seg,3)*(x-ox);
per_pixel_30=dy = equal(seg,3)*(y-oy);
per_pixel_31=
per_pixel_32=dx = above(seg,0)*(x-ox);
per_pixel_33=dy = above(seg,0)*(y-oy);
per_pixel_34=
per_pixel_35=//dx = equal(seg,1)*(x - .5)*2;
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`
warp_6=`float2 uv1 = float2(uv.x,uv.y+texsize.w*3);
warp_7=`ret = GetPixel(uv1);
warp_8=`ret*=.5;
warp_9=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_10=`                      ((uv1.xyy*q27
warp_11=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_12=`                      ).xyz*
warp_13=`                      float3(1,1,0)*0.05 + 
warp_14=`                      time*float3(0,0,1)*q29
warp_15=`                     );
warp_16=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_17=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_18=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_19=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`float2 rs, rs0, uv1, uv2, uv3,uv4,uv5,dz,sunpos1;
comp_3=`float3 ret1,col,gnd, back,back2;
comp_4=`
comp_5=`
comp_6=`shader_body {
comp_7=`
comp_8=`
comp_9=`ret1 = GetPixel(uv_orig);
comp_10=`
comp_11=`uv2 = float2 (uv.x,uv.y-.3);
comp_12=`float shadow = lum(GetBlur2(frac(uv2)))*3;
comp_13=`
comp_14=`float k1 = saturate(lum(back));
comp_15=`ret = lerp(GetPixel(uv),2*GetBlur1(uv),.4)*1.5;
comp_16=`
comp_17=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_18=`                      ((uv2.xyy*q28
comp_19=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_20=`                      ).xyz*
comp_21=`                      float3(1,1,0)*0.05 + 
comp_22=`                      time*float3(0,0,1)*q31
comp_23=`                     );
comp_24=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_25=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_26=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_27=`ret += saturate(1) * saturate(1-lum(ret))*(1-shadow) * .2*(uv.y);
comp_28=`
comp_29=`}
