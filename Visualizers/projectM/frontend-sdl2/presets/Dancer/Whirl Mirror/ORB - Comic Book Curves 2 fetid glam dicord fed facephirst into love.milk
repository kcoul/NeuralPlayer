MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=2.000
fDecay=0.998
fVideoEchoZoom=0.294
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=1
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.01500
warp=0.01100
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=0.800
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=//q1 = state;
wave_0_per_point2=//q2 = basstime;
wave_0_per_point3=
wave_0_per_point4=q1 = 0;
wave_0_per_point5=speed = 0.5 + bass_att*0.5;
wave_0_per_point6=v = sample*10000 + value2*bass*0.1;
wave_0_per_point7=
wave_0_per_point8=//state 0 elipse
wave_0_per_point9=xs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);
wave_0_per_point10=ys = ys + (equal(0,q1))*sin(v*1)*speed;
wave_0_per_point11=
wave_0_per_point12=
wave_0_per_point13=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);
wave_0_per_point14=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);
wave_0_per_point15=
wave_0_per_point16=x = x*0.6;
wave_0_per_point17=y = y + bass*0.1;
wave_0_per_point18=
wave_0_per_point19=
wave_0_per_point20=r = 0.5 + 0.4*sin(time*1.22);
wave_0_per_point21=g = 0.5 + 0.4*sin(time*1.307);
wave_0_per_point22=b = 0.5 + 0.4*sin(time*1.959);
wave_0_per_point23=
wave_0_per_point24=xs = if(above(xs,1000),0 ,xs);
wave_0_per_point25=ys = if(above(ys,1000),0 ,ys);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=//q1 = state;
wave_1_per_point2=//q2 = basstime;
wave_1_per_point3=
wave_1_per_point4=q1 =0;
wave_1_per_point5=speed = 0.5 + bass_att*0.5;
wave_1_per_point6=v = sample*10000 + value2*bass*0.1;
wave_1_per_point7=
wave_1_per_point8=//state 0 elipse
wave_1_per_point9=xs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);
wave_1_per_point10=ys = ys + (equal(0,q1))*sin(v*1)*speed;
wave_1_per_point11=
wave_1_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);
wave_1_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);
wave_1_per_point14=
wave_1_per_point15=x = -x*0.6 + 1;
wave_1_per_point16=y = y + bass*0.01;
wave_1_per_point17=
wave_1_per_point18=
wave_1_per_point19=r = 0.5 + 0.4*sin(time*1.22);
wave_1_per_point20=g = 0.5 + 0.4*sin(time*1.307);
wave_1_per_point21=b = 0.5 + 0.4*sin(time*1.959);
wave_1_per_point22=
wave_1_per_point23=xs = if(above(xs,1000),0 ,xs);
wave_1_per_point24=ys = if(above(ys,1000),0 ,ys);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=//q1 = state;
wave_2_per_point2=//q2 = basstime;
wave_2_per_point3=
wave_2_per_point4=q1 = 0;
wave_2_per_point5=speed = 0.5 + bass_att*0.5;
wave_2_per_point6=v = sample*10000 + value2*bass*0.1;
wave_2_per_point7=
wave_2_per_point8=//state 0 elipse
wave_2_per_point9=xs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);
wave_2_per_point10=ys = ys + (equal(0,q1))*sin(v*1)*speed;
wave_2_per_point11=
wave_2_per_point12=
wave_2_per_point13=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);
wave_2_per_point14=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);
wave_2_per_point15=
wave_2_per_point16=x = x*0.6;
wave_2_per_point17=y = y*0.9 + 0.05 + bass*0.08;
wave_2_per_point18=
wave_2_per_point19=
wave_2_per_point20=r = 0.5 + 0.4*sin(time*1.789);
wave_2_per_point21=g = 0.5 + 0.4*sin(time*1.478);
wave_2_per_point22=b = 0.5 + 0.4*sin(time*1.125);
wave_2_per_point23=
wave_2_per_point24=xs = if(above(xs,1000),0 ,xs);
wave_2_per_point25=ys = if(above(ys,1000),0 ,ys);
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=//q1 = state;
wave_3_per_point2=//q2 = basstime;
wave_3_per_point3=
wave_3_per_point4=q1 =0;
wave_3_per_point5=speed = 0.5 + bass_att*0.5;
wave_3_per_point6=v = sample*10000 + value2*bass*0.1;
wave_3_per_point7=
wave_3_per_point8=//state 0 elipse
wave_3_per_point9=xs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);
wave_3_per_point10=ys = ys + (equal(0,q1))*sin(v*1)*speed;
wave_3_per_point11=
wave_3_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);
wave_3_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);
wave_3_per_point14=
wave_3_per_point15=x = -x*0.6 + 1;
wave_3_per_point16=y = y*0.9 - 0.05 + bass*0.08;
wave_3_per_point17=
wave_3_per_point18=
wave_3_per_point19=r = 0.5 + 0.4*sin(time*1.789);
wave_3_per_point20=g = 0.5 + 0.4*sin(time*1.478);
wave_3_per_point21=b = 0.5 + 0.4*sin(time*1.125);
wave_3_per_point22=
wave_3_per_point23=xs = if(above(xs,1000),0 ,xs);
wave_3_per_point24=ys = if(above(ys,1000),0 ,ys);
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=state = 0;
per_frame_1=bass_clip = above(bass_att,bass_clip)*2 + (1-above(bass_att,bass_clip))*((bass_clip-1.3)*0.96+1.3);
per_frame_2=basstime = basstime + (bass_att*0.09)*bass_att*0.25 + time*0.1;
per_frame_3=
per_frame_4=rot = 0;
per_frame_5=
per_frame_6=//another state for shape tracking
per_frame_7=state = state + equal(bass_clip,2);
per_frame_8=state = if(above(state,4), -1, state);
per_frame_9=
per_frame_10=//state_count 0 = sin 1 = cos
per_frame_11=state_count = state_count + equal(state,-1);
per_frame_12=state_count = if(above(state_count,1), 0 , state_count);
per_frame_13=
per_frame_14=//reset state
per_frame_15=state = state + equal(state,-1);
per_frame_16=
per_frame_17=speed = 0.05;
per_frame_18=
per_frame_19=//add bouns on beat
per_frame_20=xs = xs + 0.1*equal(2,bass_clip);
per_frame_21=ys = ys + 0.1*equal(2,bass_clip);
per_frame_22=
per_frame_23=//state 0 elipse
per_frame_24=xs = xs + (equal(0,state))*atan(bass_time*4)*speed;
per_frame_25=ys = ys + (equal(0,state))*cos(bass_time*4)*speed;
per_frame_26=
per_frame_27=//state 1 diag
per_frame_28=xs = xs + (equal(1,state))*cos(bass_time*4)*speed;
per_frame_29=ys = ys + (equal(1,state))*cos(bass_time*4)*speed;
per_frame_30=
per_frame_31=//state 2 -circle
per_frame_32=xs = xs + (equal(2,state))*cos(bass_time*4)*speed;
per_frame_33=ys = ys + (equal(2,state))*sin(bass_time*4)*speed;
per_frame_34=
per_frame_35=//state 3 parametric arc
per_frame_36=xs = xs + (equal(3,state))*cos(bass_time*5)*speed;
per_frame_37=ys = ys + (equal(3,state))*cos(bass_time*9)*speed;
per_frame_38=
per_frame_39=//state 4 arc
per_frame_40=xs = xs + (equal(4,state))*atan(bass_time*6)*speed;
per_frame_41=ys = ys + (equal(4,state))*cos(bass_time*2)*speed;
per_frame_42=
per_frame_43=//project and publish
per_frame_44=dx = equal(state_count,0)*0.45*sin(xs)*0.04 + equal(state_count,1)*0.45*sin(xs*1.1)*0.04;
per_frame_45=dy = equal(state_count,0)*0.45*sin(ys)*0.04 + equal(state_count,1)*0.45*cos(ys)*0.04;
per_frame_46=
per_frame_47=zoom = 1 + rad*0.1; + bass*0.01;
per_frame_48=q1 = dx;
per_frame_49=q2 = dy;
per_pixel_1=zoom = 0.97 + below(q1,0)*x*0.05  - above(q1,0)*((x-1)*0.05) +
per_pixel_2=below(q2,0)*y*0.05  - above(q2,0)*((y-1)*0.05);
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret.xyz = tex2D( sampler_main, uv ).xyz;
warp_5=`
warp_6=`      // take the difference between the crisp and blurred images,
warp_7=`      // then add it back into the image.  Creates spots and stripes over time.
warp_8=`      ret.xyz += (ret.xyz - GetBlur2(uv))*0.3;
warp_9=`      ret.xyz *= 0.9;
warp_10=`
warp_11=`      // add noise:
warp_12=`      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;
warp_13=`      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 * saturate(treb_att-1);
warp_14=`
warp_15=`      // desaturate over time, to keep the globs white
warp_16=`      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);
warp_17=`}
comp_1=`sampler sampler_rand00;
comp_2=`shader_body
comp_3=`{
comp_4=`
comp_5=`float2 ac = float2(q1,q2);
comp_6=`float2 mu = float2(q3,q4);
comp_7=`float2 c = float2(q5,q6);
comp_8=`float2 d = float2(q7,q8);
comp_9=`
comp_10=`float2 z = (uv-0.5)*aspect.wz;
comp_11=`
comp_12=`// (c*z + d)
comp_13=`float2 czd = float2(z.x*c.x-z.y*c.y,z.x*c.y-z.y*c.x)*aspect.yx + d;
comp_14=`// mu/(cz+d)
comp_15=`float2 moebius = float2( mu.x*czd.x + mu.y*czd.y , mu.y*czd.x-mu.x*czd.y )/(czd.x*czd.x+czd.y*czd.y) + ac;
comp_16=`
comp_17=`    d = texsize.zw*4;
comp_18=`    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_19=`    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_20=`
comp_21=`moebius = 0.5 + (1.0 - abs( frac( moebius * 0.5  - float2(dx.y,dy.y)*0.2 + float2(dx.x,dy.x)*0.1) * 2 - 1.0 )-0.5)*0.99;
comp_22=`
comp_23=`ret = tex2d(sampler_rand00, frac(moebius));
comp_24=`ret-=roam_sin.zyx*roam_cos.ywx;
comp_25=`ret = lerp(ret,-2,GetPixel(uv + float2(dx.y,dy.y)*0.1).x*0.1);
comp_26=`ret = lerp(ret,-1,GetPixel(uv - float2(dx.z,dy.z)*0.024).z*0.4);
comp_27=`ret = lerp(ret,1,saturate(GetPixel(uv).y-GetBlur3(uv).y*2));
comp_28=`//ret = GetPixel(uv).x;
comp_29=`}
