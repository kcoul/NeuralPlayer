MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=0.900
fVideoEchoZoom=1.104
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.26000
cx=0.320
cy=0.290
dx=0.00000
dy=0.00000
warp=0.01105
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.000
wavecode_0_g=0.000
wavecode_0_b=1.000
wavecode_0_a=0.050
wave_0_init1=t1 = .2 + .6*int(rand(1001))*.001;
wave_0_init2=t2 = .2 + .6*int(rand(1001))*.001;
wave_0_init3=t3 = .2 + .6*int(rand(1001))*.001;
wave_0_init4=t4 = .2 + .6*int(rand(1001))*.001;
wave_0_init5=t5 = .2 + .6*int(rand(1001))*.001;
wave_0_init6=t6 = .2 + .6*int(rand(1001))*.001;
wave_0_init7=t7 = .2 + .6*int(rand(1001))*.001;
wave_0_init8=t8 = .2 + .6*int(rand(1001))*.001;
wave_0_per_point1=ti = q1;
wave_0_per_point2=
wave_0_per_point3=xa = .25 + .25*sin(ti*t1);
wave_0_per_point4=xb = .25 + .25*sin(ti*t2);
wave_0_per_point5=xc = .25 + .25*sin(ti*t3);
wave_0_per_point6=xd = .25 + .25*sin(ti*t4);
wave_0_per_point7=
wave_0_per_point8=ya = .25 + .25*sin(ti*t5);
wave_0_per_point9=yb = .25 + .25*sin(ti*t6);
wave_0_per_point10=yc = .25 + .25*sin(ti*t7);
wave_0_per_point11=yd = .25 + .25*sin(ti*t8);
wave_0_per_point12=
wave_0_per_point13=
wave_0_per_point14=it = (it + 1)*above(sample,0);
wave_0_per_point15=sw = (1-sw)*above(sample,0);
wave_0_per_point16=
wave_0_per_point17=sa = 1-sample;
wave_0_per_point18=x = if(sw,xa*sample + sa*xb,xc*sample + xd*sa);
wave_0_per_point19=y = if(sw,ya*sample + sa*yb,yc*sample + yd*sa);
wave_0_per_point20=
wave_0_per_point21=y = .5 - y*(.5-x)*2;
wave_0_per_point22=
wave_0_per_point23=
wave_0_per_point24=ti = q4;
wave_0_per_point25=r = .5 + .5*sin(ti);
wave_0_per_point26=g = .5 + .5*sin(ti + 2.0944);
wave_0_per_point27=b = .5 + .5*sin(ti + 4.1888);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.000
wavecode_1_g=1.000
wavecode_1_b=0.000
wavecode_1_a=0.050
wave_1_init1=t1 = .2 + .6*int(rand(1001))*.001;
wave_1_init2=t2 = .2 + .6*int(rand(1001))*.001;
wave_1_init3=t3 = .2 + .6*int(rand(1001))*.001;
wave_1_init4=t4 = .2 + .6*int(rand(1001))*.001;
wave_1_init5=t5 = .2 + .6*int(rand(1001))*.001;
wave_1_init6=t6 = .2 + .6*int(rand(1001))*.001;
wave_1_init7=t7 = .2 + .6*int(rand(1001))*.001;
wave_1_init8=t8 = .2 + .6*int(rand(1001))*.001;
wave_1_per_point1=ti = q2;
wave_1_per_point2=
wave_1_per_point3=xa = .25 + .25*sin(ti*t1);
wave_1_per_point4=xb = .25 + .25*sin(ti*t2);
wave_1_per_point5=xc = .25 + .25*sin(ti*t3);
wave_1_per_point6=xd = .25 + .25*sin(ti*t4);
wave_1_per_point7=
wave_1_per_point8=ya = .25 + .25*sin(ti*t5);
wave_1_per_point9=yb = .25 + .25*sin(ti*t6);
wave_1_per_point10=yc = .25 + .25*sin(ti*t7);
wave_1_per_point11=yd = .25 + .25*sin(ti*t8);
wave_1_per_point12=
wave_1_per_point13=
wave_1_per_point14=it = (it + 1)*above(sample,0);
wave_1_per_point15=sw = (1-sw)*above(sample,0);
wave_1_per_point16=
wave_1_per_point17=sa = 1-sample;
wave_1_per_point18=x = if(sw,xa*sample + sa*xb,xc*sample + xd*sa);
wave_1_per_point19=y = if(sw,ya*sample + sa*yb,yc*sample + yd*sa);
wave_1_per_point20=
wave_1_per_point21=y = .5 - y*(.5-x)*2;
wave_1_per_point22=
wave_1_per_point23=ti = q4 + 2.0944;
wave_1_per_point24=r = .5 + .5*sin(ti);
wave_1_per_point25=g = .5 + .5*sin(ti + 2.0944);
wave_1_per_point26=b = .5 + .5*sin(ti + 4.1888);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=0.000
wavecode_2_b=0.000
wavecode_2_a=0.050
wave_2_init1=t1 = .2 + .6*int(rand(1001))*.001;
wave_2_init2=t2 = .2 + .6*int(rand(1001))*.001;
wave_2_init3=t3 = .2 + .6*int(rand(1001))*.001;
wave_2_init4=t4 = .2 + .6*int(rand(1001))*.001;
wave_2_init5=t5 = .2 + .6*int(rand(1001))*.001;
wave_2_init6=t6 = .2 + .6*int(rand(1001))*.001;
wave_2_init7=t7 = .2 + .6*int(rand(1001))*.001;
wave_2_init8=t8 = .2 + .6*int(rand(1001))*.001;
wave_2_per_point1=ti = q3;
wave_2_per_point2=
wave_2_per_point3=xa = .25 + .25*sin(ti*t1);
wave_2_per_point4=xb = .25 + .25*sin(ti*t2);
wave_2_per_point5=xc = .25 + .25*sin(ti*t3);
wave_2_per_point6=xd = .25 + .25*sin(ti*t4);
wave_2_per_point7=
wave_2_per_point8=ya = .25 + .25*sin(ti*t5);
wave_2_per_point9=yb = .25 + .25*sin(ti*t6);
wave_2_per_point10=yc = .25 + .25*sin(ti*t7);
wave_2_per_point11=yd = .25 + .25*sin(ti*t8);
wave_2_per_point12=
wave_2_per_point13=
wave_2_per_point14=it = (it + 1)*above(sample,0);
wave_2_per_point15=sw = (1-sw)*above(sample,0);
wave_2_per_point16=
wave_2_per_point17=sa = 1-sample;
wave_2_per_point18=x = if(sw,xa*sample + sa*xb,xc*sample + xd*sa);
wave_2_per_point19=y = if(sw,ya*sample + sa*yb,yc*sample + yd*sa);
wave_2_per_point20=
wave_2_per_point21=y = .5 - y*(.5-x)*2;
wave_2_per_point22=
wave_2_per_point23=ti = q4 + 4.1888;
wave_2_per_point24=r = .5 + .5*sin(ti);
wave_2_per_point25=g = .5 + .5*sin(ti + 2.0944);
wave_2_per_point26=b = .5 + .5*sin(ti + 4.1888);
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=54
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.000
shapecode_0_y=0.500
shapecode_0_rad=0.24486
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.81669
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=//tex_zoom = 1/rad*.9;
shapecode_1_enabled=1
shapecode_1_sides=54
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.250
shapecode_1_y=0.400
shapecode_1_rad=0.33000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.81669
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=//tex_zoom = 1/rad*.9;
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=warp = 0;
per_frame_2=//zoom = 1;
per_frame_3=
per_frame_4=tic = min(time-tin,.1);
per_frame_5=tin = time;
per_frame_6=
per_frame_7=vol = (bass_att + treb_att + mid_att)*.333333;
per_frame_8=
per_frame_9=ra = 1/tic*.25;
per_frame_10=
per_frame_11=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_12=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_13=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_14=vav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);
per_frame_15=
per_frame_16=tt = tt + tic*treb;
per_frame_17=mt = mt + tic*mid;
per_frame_18=bt = bt + tic*bass;
per_frame_19=vt = vt + tic*vav;
per_frame_20=
per_frame_21=q1 = tt*3;// wave morph speeds
per_frame_22=q2 = mt*3;
per_frame_23=q3 = bt*3;
per_frame_24=
per_frame_25=q4 = vt; // wave colour cycle
per_frame_26=
per_frame_27=rb = if(rb,rb,.2 + int(rand(1001))*.001*.6);
per_frame_28=rc = if(rc,rc,.2 + int(rand(1001))*.001*.6);
per_frame_29=rd = if(rd,rd,.2 + int(rand(1001))*.001*.6);
per_frame_30=re = if(re,re,.2 + int(rand(1001))*.001*.6);
per_frame_31=
per_frame_32=//rot = .26;
per_frame_33=
per_frame_34=ti = vt*2;
per_frame_35=cx = .3 + .1*sin(ti*re) + .1*cos(ti*rc);
per_frame_36=cy = .5 + .2*sin(ti*rb) + .1*cos(ti*rd);
per_frame_37=
per_pixel_1=num = 8;
per_pixel_2=pi = 3.141592654;
per_pixel_3=radi = (y-.5)*.75;
per_pixel_4=radi = (y-.5);
per_pixel_5=radi = pow(radi*radi + (x-.5)*(x-.5),.5);
per_pixel_6=
per_pixel_7=an = ang + pi + time;
per_pixel_8=an = an - pi*2*int(an/(pi*2));
per_pixel_9=
per_pixel_10=mod = .1;
per_pixel_11=
per_pixel_12=seg = ang + pi;
per_pixel_13=seg = seg/(pi*2)*num;
per_pixel_14=seg = int(seg);
per_pixel_15=seg = seg - equal(seg,num);
per_pixel_16=
per_pixel_17=anga = (ang + pi) - (pi*2/num)*seg;
per_pixel_18=anga = if(equal(seg%2,0),(pi*2/num) - anga,anga);
per_pixel_19=//anga = anga + pi/6; // num = 6
per_pixel_20=anga = anga + pi/4; // num = 8
per_pixel_21=//anga = anga + .85; // num = 10
per_pixel_22=
per_pixel_23=
per_pixel_24=ox = .5 - radi*sin(anga);
per_pixel_25=oy = .5 + radi*cos(anga);
per_pixel_26=
per_pixel_27=rot = if(equal(seg,0),rot,0);
per_pixel_28=
per_pixel_29=dx = equal(seg,3)*(x-ox);
per_pixel_30=dy = equal(seg,3)*(y-oy);
per_pixel_31=
per_pixel_32=dx = above(seg,0)*(x-ox);
per_pixel_33=dy = above(seg,0)*(y-oy);
per_pixel_34=
per_pixel_35=//dx = equal(seg,1)*(x - .5)*2;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_main, uv ).xyz;
warp_5=`float4 noise2 = tex3D(sampler_noisevol_hq, 
warp_6=`                      ((uv.xyy
warp_7=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_8=`                      ).xyz*
warp_9=`                      float3(1,1,0)*0.05 + 
warp_10=`                      time*float3(0,0,1)*0.4 
warp_11=`                     );
warp_12=`if(ret.x+ret.y+ret.z>.5)ret += (noise2)*.5; 
warp_13=`    
warp_14=`    // darken (decay) over time
warp_15=`    ret = ret- (ret*.5);
warp_16=`    ret = ret*(abs(GetBlur2(uv)-.5))*5;
warp_17=`    ret = ret - .01;
warp_18=`}
comp_1=`sampler sampler_fc_sunrise;
comp_2=`float2 factorA, factorB, product;
comp_3=`float2 numerator, denominator, fraction;
comp_4=`shader_body
comp_5=`{
comp_6=`float2 uvo = uv;
comp_7=`uv = (uv-0.5);
comp_8=`factorA = uv+ float2(q1,q2);
comp_9=`factorB = float2(8,0);
comp_10=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_11=`float2 uv1 = product;
comp_12=`factorA = uv+ float2(q3,q4);
comp_13=`factorB = float2(8,0);
comp_14=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_15=`float2 uv2 = product;
comp_16=`factorA = uv+ float2(q5,q6);
comp_17=`factorB = float2(8,0);
comp_18=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_19=`float2 uv3 = product;
comp_20=`factorA = uv+ float2(q7,q8);
comp_21=`factorB = float2(8,0);
comp_22=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_23=`float2 uv4 = product;
comp_24=`factorA = uv1;
comp_25=`factorB = uv2;
comp_26=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_27=`float2 uv12 = product;
comp_28=`factorA = uv3;
comp_29=`factorB = uv4;
comp_30=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_31=`float2 uv34 = product;
comp_32=`factorA = uv12;
comp_33=`factorB = uv34;
comp_34=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_35=`numerator = float2(1,0);
comp_36=`denominator = product;
comp_37=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_38=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_39=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_40=`uv = fraction*(16);
comp_41=`uv = lerp(0.5 + (uvo-0.5)*(2+(bass_att-treb_att)*0.02),uv+0.5,0.5);
comp_42=`
comp_43=`float l = length(uv-0.5);
comp_44=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5); // Eo.S. mirror code with cutted borders
comp_45=`
comp_46=`ret = GetPixel(uv).y*float3(1,0.6,0);
comp_47=`float4 noise2 = tex3D(sampler_noisevol_hq, 
comp_48=`                      ((uv.xyy
comp_49=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_50=`                      ).xyz*
comp_51=`                      float3(1,1,0)*0.05 + 
comp_52=`                      time*float3(0,0,1)*0.4 
comp_53=`                     );
comp_54=`if(ret.x+ret.y+ret.z>.3)ret *= (noise2)*2.5; 
comp_55=`ret = lerp(saturate(ret),0,GetBlur2(uv).z*0.5);
comp_56=`ret = lerp(saturate(ret),float3(0.3,0.4,0.5),GetBlur2(uv).x*4);
comp_57=`ret = lerp(saturate(ret),1,GetPixel(uv).z);
comp_58=`ret = lerp(saturate(ret),0,GetPixel(uv).x*0.6);
comp_59=`ret*=saturate(1.6-pow(l,6)*0.004);
comp_60=`}
