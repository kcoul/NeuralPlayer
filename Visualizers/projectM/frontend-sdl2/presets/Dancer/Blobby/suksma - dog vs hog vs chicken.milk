MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.168
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=2
bAdditiveWaves=1
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=2.850
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=0.96000
rot=-18.86024
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00052
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.200
ib_size=0.010
ib_r=0.000
ib_g=0.000
ib_b=1.000
ib_a=0.000
nMotionVectorsX=12.800
nMotionVectorsY=38.400
mv_dx=0.000
mv_dy=0.000
mv_l=0.800
mv_r=0.440
mv_g=0.650
mv_b=0.810
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=basstime=basstime+(bass*bass);
wave_0_per_frame2=t1=basstime*0.003;
wave_0_per_frame3=
wave_0_per_point1=//plot x,y,z to point on circle
wave_0_per_point2=smp=sample*6.283;
wave_0_per_point3=xp=sin(smp )*0.20;
wave_0_per_point4=yp=cos(smp )*0.20;
wave_0_per_point5=zp=0;
wave_0_per_point6=
wave_0_per_point7=
wave_0_per_point8=//alter shape;
wave_0_per_point9=angy=sin(sample*6.28*4 +t1 )*6.28;
wave_0_per_point10=xq=xp*cos(angy) - zp*sin(angy);
wave_0_per_point11=zq=xp*sin(angy) + zp*cos(angy);
wave_0_per_point12=xp=xq;
wave_0_per_point13=zp=zq;
wave_0_per_point14=
wave_0_per_point15=
wave_0_per_point16=//rotate on y axis;
wave_0_per_point17=angy=t1*0.1;
wave_0_per_point18=xq=xp*cos(angy) - zp*sin(angy);
wave_0_per_point19=zq=xp*sin(angy) + zp*cos(angy);
wave_0_per_point20=xp=xq;
wave_0_per_point21=zp=zq;
wave_0_per_point22=
wave_0_per_point23=//rotate on x axis
wave_0_per_point24=axs1 = sin(t1*0.15) + 1.6;
wave_0_per_point25=yq= yp*cos(axs1) - zp*sin(axs1);
wave_0_per_point26=zq= yp*sin(axs1) + zp*cos(axs1);
wave_0_per_point27=yp=yq;
wave_0_per_point28=zp=zq;
wave_0_per_point29=
wave_0_per_point30=//rotate on y axis again
wave_0_per_point31=axs2 = sin(t1*0.1)*3.3;
wave_0_per_point32=xq=xp*cos(axs2) - zp*sin(axs2);
wave_0_per_point33=zq=xp*sin(axs2) + zp*cos(axs2);
wave_0_per_point34=xp=xq;
wave_0_per_point35=zp=zq;
wave_0_per_point36=
wave_0_per_point37=//stretch y axis to compensate for aspect ratio
wave_0_per_point38=yp=yp*1.2;
wave_0_per_point39=
wave_0_per_point40=//push forward into viewpace
wave_0_per_point41=zp=zp+2.1;
wave_0_per_point42=
wave_0_per_point43=//project x,y,z into screenspace
wave_0_per_point44=xs=xp/zp;
wave_0_per_point45=ys=yp/zp;
wave_0_per_point46=
wave_0_per_point47=//center 0,0 in middle of screen
wave_0_per_point48=x=xs+0.5+q4;
wave_0_per_point49=y=ys+0.5+q5;
wave_0_per_point50=
wave_0_per_point51=r=1-q1;
wave_0_per_point52=g=1-q2;
wave_0_per_point53=b=1-q3;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=23
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.700
shapecode_0_rad=0.68919
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.01000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=y=bass_att*0.5+0.2;
shape_0_per_frame2=x=cos(time*2)*0.5+0.5;
shape_0_per_frame3=r=1-q1;
shape_0_per_frame4=r2=1-r;
shape_0_per_frame5=g=1-q2;
shape_0_per_frame6=g2=1-g;
shape_0_per_frame7=b=1-q3;
shape_0_per_frame8=b2=1-b;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.49428
shapecode_1_ang=0.00000
shapecode_1_tex_ang=3.14159
shapecode_1_tex_zoom=0.55033
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=//ang = ang + (bass*.2) + (time*.4);
shape_1_per_frame2=//rad=1.781+(bass*0.025);
shape_1_per_frame3=//ang=above(0.5,treb_att)*.063;
shape_1_per_frame4=r=1-q1;
shape_1_per_frame5=r2=1-r;
shape_1_per_frame6=g=1-q2;
shape_1_per_frame7=g2=1-g;
shape_1_per_frame8=b=1-q3;
shape_1_per_frame9=b2=1-b;
shapecode_2_enabled=1
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.900
shapecode_2_y=0.500
shapecode_2_rad=0.27048
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.01000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shape_2_per_frame1=x = sin(time*5) * .4 + .5;
shape_2_per_frame2=y=treb_att*0.5;
shape_2_per_frame3=
shape_2_per_frame4=pow( (bass*.15),2);
shape_2_per_frame5=
shape_2_per_frame6=r=1-q1;
shape_2_per_frame7=r2=1-r;
shape_2_per_frame8=g=1-q2;
shape_2_per_frame9=g2=1-g;
shape_2_per_frame10=b=1-q3;
shape_2_per_frame11=b2=1-b;
shapecode_3_enabled=1
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.19789
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.01000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=x=.5+(bass*0.07);
shape_3_per_frame2=r=1-q1;
shape_3_per_frame3=r2=1-r;
shape_3_per_frame4=g=1-q2;
shape_3_per_frame5=g2=1-g;
shape_3_per_frame6=b=1-q3;
shape_3_per_frame7=b2=1-b;
per_frame_init_1=state = 0;
per_frame_1=basstime = basstime + bass*0.06;
per_frame_2=q1 = basstime;
per_frame_3=
per_frame_4=q9 = basstime * 0.005;
per_frame_5=q8 = basstime*0.1;
per_frame_6=
per_frame_7=q13 = sin(basstime)*0.001;
per_frame_8=q12 = sin(basstime*1.2)*0.001;
per_frame_9=
per_frame_10=q14 =  abs(cos(basstime*0.05))*4 + 1;
per_frame_11=q15 = cos(basstime*0.1);
per_frame_12=
per_frame_13=
per_frame_14=basstime = if(below(basstime,1000),1000,basstime);
per_frame_15=
per_frame_16=vol = pow(bass+mid+treb,2);
per_frame_17=basssum = vol;
per_frame_18=
per_frame_19=stickybit = time%2;
per_frame_20=
per_frame_21=//avg vol
per_frame_22=//buffer 1
per_frame_23=volAvg = volAvg + vol*equal(stickybit,1);
per_frame_24=//number of samples 1 or framerate
per_frame_25=sample1 = sample1 + equal(stickybit,1);
per_frame_26=//buffer 2
per_frame_27=volAvg2 = volAvg2 + vol*equal(stickybit,0);
per_frame_28=//number of samples 2
per_frame_29=sample2 = sample2 + equal(stickybit,0);
per_frame_30=
per_frame_31=//transision
per_frame_32=edge = bnot(equal(bit2,stickybit));
per_frame_33=
per_frame_34=volAvg = volAvg - volAvg*edge*stickybit;
per_frame_35=volAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);
per_frame_36=
per_frame_37=sample1 = sample1  - sample1*edge*stickybit;
per_frame_38=sample2 = sample2  - sample2*edge*equal(stickybit,0);
per_frame_39=
per_frame_40=//test vol against avg buffer lvl
per_frame_41=diff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);
per_frame_42=diff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);
per_frame_43=
per_frame_44=q3 = diff;
per_frame_45=
per_frame_46=bit2 = time%2;
per_frame_47=
per_frame_48=difftime = difftime + diff*0.03;
per_frame_49=q2 = difftime;
per_frame_50=
per_frame_51=//fix a strange error
per_frame_52=difftime = if(above(difftime,2000),0, difftime);
per_frame_53=monitor = q1;
per_frame_54=
per_frame_55=
per_frame_56=state = state + above(diff,3);
per_frame_57=
per_frame_58=q11 = difftime + state*2;
per_frame_59=q12 = difftime + state*2.5;
per_frame_60=
per_frame_61=//fix a strange error
per_frame_62=difftime = if(above(difftime,2000),0, difftime);
per_frame_63=
per_frame_64=//another state machine for shape tracking
per_frame_65=state = state + equal(diff,3);
per_frame_66=state = if(above(state,5), 0, state);
per_frame_67=
per_frame_68=
per_frame_69=
per_frame_70=xs = 0;
per_frame_71=ys = 0;
per_frame_72=
per_frame_73=//state 0 elipse
per_frame_74=xs = xs + (equal(0,state))*atan(bass_time*4)*0.1;
per_frame_75=ys = ys + (equal(0,state))*cos(bass_time*4)*0.1;
per_frame_76=
per_frame_77=//state 1 diag
per_frame_78=xs = xs + (equal(1,state))*cos(bass_time*4)*0.1;
per_frame_79=ys = ys + (equal(1,state))*cos(bass_time*4)*0.1;
per_frame_80=
per_frame_81=//state 2 -circle
per_frame_82=xs = xs + (equal(2,state))*cos(bass_time*4)*0.1;
per_frame_83=ys = ys + (equal(2,state))*sin(bass_time*4)*0.1;
per_frame_84=
per_frame_85=//state 3 parametric arc
per_frame_86=xs = xs + (equal(3,state))*cos(bass_time*5)*0.1;
per_frame_87=ys = ys + (equal(3,state))*cos(bass_time*9)*0.1;
per_frame_88=
per_frame_89=//state 4 arc
per_frame_90=xs = xs + (equal(4,state))*atan(bass_time*6)*0.1;
per_frame_91=ys = ys + (equal(4,state))*cos(bass_time*2)*0.1;
per_frame_92=
per_frame_93=//state 5 infinity
per_frame_94=xs = xs + (equal(5,state))*cos(bass_time*2)*0.1;
per_frame_95=ys = ys + (equal(5,state))*sin(bass_time*1)*0.1;
per_frame_96=
per_frame_97=//count
per_frame_98=xpass = xs + xpass;
per_frame_99=ypass = ys + ypass;
per_frame_100=
per_frame_101=//project and publish
per_frame_102=q6 = 0.3*sin(xpass*0.5);
per_frame_103=q7 = 0.3*sin(ypass*0.5);
per_pixel_1=zoom = 1;
per_pixel_2=rot = 0;
warp_1=`shader_body
warp_2=`{
warp_3=`    float2 d = texsize.zw * 8;
warp_4=`    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );
warp_5=`    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );
warp_6=`
warp_7=`    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.24 + rand_frame.xy;
warp_8=`
warp_9=`    float2 my_uv =  lerp(uv_orig,uv,1) ;
warp_10=`    float2 uv_x= my_uv + float2(dx.x,dy.x)*texsize.zw  *4;
warp_11=`    float2 uv_y= my_uv + float2(dx.y,dy.y)*texsize.zw  *4;
warp_12=`    float2 uv_z= my_uv + float2(dx.z,dy.z)*texsize.zw  *4;
warp_13=`    ret.x = GetPixel(uv_x).x - (GetPixel(uv_x) - GetBlur3(uv_x)).x  * 0.02;
warp_14=`    ret.y = GetPixel(uv_y).y - (GetPixel(uv_y) - GetBlur3(uv_y)).y  * 0.02;
warp_15=`    ret.z = GetPixel(uv_z).z - (GetPixel(uv_z) - GetBlur3(uv_z)).z  * 0.02;
warp_16=`
warp_17=`    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0.0;
warp_18=`    ret -= ret.yzx*0.1 - 0.04;
warp_19=`
warp_20=`}
comp_1=`shader_body
comp_2=`{
comp_3=`float3 ret2 = tex2D(sampler_main, uv);
comp_4=`float3 noise = .5;
comp_5=`float2 uv2 = 0;
comp_6=`float3 uv3 = 0;
comp_7=`float bl = GetBlur2(uv);
comp_8=`float3 foreground = 0;
comp_9=`
comp_10=`uv2.x=1-tex2D(sampler_noise_hq, uv.x);
comp_11=`uv2.y=1-tex2D(sampler_noise_hq, uv.y);
comp_12=`uv2.x*=q1;
comp_13=`uv2.y*=q2;
comp_14=`
comp_15=`uv3.x=.5-tex2D(sampler_noise_hq, uv.x+q4);
comp_16=`uv3.y=.5-tex2D(sampler_noise_hq, uv.y+q3);
comp_17=`uv3.z=1;
comp_18=`
comp_19=`uv3.x*=.5*q2;
comp_20=`uv3.y*=.5*q1;
comp_21=`
comp_22=`noise *= normalize(tex2D(sampler_noise_hq, uv3.xy-foreground)*tex2D(sampler_main, uv));
comp_23=`
comp_24=`foreground=(tex2D(sampler_noise_hq, noise)+tex2D(sampler_fc_main, uv));
comp_25=`
comp_26=`ret = tex2D(sampler_main, noise)*foreground;
comp_27=`
comp_28=`}
