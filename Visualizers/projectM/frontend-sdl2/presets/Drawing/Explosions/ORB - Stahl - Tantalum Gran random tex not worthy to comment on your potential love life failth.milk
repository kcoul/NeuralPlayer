MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=2.000
fDecay=1.000
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=1
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=0.96000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00052
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.500
wave_0_per_point1=//init
wave_0_per_point2=zs = if(below(zs,1),9,zs);
wave_0_per_point3=
wave_0_per_point4=zs = if(above(zs, 1100),1, zs);
wave_0_per_point5=
wave_0_per_point6=speed = bass*0.002;
wave_0_per_point7=
wave_0_per_point8=xcoef = equal(q4,0)*2 + equal(q4,1)*2.1  + equal(q4,2)*2.2 + equal(q4,3)*2.3 + equal(q4,4)*2.4 + equal(q4,5)*2.5;
wave_0_per_point9=
wave_0_per_point10=//sum
wave_0_per_point11=zs = zs + tan(q1*0.015)*speed;
wave_0_per_point12=
wave_0_per_point13=//project
wave_0_per_point14=x = 0.5 + 0.08*cos(q1*zs*xcoef);// /(1 + 0.1*abs(cos(zs)));
wave_0_per_point15=y = 0.5 + 0.08*sin(q1*zs*2);// /(1 + 0.1*abs(cos(zs)));
wave_0_per_point16=
wave_0_per_point17=
wave_0_per_point18=r = 0.5 + 0.5*sin(q1*100.2 + x + x);
wave_0_per_point19=g = 0.5 + 0.5*sin(q1*100.5 + x + y);
wave_0_per_point20=b = 0.5 + 0.5*sin(q1*100.36 + y + y);
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=12
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=92
shapecode_0_x=0.800
shapecode_0_y=0.500
shapecode_0_rad=0.02705
shapecode_0_ang=1.57080
shapecode_0_tex_ang=1.25664
shapecode_0_tex_zoom=3.07268
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=t1 = time - int (time);
shape_0_per_frame2=sample = instance/num_inst;
shape_0_per_frame3=t_abs = sample*3;
shape_0_per_frame4=t_rel = sample-time/5;
shape_0_per_frame5=
shape_0_per_frame6=ampl = 2*t_abs/2 ;
shape_0_per_frame7=
shape_0_per_frame8=k1=sin(time/13);
shape_0_per_frame9=k2=sin(time/12);
shape_0_per_frame10=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;
shape_0_per_frame11=oy = ampl*cos (t_abs*(31+5*k2));
shape_0_per_frame12=oz = -1  ;
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=r = sqr(sin(t_rel*3.4));
shape_0_per_frame16=g = sqr(sin(t_rel));
shape_0_per_frame17=b = sqr (cos(t_rel*1.8));
shape_0_per_frame18=
shape_0_per_frame19=//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;
shape_0_per_frame20=
shape_0_per_frame21=xang = time/9.5;
shape_0_per_frame22=yang = 0*time/7;
shape_0_per_frame23=zang = -time/22;
shape_0_per_frame24=fov = 0.5;
shape_0_per_frame25=
shape_0_per_frame26=
shape_0_per_frame27=// Rotation um x,y,z
shape_0_per_frame28=
shape_0_per_frame29=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame30=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame31=
shape_0_per_frame32=ox = mx;
shape_0_per_frame33=oy = my;
shape_0_per_frame34=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame35=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame36=ox = mx;
shape_0_per_frame37=oz = mz;
shape_0_per_frame38=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame39=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame40=oy = my;
shape_0_per_frame41=oz = mz;
shape_0_per_frame42=
shape_0_per_frame43=oz = oz - 6;
shape_0_per_frame44=x = ox*fov/oz +0.5;
shape_0_per_frame45=//x = (x-.5)*0.75 + 0.5;
shape_0_per_frame46=y = oy*fov/oz + 0.5;
shape_0_per_frame47=
shape_0_per_frame48=a=1/mz*.5;
shape_0_per_frame49=//a2=1/mz*.5;
shape_0_per_frame50=//border_a=1/mz*.5;
shape_0_per_frame51=rad=1/mz*.005;
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.03333
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = int(rand(100))*.01;
shape_1_per_frame2=y = int(rand(100))*.01;
shape_1_per_frame3=
shape_1_per_frame4=a = if(above(frame%1,0),0,1);
shape_1_per_frame5=
shape_1_per_frame6=vol=bass+mid+treb;
shape_1_per_frame7=rad = vol*.1;
shapecode_2_enabled=1
shapecode_2_sides=14
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=512
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10260
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.62832
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_2_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_2_per_frame3=
shape_2_per_frame4=mx=mx+(.0002*cos(ma));
shape_2_per_frame5=my=my+(.0002*sin(ma));
shape_2_per_frame6=
shape_2_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_2_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_2_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_2_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_2_per_frame11=
shape_2_per_frame12=x=mx;
shape_2_per_frame13=y=my;
shape_2_per_frame14=rad=(bass+treb)/100;
shape_2_per_frame15=a=(above(bass+mid+treb,.8));
shape_2_per_frame16=r=int(rand(100))/100;
shape_2_per_frame17=g=int(rand(100))/100;
shape_2_per_frame18=b=int(rand(100))/100;
shape_2_per_frame19=r2=int(rand(100))/100;
shape_2_per_frame20=g2=int(rand(100))/100;
shape_2_per_frame21=b2=int(rand(100))/100;
shape_2_per_frame22=r_border=int(rand(100))/100;
shape_2_per_frame23=g_border=int(rand(100))/100;
shape_2_per_frame24=b_border=int(rand(100))/100;
shapecode_3_enabled=1
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=311
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.62832
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.000
shapecode_3_border_g=0.000
shapecode_3_border_b=0.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_3_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_3_per_frame3=
shape_3_per_frame4=mx=mx+(.0002*cos(ma));
shape_3_per_frame5=my=my+(.0002*tan(ma));
shape_3_per_frame6=
shape_3_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_3_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_3_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_3_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_3_per_frame11=
shape_3_per_frame12=x=1-mx;
shape_3_per_frame13=y=1-my;
shape_3_per_frame14=
shape_3_per_frame15=ang=(sin(time*.35)+1)*3;
shape_3_per_frame16=//a=(above(bass+mid+treb,.8));
shape_3_per_frame17=pi23=4*asin(1)*.333333333;
shape_3_per_frame18=t1=bass+mid+treb;
per_frame_1=basstime = basstime + bass*0.03;
per_frame_2=basstime2 = basstime + bass*0.03;
per_frame_3=q1 = basstime2;
per_frame_4=
per_frame_5=//start in most active range
per_frame_6=basstime = if(below(basstime,450),450,basstime);
per_frame_7=basstime = if(above(basstime,495),450,basstime);
per_frame_8=
per_frame_9=basstime = basstime + bass_att*0.03;
per_frame_10=vol = pow(bass+mid+treb,2);
per_frame_11=basssum = vol;
per_frame_12=
per_frame_13=stickybit = time%2;
per_frame_14=
per_frame_15=//avg vol
per_frame_16=//buffer 1
per_frame_17=volAvg = volAvg + vol*equal(stickybit,1);
per_frame_18=//number of samples 1 or framerate
per_frame_19=sample1 = sample1 + equal(stickybit,1);
per_frame_20=//buffer 2
per_frame_21=volAvg2 = volAvg2 + vol*equal(stickybit,0);
per_frame_22=//number of samples 2
per_frame_23=sample2 = sample2 + equal(stickybit,0);
per_frame_24=
per_frame_25=//transision
per_frame_26=edge = bnot(equal(bit2,stickybit));
per_frame_27=
per_frame_28=volAvg = volAvg - volAvg*edge*stickybit;
per_frame_29=volAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);
per_frame_30=
per_frame_31=sample1 = sample1  - sample1*edge*stickybit;
per_frame_32=sample2 = sample2  - sample2*edge*equal(stickybit,0);
per_frame_33=
per_frame_34=//test vol against avg buffer lvl
per_frame_35=diff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);
per_frame_36=diff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);
per_frame_37=
per_frame_38=q3 = diff;
per_frame_39=
per_frame_40=bit2 = time%2;
per_frame_41=
per_frame_42=state = if(above(state,5),0,state);
per_frame_43=state =  state + above(diff,3);
per_frame_44=q4 = state;
per_frame_45=
per_frame_46=difftime = difftime + diff*0.03;
per_frame_47=q2 = difftime;
per_frame_48=
per_frame_49=//fix a strange error
per_frame_50=difftime = if(above(difftime,2000),0, difftime);
per_frame_51=
per_frame_52=monitor = state;
per_pixel_1=zoom = 1 + q3*0.05;
per_pixel_2=rot = (rad-q3)*q3*0.1;
per_pixel_3=//cx = 0.5 + 0.5*sin(q2);
per_pixel_4=//cy = cx;
warp_1=`shader_body
warp_2=`{
warp_3=`   float d = texsize.zw;
warp_4=`   float3 deltax = (GetPixel(uv + float2(1,0)*d) + GetPixel(uv + float2(1,0)*d))*0.5;    
warp_5=`   float3 deltay = (GetPixel(uv + float2(0,1)*d) + GetPixel(uv + float2(0,1)*d))*0.5;    
warp_6=`     
warp_7=`
warp_8=`   ret = ((deltax+deltay - tex2D(sampler_main, (uv-0.5) + 0.5 ))); 
warp_9=`float3 ret7=ret;
warp_10=`if(frame%3==0)ret.z=.71-ret7.x;
warp_11=`if(frame%5==0)ret.x=.71-ret7.y;
warp_12=`if(frame%7==0)ret.y=.71-ret7.z;
warp_13=`//    ret = tex2D( sampler_main, uv ).xyz;    
warp_14=`//    ret = ret-0.001;// - q6;// - 0.08; //or try: ret -= 0.004;
warp_15=`}
comp_1=`const float4 samples[5] = {
comp_2=`    0.0,    0.0,    0,    11.0/3.0,
comp_3=`    0.0,    1.0,    0,    -2.0/3.0,
comp_4=`    0.0,    -1.0,   0,    -2.0/3.0,
comp_5=`    -1.0,    0.0,   0,    -2.0/3.0,
comp_6=`    1.0,    0.0,   0,    -2.0/3.0
comp_7=`};
comp_8=`
comp_9=`
comp_10=`
comp_11=`sampler sampler_rand01;
comp_12=`
comp_13=`
comp_14=`shader_body
comp_15=`{
comp_16=`    float2 d = texsize.zw*8;
comp_17=`    float1 dx = ( GetBlur1(uv.yx+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) ).y;
comp_18=`    float1 dy = ( GetBlur1(uv.yx+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) ).y;
comp_19=`    float2 uv_y = uv+float2(dy,dx)*0.55;  
comp_20=`    float2 uv_y2 = (uv_y*1.25)-.125;  
comp_21=`
comp_22=`  
comp_23=`    ret = lerp(ret,1-ret,.7*GetBlur1(uv_y)+.2*GetPixel(uv.yx));
comp_24=`
comp_25=`float3 ret7=ret;
comp_26=`if(frame%02==0)ret.x=.71-ret7.y;
comp_27=`
comp_28=`    ret = lerp(ret,ret-.1*GetBlur3(uv_y)+.1*GetBlur1(uv_y2)+.42*GetPixel(uv_y),.25);
comp_29=`    //ret *= .75;
comp_30=`    ret *= saturate(length(ret-0.5)*5);
comp_31=`
comp_32=`if(frame%11==0)ret.y=.71-ret7.z;
comp_33=`
comp_34=`    //ret = ret.xy;
comp_35=`    ret = lum(ret);
comp_36=`    ret += 1.25;
comp_37=`    ret *= ret*.45;
comp_38=`    float3 mask = GetBlur3(uv)-GetBlur1(uv)-.25*GetBlur2(uv_y);
comp_39=`    ret *= lerp(ret,1.3*ret*mask,pow(hue_shader.zxy,ret));
comp_40=`    ret *=1;
comp_41=`
comp_42=`    
comp_43=`    float3 a_varaible = 0; 
comp_44=`    for(int i=0;i<5;i++)
comp_45=`      a_varaible += samples[i].w*tex2D(sampler_rand01,ret*0.1+
comp_46=`       float2(samples[i].x*(1/texsize.x),
comp_47=`              samples[i].y*(1/texsize.y)))*0.2;
comp_48=`
comp_49=`    ret = a_varaible;
comp_50=`    ret = 1  - 2*(1 - ret)*ret - GetBlur3(uv);
comp_51=`
comp_52=`if(frame%13==0)ret.z=.71-ret7.x;
comp_53=`//ret=1-ret;
comp_54=`}
