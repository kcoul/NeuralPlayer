MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.037
fWarpScale=0.015
fZoomExponent=1.00000
fShader=0.000
zoom=0.78752
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.03300
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.035
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.010
ib_r=1.000
ib_g=1.000
ib_b=0.960
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*tan(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*tan(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
shapecode_0_enabled=1
shapecode_0_sides=3
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=311
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.03340
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_0_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_0_per_frame3=
shape_0_per_frame4=mx=mx+(.0002*cos(ma));
shape_0_per_frame5=my=my+(.0002*tan(ma));
shape_0_per_frame6=
shape_0_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_0_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_0_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_0_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_0_per_frame11=
shape_0_per_frame12=x=mx;
shape_0_per_frame13=y=my;
shape_0_per_frame14=
shape_0_per_frame15=a=(above(bass+mid+treb,.8));
shape_0_per_frame16=ang=(sin(time*.35)+1)*3;
shapecode_1_enabled=1
shapecode_1_sides=3
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=281
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.03347
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ma=ma+(above(bass,1)*3.1415*.05*bass);
shape_1_per_frame2=ma=ma-(above(mid,1)*3.1415*.05*mid);
shape_1_per_frame3=
shape_1_per_frame4=mx=mx+(.0001*tan(ma));
shape_1_per_frame5=my=my+(.0001*sin(ma));
shape_1_per_frame6=
shape_1_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_1_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_1_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_1_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_1_per_frame11=
shape_1_per_frame12=x=mx;
shape_1_per_frame13=y=my;
shape_1_per_frame14=
shape_1_per_frame15=a=(above(bass+mid+treb,.1));
shape_1_per_frame16=ang=(sin(time*.30)+1)*3.3;
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=mv_x=64;mv_y=48;
per_frame_init_2=nut=0;
per_frame_init_3=stp=0;stq=0;
per_frame_init_4=rtp=0;rtq=0;
per_frame_init_5=wvr=0;
per_frame_init_6=br=1;
per_frame_init_7=bt=time;
per_frame_init_8=bt2=time+1;
per_frame_init_9=abt=0;
per_frame_init_10=count=1;
per_frame_init_11=afps=fps;
per_frame_init_12=mvol=(bass+mid+treb)/3;
per_frame_init_13=st=time;
per_frame_init_14=abt=0.1;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.99;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1),mq29);
per_frame_12=mq30=if(above(chng,cthr),rand(1),mq30);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q30=mq30;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=(bass+mid+treb)*0.25;
per_frame_19=vol=vol*vol;
per_frame_20=
per_frame_21=vol2=(bass_att+mid_att+treb_att)*0.25;
per_frame_22=vol2=vol2*vol2;
per_frame_23=
per_frame_24=q2=vol2;
per_frame_25=
per_frame_26=mtime=mtime+vol*0.01;
per_frame_27=q1=time*0.5;
per_frame_28=//can be buggy; if doesn't work, run init code.
per_frame_29=//--------------------------------------
per_frame_30=//Fed's beat code:
per_frame_31=//
per_frame_32=//br - beat rate;
per_frame_33=//bt,bt2 - beat times;
per_frame_34=//spika - beat detector, power of the beat;
per_frame_35=//count - beat counter;
per_frame_36=//++++++++++++++++++++++++++++++++++++++
per_frame_37=//TRESH - power of treble to detect beat;
per_frame_38=//BASH - power of bass to detect beat;
per_frame_39=//beat detector works only if both of them 
per_frame_40=//are less then treb & bass!
per_frame_41=//++++++++++++++++++++++++++++++++++++++
per_frame_42=//abt - summ of all beatrates;
per_frame_43=//Increases if no beat.
per_frame_44=//mvol - middle volume;
per_frame_45=//mba - middle bass;
per_frame_46=//mtr - middle treb;
per_frame_47=//pret - preset time;
per_frame_48=//clr - amount of seconds to recalculate volumes.
per_frame_49=//--------------------------------------
per_frame_50=pret=time-st;
per_frame_51=avol=avol+(bass+mid+treb)/3;
per_frame_52=aba=aba+bass;
per_frame_53=mba=aba/pret/fps;
per_frame_54=atr=atr+treb;
per_frame_55=mtr=atr/pret/fps;
per_frame_56=mvol=avol/pret/fps;
per_frame_57=TRESH=mtr+0.1;
per_frame_58=BASH=mba+0.1;
per_frame_59=clr=50;//----------HERE!!!!!! in seconds.
per_frame_60=abass=bass_att*0.4+abass;
per_frame_61=bt=time*above(spika,0)+bt*equal(spika,0);
per_frame_62=spika=above(treb_att,TRESH)*treb+above(bass_att,BASH)*bass;
per_frame_63=spik=spik+spika*0.4;
per_frame_64=bt2=time*above(spika,0)+bt*equal(spika,0);
per_frame_65=count=count+above(bt2-bt,0);
per_frame_66=abt=max(below(br,10),equal(br,10))*(abt+if(bt2-bt, bt2-bt, 1/fps))+above(br,10); 
per_frame_67=br=abt/count;
per_frame_68=dx=dx-cos(abass)*br*0.02+sin(spik)/br*0.02;
per_frame_69=dy=dy-sin(abass)*br*0.02+cos(spik)/br*0.02;
per_frame_70=sx=sx+sin(abass)*dx*2;
per_frame_71=sy=sy-cos(spik)*dy*2;
per_frame_72=ib_a=pow(spika/5,5);  //<--That's how we use it.
per_frame_73=//debugging
per_frame_74=calc=below(pret,clr);
per_frame_75=abass=below(abass,9000)*abass;
per_frame_76=avol=if(calc,avol,(bass+mid+treb)/3);
per_frame_77=st=if(calc,st,time-1);
per_frame_78=aba=if(calc,aba,bass);
per_frame_79=atr=if(calc,atr,treb);
per_frame_80=abt=above(pret,0.2)*abt+below(pret,0.2)*0.5;
per_frame_81=//fun
per_frame_82=afps=(fps+afps)/2;
per_frame_83=zoom=zoom-(fps/afps-1)*90;
per_frame_84=q4=int(pret/br)%2;
per_frame_85=q5=above(spika,0);
per_frame_86=//monitor=pow(spika,6)/3000;
warp_1=`
warp_2=`shader_body
warp_3=`{
warp_4=`
warp_5=`ret.xyz = tex2D(sampler_main, uv_orig).xyz*float3(.97,1,.97) - float3(.03,0,.03);
warp_6=`
warp_7=`float3 ret7=ret;
warp_8=`if(frame%3==0)ret.z=.71-ret7.x;
warp_9=`ret.z += GetBlur1(uv_orig).z*.45;
warp_10=`ret.x += GetBlur1(uv_orig).z*.05 + GetBlur3(uv_orig).z*.05;
warp_11=`ret.z -= ret.x;
warp_12=`if(frame%7==0)ret.y=.71-ret7.z;
warp_13=`
warp_14=`
warp_15=`float2 pixelsize = texsize.zw;
warp_16=`ret.y = saturate(tex2D( sampler_pw_main,uv_orig).y);
warp_17=`if(frame%5==0)ret.x=.71-ret7.y;
warp_18=`
warp_19=`
warp_20=`float1 conway = tex2D( sampler_pw_main, uv_orig + float2(-1,-1)*pixelsize).y;
warp_21=`       conway += tex2D( sampler_pw_main, uv_orig + float2(0,-1)*pixelsize).y;
warp_22=`       conway += tex2D( sampler_pw_main, uv_orig + float2(1,-1)*pixelsize).y;
warp_23=`       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,0)*pixelsize).y;
warp_24=`       conway += tex2D( sampler_pw_main, uv_orig + float2(1,0)*pixelsize).y;
warp_25=`       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,1)*pixelsize).y;
warp_26=`       conway += tex2D( sampler_pw_main, uv_orig + float2(0,1)*pixelsize).y;
warp_27=`       conway += tex2D( sampler_pw_main, uv_orig + float2(1,1)*pixelsize).y;
warp_28=`
warp_29=`float1 test = q5*(1-GetBlur1(uv_orig).y)*(1-GetBlur2(uv_orig).y)*(1-GetBlur3(uv_orig).y);
warp_30=`
warp_31=`conway -= tex2D( sampler_pw_main, uv_orig).x;
warp_32=`
warp_33=`
warp_34=`if (conway > 0) {
warp_35=`if (saturate(ret.y) == 0) {
warp_36=`ret.y = floor(test*1.8)*q1;
warp_37=`}
warp_38=`}
warp_39=`
warp_40=`ret.y -= ret.x;
warp_41=`
warp_42=`ret.xyz -= 1-q2;
warp_43=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_44=`                      ((uv.xyy*q27
warp_45=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_46=`                      ).xyz*
warp_47=`                      float3(1,1,0)*0.05 + 
warp_48=`                      time*float3(0,0,1)*q29
warp_49=`                     );
warp_50=`if(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y += (noise9).x*.5; 
warp_51=`if(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z += (noise9).y*.5; 
warp_52=`if(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x += (noise9).z*.5; 
warp_53=`
warp_54=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 d = texsize.zw;
comp_4=`    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );
comp_5=`    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );
comp_6=`float2 dz = float2(dx.y,dy.y)*3;
comp_7=`
comp_8=`d = texsize.zw*2;
comp_9=`dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_10=`dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_11=`
comp_12=`dz +=float2(dx.y,dy.y);
comp_13=`
comp_14=`float3 bg = pow(length(dz)*0.8+0,0.7)*2 + GetBlur1(uv).y*2;
comp_15=`
comp_16=`ret = bg*float3(0.2,0.3,0.6);
comp_17=`float2 uv_swimmer =frac(0.5 + (uv-0.5)+float2(q19,q20)*float2(-1,1));
comp_18=`ret = lerp(ret,float3(3,2,1),GetBlur3(uv_swimmer -float2(dx.y,dy.y)).x);
comp_19=`ret = lerp(ret,0,GetBlur2(uv_swimmer-dz).x);
comp_20=`ret = lerp(ret,float3(0,0,0),1.5*GetPixel(uv_swimmer).x);
comp_21=`
comp_22=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_23=`                      ((uv.xyy*q28
comp_24=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_25=`                      ).xyz*
comp_26=`                      float3(1,1,0)*0.05 + 
comp_27=`                      time*float3(0,0,1)*q30 
comp_28=`                     );
comp_29=`if(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z += (noise9).x*.5; 
comp_30=`if(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x += (noise9).y*.5; 
comp_31=`if(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y += (noise9).z*.5; 
comp_32=`}
