MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=0.925
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.060
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.050
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t1=samples;
wave_0_per_frame2=assign( gmegabuf(0), samples );
wave_0_per_frame3=
wave_0_per_point1=x=sample;
wave_0_per_point2=y=value1*.5+.2;
wave_0_per_point3=
wave_0_per_point4=
wave_0_per_point5=//t1 is "samples"
wave_0_per_point6=//add one to leave a spot for the number of samples
wave_0_per_point7=assign(gmegabuf( t1 * sample + 1 ), value1);
wave_0_per_point8=
wave_0_per_point9=r=sin(q1*.75-value2);
wave_0_per_point10=g=sin(q1*.25+value1);
wave_0_per_point11=b=sin(q1);
wave_0_per_point12=a=0;
wavecode_1_enabled=0
wavecode_1_samples=256
wavecode_1_sep=256
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=x=value1*.1+.5;
wave_1_per_point2=y=value2*.1+.5;
wave_1_per_point3=
wave_1_per_point4=r=sin(q4+(q5-value1))*.5+.5;
wave_1_per_point5=g=sin(q4-(q5*value2))*.5+.5;
wave_1_per_point6=b=sin(q5-(q4*value1))*.5+.5;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.26249
shapecode_0_ang=2.95310
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.70721
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.400
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=rad=.25*q20;
shape_0_per_frame2=
shape_0_per_frame3=x=.2;
shape_0_per_frame4=y=.2;
shape_0_per_frame5=
shape_0_per_frame6=
shape_0_per_frame7=ang=0;
shape_0_per_frame8=sides=4;
shape_0_per_frame9=r=1;
shape_0_per_frame10=g=1;
shape_0_per_frame11=b=1;
shape_0_per_frame12=a=1;
shape_0_per_frame13=r2=r;
shape_0_per_frame14=g2=g;
shape_0_per_frame15=b2=b;
shape_0_per_frame16=a2=a;
shape_0_per_frame17=border_r=0;
shape_0_per_frame18=border_g=0;
shape_0_per_frame19=border_b=0;
shape_0_per_frame20=border_a=0;
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.61774
shapecode_1_ang=0.00000
shapecode_1_tex_ang=3.14159
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.300
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=rad=.25*q1;
shape_1_per_frame2=
shape_1_per_frame3=x=.7;
shape_1_per_frame4=y=.2;
shape_1_per_frame5=
shape_1_per_frame6=
shape_1_per_frame7=ang=0;
shape_1_per_frame8=sides=4;
shape_1_per_frame9=r=1;
shape_1_per_frame10=g=1;
shape_1_per_frame11=b=1;
shape_1_per_frame12=a=1;
shape_1_per_frame13=r2=r;
shape_1_per_frame14=g2=g;
shape_1_per_frame15=b2=b;
shape_1_per_frame16=a2=a;
shape_1_per_frame17=border_r=0;
shape_1_per_frame18=border_g=0;
shape_1_per_frame19=border_b=0;
shape_1_per_frame20=border_a=0;
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=rad=.25*q21;
shape_2_per_frame2=
shape_2_per_frame3=x=.2;
shape_2_per_frame4=y=.7;
shape_2_per_frame5=
shape_2_per_frame6=
shape_2_per_frame7=ang=0;
shape_2_per_frame8=sides=4;
shape_2_per_frame9=r=1;
shape_2_per_frame10=g=1;
shape_2_per_frame11=b=1;
shape_2_per_frame12=a=1;
shape_2_per_frame13=r2=r;
shape_2_per_frame14=g2=g;
shape_2_per_frame15=b2=b;
shape_2_per_frame16=a2=a;
shape_2_per_frame17=border_r=0;
shape_2_per_frame18=border_g=0;
shape_2_per_frame19=border_b=0;
shape_2_per_frame20=border_a=0;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
shape_3_per_frame1=rad=.25*q2;
shape_3_per_frame2=
shape_3_per_frame3=x=.7;
shape_3_per_frame4=y=.7;
shape_3_per_frame5=
shape_3_per_frame6=
shape_3_per_frame7=ang=0;
shape_3_per_frame8=sides=4;
shape_3_per_frame9=r=1;
shape_3_per_frame10=g=1;
shape_3_per_frame11=b=1;
shape_3_per_frame12=a=1;
shape_3_per_frame13=r2=r;
shape_3_per_frame14=g2=g;
shape_3_per_frame15=b2=b;
shape_3_per_frame16=a2=a;
shape_3_per_frame17=border_r=0;
shape_3_per_frame18=border_g=0;
shape_3_per_frame19=border_b=0;
shape_3_per_frame20=border_a=0;
per_frame_init_1=
per_frame_init_2=avgdbass=0.01;
per_frame_init_3=avgdtreb=0.01;
per_frame_init_4=
per_frame_init_5=last_raw_bass = .1;
per_frame_init_6=last_raw_treb = .1;
per_frame_init_7=
per_frame_init_8=
per_frame_init_9=avgbr=0.7;
per_frame_init_10=avgbr2=0.7;
per_frame_init_11=beatb=0;
per_frame_init_12=beatb2=0;
per_frame_init_13=lbt2=time;
per_frame_init_14=lbt=time;
per_frame_init_15=ph=0;
per_frame_init_16=phase=0;
per_frame_init_17=bool=0;
per_frame_init_18=const=.01;
per_frame_init_19=ph2=0;
per_frame_init_20=phase2=0;
per_frame_init_21=bool2=0;
per_frame_init_22=const2=.01;
per_frame_init_23=
per_frame_init_24=mtime=100+bass_att*1000;
per_frame_init_25=mtime2=100+treb_att*1000;
per_frame_init_26=
per_frame_1=num_samples=gmegabuf(0);
per_frame_2=num_slices = 4;
per_frame_3=slice_size = num_samples/num_slices;
per_frame_4=raw_bass = 0;
per_frame_5=raw_treb = 0;
per_frame_6=i=0;
per_frame_7=loop(slice_size,
per_frame_8= exec3(
per_frame_9=  raw_bass = raw_bass + gmegabuf(i+1+slice_size*.3),
per_frame_10=  raw_treb = raw_treb + gmegabuf(i+1+slice_size*(num_slices*.7)),
per_frame_11=  i=i+1
per_frame_12= )
per_frame_13=);
per_frame_14=raw_bass = raw_bass * 30/fps;
per_frame_15=raw_treb = raw_treb * 30/fps;
per_frame_16=
per_frame_17=raw_bass = raw_bass/num_samples;
per_frame_18=raw_treb = raw_treb/num_samples;
per_frame_19=
per_frame_20=dbass = raw_bass - last_raw_bass;
per_frame_21=dtreb = raw_treb - last_raw_treb;
per_frame_22=
per_frame_23=
per_frame_24=avgdbass=avgdbass*.99+abs(dbass)*.01;
per_frame_25=avgdtreb=avgdtreb*.99+abs(dtreb)*.01;
per_frame_26=
per_frame_27=last_raw_bass = raw_bass;
per_frame_28=last_raw_treb = raw_treb;
per_frame_29=
per_frame_30=is_beat = above(abs(dbass), avgdbass*2);
per_frame_31=is_beat = is_beat * above(time-lbt,avgbr*.5);
per_frame_32=beatb = is_beat;
per_frame_33=
per_frame_34=
per_frame_35=is_beat = above(abs(dtreb), avgdtreb*2);
per_frame_36=is_beat = is_beat * above(time-lbt2,avgbr2*.5);
per_frame_37=monitor = raw_treb;
per_frame_38=beatb2 = is_beat;
per_frame_39=
per_frame_40=
per_frame_41=//beatrate calc
per_frame_42=avgbr=beatb*(avgbr*.9+(time-lbt)*.1)+(1-beatb)*max(avgbr+(1/avgbr)*.0001,0); // avg beat rate
per_frame_43=avgbr2=beatb2*(avgbr2*.9+(time-lbt2)*.1)+(1-beatb2)*max(avgbr2+(1/avgbr2)*.00001,0);
per_frame_44=
per_frame_45=lbt=time*beatb+(1-beatb)*lbt; //last beat time
per_frame_46=lbt2=time*beatb2+(1-beatb2)*lbt2;
per_frame_47=
per_frame_48=
per_frame_49=ph=(time-lbt)*(60/avgbr)*const;
per_frame_50=phase=max(min( ph, 1 ),0);
per_frame_51=const=const*(1-beatb)+beatb*( const+ (.002*bool) );
per_frame_52=bool=below(phase,.98)*(.98-ph)-above(phase,.98)*(ph*.5);
per_frame_53=
per_frame_54=ph2=(time-lbt2)*(60/avgbr2)*const2;
per_frame_55=phase2=max(min( ph2, 1 ),0);
per_frame_56=const2=const2*(1-beatb2)+beatb2*( const2+ (.002*bool2) );
per_frame_57=bool2=below(phase2,.98)*(.98-ph2)-above(phase2,.98)*(ph2*.5);
per_frame_58=
per_frame_59=
per_frame_60=
per_frame_61=bc=bc+beatb;
per_frame_62=bc2=bc2+beatb2;
per_frame_63=
per_frame_64=mtime=mtime+( (avgdbass*(60/avgbr))*(1+beatb) )*(1/fps);
per_frame_65=mtime2=mtime2+( (avgdtreb*(60/avgbr2))*(1+beatb2) )*(1/fps);
per_frame_66=q1=1-phase;
per_frame_67=q2=1-phase2;
per_frame_68=q3=bc;
per_frame_69=q4=bc2;
per_frame_70=
per_frame_71=
per_frame_72=
per_frame_73=q5=mtime;
per_frame_74=q6=mtime2;
per_frame_75=q7=sin(mtime)*.5+.5;
per_frame_76=q8=sin(mtime2)*.5+.5;
per_frame_77=q9=sin(mtime*.1)*.5+.5;
per_frame_78=q10=sin(mtime2*.1)*.5+.5;
per_frame_79=q11=avgdbass;
per_frame_80=q12=avgdtreb;
per_frame_81=
per_frame_82=q14=60/avgbr;
per_frame_83=q15=60/avgbr2;
per_frame_84=monitor = q14+floor(q15) *100000;
per_frame_85=monitor = avgbr + floor(q14) * 100;
per_frame_86=q20=beatb;
per_frame_87=q21=beatb2;
per_frame_88=q22=bc%4;
per_frame_89=q23=bc2%4;
per_frame_90=//monitor=bc;
per_frame_91=
per_frame_92=warp=0;
per_frame_93=wrap=1;
per_frame_94=zoom=1;
per_frame_95=
per_frame_96=s=1+q20+q21;
per_frame_97=ob_r=sin((mtime*1.2-mtime2*1.3)*s)*.5+.5;
per_frame_98=ob_g=sin((mtime*0.9+mtime2*1.4)*s)*.5+.5;
per_frame_99=ob_b=sin((mtime2*1.5-mtime*0.8)*s)*.5+.5;
per_frame_100=ob_a = min(q1*0.5+(beatb+beatb2),1);
per_frame_101=//ob_r=ob_g=ob_b=1;
per_pixel_1=//rot=(q2-q1);
warp_1=` float2 cmul(float2 mul1, float2 mul2) {
warp_2=`   float2 mul = float2(mul1.x*mul2.x - mul1.y*mul2.y, mul1.y*mul2.x + mul1.x*mul2.y);
warp_3=`   return mul;
warp_4=` }
warp_5=` float2 cdiv(float2 div1, float2 div2) {
warp_6=`   float2 div = float2( (div1.x*div2.x + div1.y*div2.y)/(div2.x*div2.x + div2.y*div2.y),
warp_7=`   (div1.y*div2.x + div1.x*div2.y)/(div2.x*div2.x + div2.y*div2.y) );
warp_8=`   return div;
warp_9=` }
warp_10=` float2 cpow(float2 base, float ex) {
warp_11=`   float moduz = sqrt(base.x*base.x + base.y*base.y);
warp_12=`   float thetaz = atan2(base.y, base.x);
warp_13=`   float2 pow = float2(pow(moduz, ex)*cos(thetaz*ex), pow(moduz, ex)*sin(thetaz*ex));
warp_14=`   return pow;
warp_15=` }
warp_16=` float2 cexp(float2 base, float2 ex) {
warp_17=`   float moduz = sqrt(base.x*base.x + base.y*base.y);
warp_18=`   float thetaz = atan2(base.y, base.x);
warp_19=`   float mp = pow(moduz, ex.x)*exp(-ex.y*thetaz);
warp_20=`   float2 sol = mp*float2(cos(ex.y*log(moduz) + ex.x*thetaz), sin(ex.y*log(moduz) + ex.x*thetaz));
warp_21=`   return sol;
warp_22=` }
warp_23=`
warp_24=`
warp_25=` float getRad(float2 uv1) { 
warp_26=`   return sqrt( pow(0.5-uv1.x,2) + pow(0.5-uv1.y,2) );
warp_27=` }
warp_28=` float getAng(float2 uv1) {
warp_29=`   float2 uv2 = (uv1-0.5)*aspect.xy;
warp_30=`   return atan2(uv2.y,uv2.x);
warp_31=` }
warp_32=`
warp_33=`sampler sampler_rand02;
warp_34=`float4  texsize_rand02;    // ...it's smart enough to get it from just this.
warp_35=`shader_body
warp_36=`{
warp_37=`    // sample previous frame
warp_38=`
warp_39=`
warp_40=`   float2 zoom = 2-rad*((q3*q4)%4);
warp_41=`   float2 c;
warp_42=`    c = float2(1+q8,1+q7)+0.9;
warp_43=`//c=float2(0.7,0.6);
warp_44=`   float2 z = (uv-0.5)*zoom;
warp_45=`   float zp = 0.3+(abs(q3-q4+(q1-q2)*2)%9+5)*0.08;
warp_46=`
warp_47=`   float2 uv2;
warp_48=`for (int i = 0; i < 5; i++)
warp_49=`{
warp_50=`  z = cpow(z,zp)%c;
warp_51=`}
warp_52=`
warp_53=`uv2 = z;
warp_54=`
warp_55=`uv2 = 0.5 + (1.0 - abs( frac( uv2 * 0.5 ) * 2 - 1.0 )-0.5)*0.99; // Eo.S. mirror code with cutted borders
warp_56=`
warp_57=`    float mrad = getRad(uv2);
warp_58=`    float mang = getAng(uv2);
warp_59=`
warp_60=`    float3 pic = tex2D( sampler_rand02, uv2 ).xyz;
warp_61=`    float3 fractal = tex2D( sampler_main, uv2 ).xyz;
warp_62=`    float3 blured = GetBlur1(uv);
warp_63=`//    ret=min(fractal,blured*pic)*1.8;
warp_64=`//float inMiddle = mrad > 0.5;
warp_65=`ret = lerp(fractal, blured,0.2-(sin(mang+pic*6)*0.5+0.5))*1;
warp_66=`//ret = mrad < 0.5;
warp_67=`
warp_68=`    ret *= 0.9; //or try: ret -= 0.004;
warp_69=`}
comp_1=`sampler sampler_rand03;
comp_2=`float4  texsize_rand03;    // ...it's smart enough to get it from just this.
comp_3=`shader_body
comp_4=`{
comp_5=`    // sample previous frame
comp_6=`    float3 main = tex2D( sampler_main, uv ).xyz;
comp_7=`    ret = main;
comp_8=`    ret *= 1; //gamma;
comp_9=`}
