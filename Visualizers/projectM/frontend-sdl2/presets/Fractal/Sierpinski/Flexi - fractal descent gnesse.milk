MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=0.585
fVideoEchoZoom=1.127
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.005
fWaveScale=0.167
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.817
fWarpScale=0.918
fZoomExponent=0.33077
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.55697
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.950
wave_y=1.000
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=34.560
nMotionVectorsY=28.680
mv_dx=1.000
mv_dy=0.000
mv_l=4.950
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=3
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=2.00309
wavecode_0_smoothing=0.00000
wavecode_0_r=0.000
wavecode_0_g=1.000
wavecode_0_b=0.000
wavecode_0_a=0.100
wave_0_init1=t8 = 1;
wave_0_init2=t1 = q5;
wave_0_per_frame1=t2 = q4;
wave_0_per_frame2=t3 = q5;
wave_0_per_frame3=t4 = q6;
wave_0_per_frame4=
wave_0_per_frame5=t8 = -1;
wave_0_per_point1=t8 = t8+1;
wave_0_per_point2=pi = asin(1)*4;
wave_0_per_point3=
wave_0_per_point4=zz = if(equal(t8,0), 1, -0.5);
wave_0_per_point5=yy = if(equal(t8,0), 0, 0.5*sqrt(3)*sin(t8*pi/3) );
wave_0_per_point6=xx = if(equal(t8,0), 0, 0.5*sqrt(3)*cos(t8*pi/3) );
wave_0_per_point7=
wave_0_per_point8=w = 1;
wave_0_per_point9=s1 = sin(t2*w);
wave_0_per_point10=s2 = sin(t3*w);
wave_0_per_point11=s3 = sin(t4*w);
wave_0_per_point12=c1 = cos(t2*w);
wave_0_per_point13=c2 = cos(t3*w);
wave_0_per_point14=c3 = cos(t4*w);
wave_0_per_point15=
wave_0_per_point16=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_0_per_point17=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_0_per_point18=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_0_per_point19=
wave_0_per_point20=
wave_0_per_point21=zoom = 0.5;
wave_0_per_point22=
wave_0_per_point23=x = 0.5 + (x1)*zoom;
wave_0_per_point24=y = 0.5 + (y1)*zoom;
wave_0_per_point25=
wave_0_per_point26=
wave_0_per_point27=
wave_0_per_point28=r = 1;
wave_0_per_point29=g = 1;
wave_0_per_point30=b= 1;
wavecode_1_enabled=0
wavecode_1_samples=3
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=2.00309
wavecode_1_smoothing=0.00000
wavecode_1_r=0.000
wavecode_1_g=1.000
wavecode_1_b=0.000
wavecode_1_a=0.100
wave_1_init1=t8 = 1;
wave_1_init2=t1 = q5;
wave_1_per_frame1=t2 = q4;
wave_1_per_frame2=t3 = q5;
wave_1_per_frame3=t4 = q6;
wave_1_per_frame4=
wave_1_per_frame5=t8 = -1;
wave_1_per_point1=t8 = t8+1;
wave_1_per_point2=pi = asin(1)*4;
wave_1_per_point3=
wave_1_per_point4=zz = if(equal(t8,0), 1, -0.5);
wave_1_per_point5=yy = if(equal(t8,0), 0, 0.5*sqrt(3)*sin(t8*pi/3 + pi/3) );
wave_1_per_point6=xx = if(equal(t8,0), 0, 0.5*sqrt(3)*cos(t8*pi/3 + pi/3) );
wave_1_per_point7=
wave_1_per_point8=w = 1;
wave_1_per_point9=s1 = sin(t2*w);
wave_1_per_point10=s2 = sin(t3*w);
wave_1_per_point11=s3 = sin(t4*w);
wave_1_per_point12=c1 = cos(t2*w);
wave_1_per_point13=c2 = cos(t3*w);
wave_1_per_point14=c3 = cos(t4*w);
wave_1_per_point15=
wave_1_per_point16=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_1_per_point17=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_1_per_point18=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_1_per_point19=
wave_1_per_point20=
wave_1_per_point21=zoom = 0.5;
wave_1_per_point22=
wave_1_per_point23=x = 0.5 + (x1)*zoom;
wave_1_per_point24=y = 0.5 + (y1)*zoom;
wave_1_per_point25=
wave_1_per_point26=
wave_1_per_point27=
wave_1_per_point28=r = 1;
wave_1_per_point29=g = 1;
wave_1_per_point30=b= 1;
wavecode_2_enabled=0
wavecode_2_samples=3
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=2.00309
wavecode_2_smoothing=0.00000
wavecode_2_r=0.000
wavecode_2_g=1.000
wavecode_2_b=0.000
wavecode_2_a=0.100
wave_2_init1=t8 = 1;
wave_2_init2=t1 = q5;
wave_2_per_frame1=t2 = q4;
wave_2_per_frame2=t3 = q5;
wave_2_per_frame3=t4 = q6;
wave_2_per_frame4=
wave_2_per_frame5=t8 = -1;
wave_2_per_point1=t8 = t8+1;
wave_2_per_point2=pi = asin(1)*4;
wave_2_per_point3=
wave_2_per_point4=zz = if(equal(t8,0), 1, -0.5);
wave_2_per_point5=yy = if(equal(t8,0), 0, 0.5*sqrt(3)*sin(t8*pi/3 + 2*pi/3) );
wave_2_per_point6=xx = if(equal(t8,0), 0, 0.5*sqrt(3)*cos(t8*pi/3 + 2*pi/3) );
wave_2_per_point7=
wave_2_per_point8=w = 1;
wave_2_per_point9=s1 = sin(t2*w);
wave_2_per_point10=s2 = sin(t3*w);
wave_2_per_point11=s3 = sin(t4*w);
wave_2_per_point12=c1 = cos(t2*w);
wave_2_per_point13=c2 = cos(t3*w);
wave_2_per_point14=c3 = cos(t4*w);
wave_2_per_point15=
wave_2_per_point16=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_2_per_point17=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_2_per_point18=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_2_per_point19=
wave_2_per_point20=
wave_2_per_point21=zoom = 0.5;
wave_2_per_point22=
wave_2_per_point23=x = 0.5 + (x1)*zoom;
wave_2_per_point24=y = 0.5 + (y1)*zoom;
wave_2_per_point25=
wave_2_per_point26=
wave_2_per_point27=
wave_2_per_point28=r = 1;
wave_2_per_point29=g = 1;
wave_2_per_point30=b= 1;
wavecode_3_enabled=0
wavecode_3_samples=263
wavecode_3_sep=256
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=0.14390
wavecode_3_smoothing=0.40000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=0.970
wave_3_init1=t8 = -1;
wave_3_per_frame1=t1 = q
wave_3_per_point1=t8 = t8+1;
wave_3_per_point2=pi = asin(1)*4;
wave_3_per_point3=
wave_3_per_point4=xx = if(equal(t8,0), 1, -0.5);
wave_3_per_point5=yy = 0.5*sqrt(3)*sin(t8*pi/3);
wave_3_per_point6=zz = 0.5*sqrt(3)*cos(t8*pi/3);
wave_3_per_point7=
wave_3_per_point8=t2 = time*0.11;
wave_3_per_point9=t3 = time*0.1;
wave_3_per_point10=t4 = time*0.15;
wave_3_per_point11=
wave_3_per_point12=w = 1;
wave_3_per_point13=s1 = sin(t2*w);
wave_3_per_point14=s2 = sin(t3*w);
wave_3_per_point15=s3 = sin(t4*w);
wave_3_per_point16=c1 = cos(t2*w);
wave_3_per_point17=c2 = cos(t3*w);
wave_3_per_point18=c3 = cos(t4*w);
wave_3_per_point19=
wave_3_per_point20=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_3_per_point21=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_3_per_point22=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_3_per_point23=
wave_3_per_point24=
wave_3_per_point25=zoom = .25;
wave_3_per_point26=
wave_3_per_point27=x = 0.5 + (x1)*zoom;
wave_3_per_point28=y = 0.5 + (y1)*zoom;
wave_3_per_point29=
wave_3_per_point30=
wave_3_per_point31=
wave_3_per_point32=r = 1;
wave_3_per_point33=g = 1;
wave_3_per_point34=b= 1;
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.04983
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.45112
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_init1=vx = 0;
shape_0_init2=vy = 0;
shapecode_1_enabled=1
shapecode_1_sides=12
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=92
shapecode_1_x=0.800
shapecode_1_y=0.500
shapecode_1_rad=0.02705
shapecode_1_ang=1.57080
shapecode_1_tex_ang=1.25664
shapecode_1_tex_zoom=3.07268
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=t1 = time - int (time);
shape_1_per_frame2=sample = instance/num_inst;
shape_1_per_frame3=t_abs = sample*3;
shape_1_per_frame4=t_rel = sample-time/5;
shape_1_per_frame5=
shape_1_per_frame6=ampl = 2*t_abs/2 ;
shape_1_per_frame7=
shape_1_per_frame8=k1=sin(time/13);
shape_1_per_frame9=k2=sin(time/12);
shape_1_per_frame10=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;
shape_1_per_frame11=oy = ampl*cos (t_abs*(31+5*k2));
shape_1_per_frame12=oz = -1  ;
shape_1_per_frame13=
shape_1_per_frame14=
shape_1_per_frame15=r = sqr(sin(t_rel*3.4));
shape_1_per_frame16=g = sqr(sin(t_rel));
shape_1_per_frame17=b = sqr (cos(t_rel*1.8));
shape_1_per_frame18=
shape_1_per_frame19=//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;
shape_1_per_frame20=
shape_1_per_frame21=xang = time/9.5;
shape_1_per_frame22=yang = 0*time/7;
shape_1_per_frame23=zang = -time/22;
shape_1_per_frame24=fov = 0.5;
shape_1_per_frame25=
shape_1_per_frame26=
shape_1_per_frame27=// Rotation um x,y,z
shape_1_per_frame28=
shape_1_per_frame29=mx = ox*cos(zang) - oy*sin(zang);
shape_1_per_frame30=my = ox*sin(zang) + oy*cos(zang);
shape_1_per_frame31=
shape_1_per_frame32=ox = mx;
shape_1_per_frame33=oy = my;
shape_1_per_frame34=mx = ox*cos(yang) + oz*sin(yang);
shape_1_per_frame35=mz = - ox*sin(yang) + oz*cos(yang);
shape_1_per_frame36=ox = mx;
shape_1_per_frame37=oz = mz;
shape_1_per_frame38=my = oy*cos(xang) - oz*sin(xang);
shape_1_per_frame39=mz = oy*sin(xang) + oz*cos(xang);
shape_1_per_frame40=oy = my;
shape_1_per_frame41=oz = mz;
shape_1_per_frame42=
shape_1_per_frame43=oz = oz - 6;
shape_1_per_frame44=x = ox*fov/oz +0.5;
shape_1_per_frame45=//x = (x-.5)*0.75 + 0.5;
shape_1_per_frame46=y = oy*fov/oz + 0.5;
shape_1_per_frame47=
shape_1_per_frame48=a=1/mz*.5;
shape_1_per_frame49=//a2=1/mz*.5;
shape_1_per_frame50=//border_a=1/mz*.5;
shape_1_per_frame51=rad=1/mz*.005;
shapecode_2_enabled=1
shapecode_2_sides=3
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=311
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.01000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.62832
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_2_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_2_per_frame3=
shape_2_per_frame4=mx=mx+(.0002*cos(ma));
shape_2_per_frame5=my=my+(.0002*tan(ma));
shape_2_per_frame6=
shape_2_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_2_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_2_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_2_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_2_per_frame11=
shape_2_per_frame12=x=1-mx;
shape_2_per_frame13=y=1-my;
shape_2_per_frame14=
shape_2_per_frame15=ang=(sin(time*.35)+1)*3;
shape_2_per_frame16=//a=(above(bass+mid+treb,.8));
shape_2_per_frame17=pi23=4*asin(1)*.333333333;
shape_2_per_frame18=t1=bass+mid+treb;
shapecode_3_enabled=1
shapecode_3_sides=23
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1024
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10262
shapecode_3_ang=0.43982
shapecode_3_tex_ang=0.62832
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=0.500
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.500
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ma=ma+(above(bass,1)*3.1415*.05*bass);
shape_3_per_frame2=ma=ma-(above(mid,1)*3.1415*.05*mid);
shape_3_per_frame3=
shape_3_per_frame4=mx=mx+(.0001*cos(ma));
shape_3_per_frame5=my=my+(.0001*sin(ma));
shape_3_per_frame6=
shape_3_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_3_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_3_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_3_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_3_per_frame11=
shape_3_per_frame12=x=mx;
shape_3_per_frame13=y=my;
shape_3_per_frame14=rad=(bass+treb)/75;
shape_3_per_frame15=a=(above(bass+mid+treb,.1));
shape_3_per_frame16=r=int(rand(100))/100;
shape_3_per_frame17=g=int(rand(100))/100;
shape_3_per_frame18=b=int(rand(100))/100;
shape_3_per_frame19=r2=int(rand(100))/100;
shape_3_per_frame20=g2=int(rand(100))/100;
shape_3_per_frame21=b2=int(rand(100))/100;
shape_3_per_frame22=r_border=int(rand(100))/100;
shape_3_per_frame23=g_border=int(rand(100))/100;
shape_3_per_frame24=b_border=int(rand(100))/100;
per_frame_1=vvb = max(0,min(1,vvb));
per_frame_2=vvm = max(0,min(1,vvm));
per_frame_3=vvt = max(0,min(1,vvt));
per_frame_4=vb = vb*0.85 + (1-vb)*pow(bass,2)*0.01;
per_frame_5=vvb = vvb*0.95 + (1-vvb)*vb*0.2;
per_frame_6=vm = vm*0.85 + (1-vm)*pow(mid,2)*0.01;
per_frame_7=vvm = vvm*0.95 + (1-vvm)*vm*0.2;
per_frame_8=vt = vt*0.85 + (1-vt)*pow(treb,2)*0.01;
per_frame_9=vvt = vvt*0.95 + (1-vvt)*vt*0.2;
per_frame_10=v=0.03*(60/fps);
per_frame_11=d = 0;//v*0.35;
per_frame_12=bb = bb + vvb*v - d;
per_frame_13=mm = mm + vvm*v - d;
per_frame_14=tt = tt + vvt*v - d;
per_frame_15=zz = -0.5;
per_frame_16=yy = 0;
per_frame_17=xx = 0.5*sqrt(3);
per_frame_18=zom = .5;
per_frame_19=s1 = sin(tt);
per_frame_20=s2 = sin(mm);
per_frame_21=s3 = sin(bb);
per_frame_22=c1 = cos(tt);
per_frame_23=c2 = cos(mm);
per_frame_24=c3 = cos(bb);
per_frame_25=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
per_frame_26=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
per_frame_27=q11 = 0.5 + (x1)*zom;;
per_frame_28=q12 = 0.5 + (y1)*zom;
per_frame_29=zz = -0.5;
per_frame_30=pi = asin(1)*4;
per_frame_31=yy = 0.5*sqrt(3)*sin(pi/3);
per_frame_32=xx = 0.5*sqrt(3)*cos(pi/3);
per_frame_33=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
per_frame_34=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
per_frame_35=q13 = 0.5 + (x1)*zom;;
per_frame_36=q14 = 0.5 + (y1)*zom;
per_frame_37=zz = 1;
per_frame_38=yy = 0;
per_frame_39=xx = 0;
per_frame_40=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
per_frame_41=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
per_frame_42=q15 = 0.5 + (x1)*zom;;
per_frame_43=q16 = 0.5 + (y1)*zom;
per_frame_44=zz = -0.5;
per_frame_45=pi = -asin(1)*4;
per_frame_46=yy = 0.5*sqrt(3)*sin(pi/3);
per_frame_47=xx = 0.5*sqrt(3)*cos(pi/3);
per_frame_48=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
per_frame_49=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
per_frame_50=q17 = 0.5 + (x1)*zom;;
per_frame_51=q18 = 0.5 + (y1)*zom;
per_frame_52=q1 = (tt-bb)*8;
per_frame_53=zoom = 1;
per_frame_54=warp = 0;
per_frame_55=bbb = bbb*0.94 + (bass-treb)*0.4;
per_frame_56=monitor = bbb;
per_frame_57=q2 = bbb*0.01;
per_frame_58=w = -0.555;
per_frame_59=q3 = sin(w);
per_frame_60=q4 = cos(w);
per_frame_61=w = bb-tt;
per_frame_62=q5 = sin(w);
per_frame_63=q6 = cos(w);
per_frame_64=q7 = (bb-mm);
per_frame_65=q8 = (tt-mm);
per_frame_66=monitor = q7;
warp_1=`shader_body
warp_2=`{
warp_3=`float s = 2;
warp_4=`float2 uv1 = (uv-0.5)*s + float2(q11,q12) + 0.004;
warp_5=`float2 uv2 = (uv-0.5)*s + float2(q13,q14) + 0.004;
warp_6=`float2 uv3 = (uv-0.5)*s + float2(q15,q16) + 0.004;
warp_7=`float2 uv4 = (uv-0.5)*s + float2(q17,q18) + 0.004;
warp_8=`float c1 = tex2D(sampler_fc_main, uv1).x;
warp_9=`float c2 = tex2D(sampler_fc_main, uv2).x;
warp_10=`float c3 = tex2D(sampler_fc_main, uv3).x;
warp_11=`float c4 = tex2D(sampler_fc_main, uv4).x;
warp_12=`
warp_13=`
warp_14=`ret.x = max(max(c1,c2),max(c3,c4))*1.1 - 0.00;
warp_15=`ret.x=1-ret.x;
warp_16=`//ret = 0;
warp_17=`
warp_18=`float2 zoom =1.68 + q2;
warp_19=`float2 c = float2(0.36,0.72);
warp_20=`
warp_21=` float2 my_uv = (uv_orig-0.5)*zoom;
warp_22=` my_uv = float2(my_uv.x*my_uv.x - my_uv.y*my_uv.y, 2*my_uv.x*my_uv.y) + c; // u -> u^2 + c
warp_23=`
warp_24=`ret.y = tex2D(sampler_fc_main, my_uv).y + tex2D(sampler_fc_main, 0.5+ (uv-0.5)*4).z;
warp_25=`ret.y=1-ret.y;
warp_26=`
warp_27=`ret.z = tex2D(sampler_fc_main, (uv-0.5)*3 + float2(1.4,0)).y*1.2;
warp_28=`
warp_29=`float si = q3; // sin(w)
warp_30=`float co = q4; // cos(w)
warp_31=`float2 scale = 1.05;
warp_32=`float2 uv5 = (uv-0.5)*aspect.xy;
warp_33=`       uv5 = scale*float2( co*uv5.x - si*uv5.y, si*uv5.x + co*uv5.y); // rotation
warp_34=`       uv5 = 0.5 + uv5*aspect.zw + float2(-0.03,0.03);
warp_35=`
warp_36=`ret.z += tex2D(sampler_fc_main, uv5).z*1.01 - 0.004;
warp_37=`ret.z=1-ret.z;
warp_38=`
warp_39=`
warp_40=`}
comp_1=`shader_body
comp_2=`{
comp_3=`float2 uvo = uv;
comp_4=`float2 mirror_uv = frac(abs(uv*2-float2(1,1)));
comp_5=`mirror_uv = mirror_uv.yx;
comp_6=`mirror_uv = float2(0,1) + mirror_uv*float2(1,-1);
comp_7=`    float2 d = texsize.zw*3;
comp_8=`    float3 dx = ( 2*GetBlur1(mirror_uv+float2(1,0)*d)-2*GetBlur1(mirror_uv-float2(1,0)*d) );
comp_9=`    float3 dy = ( 2*GetBlur1(mirror_uv+float2(0,1)*d)-2*GetBlur1(mirror_uv-float2(0,1)*d) );
comp_10=`
comp_11=`mirror_uv += float2(dx.x,dy.x)*texsize.zw*4;
comp_12=`
comp_13=`// colors
comp_14=`float3 aura = pow(hue_shader,4)*1.4;
comp_15=`float3 glow = 3;
comp_16=`float3 blob = float3(1,0.75,0)*0;
comp_17=`
comp_18=`//re-arranging the red channel
comp_19=`
comp_20=`float2 uv_red = mirror_uv;
comp_21=`ret = lerp(ret,1,(GetBlur1(uv_red).x)*(1-GetBlur2(uv_red).x)*aura);
comp_22=`ret = lerp(blob, ret, GetPixel(uv_red).x);
comp_23=`ret += (1-GetPixel(uv_red).x)*GetBlur1(uv_red).x*glow;
comp_24=`
comp_25=`
comp_26=`dx = ( 2*GetBlur1(mirror_uv+float2(1,0)*d)-2*GetBlur1(mirror_uv-float2(1,0)*d) );
comp_27=`dy = ( 2*GetBlur1(mirror_uv+float2(0,1)*d)-2*GetBlur1(mirror_uv-float2(0,1)*d) );
comp_28=`float2 dz = +float2(-dx.y,dy.y)*0.2;
comp_29=`//ret = lerp(float3(1,1,0),float3(1,0,0),uv.x)*GetPixel(uv).y;
comp_30=`//ret = 0;
comp_31=`float3 bg = lerp(float3(1,0.7,0.2),float3(0.15,0,0.5),mirror_uv.x*0.8 - mirror_uv.y + 0.75+dz.x+dz.y-0.1)*(GetPixel(mirror_uv).y);
comp_32=`ret = lerp(ret,1,bg);
comp_33=`
comp_34=`
comp_35=`mirror_uv = uvo;
comp_36=`d = texsize.zw;
comp_37=`dx = ( 2*GetPixel(mirror_uv+float2(1,0)*d)-2*GetPixel(mirror_uv-float2(1,0)*d) );
comp_38=`dy = ( 2*GetPixel(mirror_uv+float2(0,1)*d)-2*GetPixel(mirror_uv-float2(0,1)*d) );
comp_39=`dz = float2(dx.z,dy.z)*texsize.zw*128;
comp_40=`
comp_41=`//ret = lerp(ret,1,1-GetPixel(uvo+dz).z) ;
comp_42=`}
