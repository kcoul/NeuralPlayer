MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=0.107
fZoomExponent=4.10046
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.000
ib_r=1.000
ib_g=1.000
ib_b=1.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=branch=int(rand(2));
wave_0_per_point2=
wave_0_per_point3=//base
wave_0_per_point4=wx=if(equal(sc,0),.5,wx);
wave_0_per_point5=wy=if(equal(sc,0),0,wy);
wave_0_per_point6=
wave_0_per_point7=wx=if(equal(sc,1),.5,wx);
wave_0_per_point8=wy=if(equal(sc,1),.1,wy);
wave_0_per_point9=
wave_0_per_point10=//calculate previous branch length
wave_0_per_point11=d=if(below(sc,2),.3,.7*d);
wave_0_per_point12=
wave_0_per_point13=//angle
wave_0_per_point14=wainc=if(equal(branch,1),.2+sin(time),-.2);
wave_0_per_point15=
wave_0_per_point16=wa=if(below(sc,2),3.1415927*.5,wa+wainc);
wave_0_per_point17=
wave_0_per_point18=//branches
wave_0_per_point19=wx=if(above(sc,2),wx+cos(wa)*d,wx);
wave_0_per_point20=wy=if(above(sc,2),wy+sin(wa)*d,wy);
wave_0_per_point21=
wave_0_per_point22=//sample count
wave_0_per_point23=sc=if(equal(sc,11),0,sc+1);
wave_0_per_point24=
wave_0_per_point25=a=if(below(sc,2),0,.1);
wave_0_per_point26=
wave_0_per_point27=x=wx;
wave_0_per_point28=y=wy;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=branch=int(rand(2));
wave_1_per_point2=
wave_1_per_point3=//base
wave_1_per_point4=wx=if(equal(sc,0),.5,wx);
wave_1_per_point5=wy=if(equal(sc,0),1,wy);
wave_1_per_point6=
wave_1_per_point7=wx=if(equal(sc,1),.5,wx);
wave_1_per_point8=wy=if(equal(sc,1),.9,wy);
wave_1_per_point9=
wave_1_per_point10=//calculate previous branch length
wave_1_per_point11=d=if(below(sc,2),.3,.7*d);
wave_1_per_point12=
wave_1_per_point13=//angle
wave_1_per_point14=wainc=if(equal(branch,1),.2+sin(time),-.2);
wave_1_per_point15=
wave_1_per_point16=wa=if(below(sc,2),3.1415927*1.5,wa+wainc);
wave_1_per_point17=
wave_1_per_point18=//branches
wave_1_per_point19=wx=if(above(sc,2),wx+cos(wa)*d,wx);
wave_1_per_point20=wy=if(above(sc,2),wy+sin(wa)*d,wy);
wave_1_per_point21=
wave_1_per_point22=//sample count
wave_1_per_point23=sc=if(equal(sc,11),0,sc+1);
wave_1_per_point24=
wave_1_per_point25=a=if(below(sc,2),0,.1);
wave_1_per_point26=
wave_1_per_point27=x=wx;
wave_1_per_point28=y=wy;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=branch=int(rand(2));
wave_2_per_point2=
wave_2_per_point3=//base
wave_2_per_point4=wx=if(equal(sc,0),0,wx);
wave_2_per_point5=wy=if(equal(sc,0),.5,wy);
wave_2_per_point6=
wave_2_per_point7=wx=if(equal(sc,1),.1,wx);
wave_2_per_point8=wy=if(equal(sc,1),.5,wy);
wave_2_per_point9=
wave_2_per_point10=//calculate previous branch length
wave_2_per_point11=d=if(below(sc,2),.3,.7*d);
wave_2_per_point12=
wave_2_per_point13=//angle
wave_2_per_point14=wainc=if(equal(branch,1),.25+cos(time),-.25);
wave_2_per_point15=
wave_2_per_point16=wa=if(below(sc,2),3.1415927*2,wa+wainc);
wave_2_per_point17=
wave_2_per_point18=//branches
wave_2_per_point19=wx=if(above(sc,2),wx+cos(wa)*d,wx);
wave_2_per_point20=wy=if(above(sc,2),wy+sin(wa)*d,wy);
wave_2_per_point21=
wave_2_per_point22=//sample count
wave_2_per_point23=sc=if(equal(sc,11),0,sc+1);
wave_2_per_point24=
wave_2_per_point25=a=if(below(sc,2),0,.1);
wave_2_per_point26=
wave_2_per_point27=x=wx;
wave_2_per_point28=y=wy;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=branch=int(rand(2));
wave_3_per_point2=
wave_3_per_point3=//base
wave_3_per_point4=wx=if(equal(sc,0),1,wx);
wave_3_per_point5=wy=if(equal(sc,0),.5,wy);
wave_3_per_point6=
wave_3_per_point7=wx=if(equal(sc,1),.9,wx);
wave_3_per_point8=wy=if(equal(sc,1),.5,wy);
wave_3_per_point9=
wave_3_per_point10=//calculate previous branch length
wave_3_per_point11=d=if(below(sc,2),.3,.7*d);
wave_3_per_point12=
wave_3_per_point13=//angle
wave_3_per_point14=wainc=if(equal(branch,1),.25+cos(time),-.25);
wave_3_per_point15=
wave_3_per_point16=wa=if(below(sc,2),3.1415927*1,wa+wainc);
wave_3_per_point17=
wave_3_per_point18=//branches
wave_3_per_point19=wx=if(above(sc,2),wx+cos(wa)*d,wx);
wave_3_per_point20=wy=if(above(sc,2),wy+sin(wa)*d,wy);
wave_3_per_point21=
wave_3_per_point22=//sample count
wave_3_per_point23=sc=if(equal(sc,11),0,sc+1);
wave_3_per_point24=
wave_3_per_point25=a=if(below(sc,2),0,.1);
wave_3_per_point26=
wave_3_per_point27=x=wx;
wave_3_per_point28=y=wy;
shapecode_0_enabled=1
shapecode_0_sides=3
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.46815
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.63904
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.500
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ang=time*.1;
shape_0_per_frame2=
shape_0_per_frame3=sides=int(abs(sin(time*.5)*7));
shapecode_1_enabled=1
shapecode_1_sides=3
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.02743
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=0.050
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ang=time*.1;
shape_1_per_frame2=
shape_1_per_frame3=r=.7+(sin(time)*.3);
shape_1_per_frame4=g=.7+(cos(time)*.3);
shape_1_per_frame5=b=.7+(sin(time+.12)*.3);
shape_1_per_frame6=
shape_1_per_frame7=rad=rad+(treb_att*bass_att*.5);
shape_1_per_frame8=x=.5+(sin(time)*.5);
shapecode_2_enabled=1
shapecode_2_sides=5
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.02508
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.050
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ang=time*.25;
shape_2_per_frame2=
shape_2_per_frame3=g=.7+(sin(time)*.3);
shape_2_per_frame4=b=.7+(cos(time)*.3);
shape_2_per_frame5=r=.7+(sin(time+.12)*.3);
shape_2_per_frame6=
shape_2_per_frame7=r2=.7+(sin(time)*.3);
shape_2_per_frame8=g2=.7+(cos(time)*.3);
shape_2_per_frame9=b2=.7+(sin(time+.12)*.3);
shape_2_per_frame10=
shape_2_per_frame11=rad=rad+(treb_att*bass_att*.5);
shape_2_per_frame12=y=.5+(sin(time)*.25);
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=2.66717
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.60804
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=0.100
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.010
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=//begin beat code
per_frame_25=volume = 0.3*(bass+mid);
per_frame_26=beatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);
per_frame_27=lastbeat = lastbeat + equal(lastbeat,0)*time;
per_frame_28=meanbass_att = 0.05*(meanbass_att*19 + bass_att);
per_frame_29=peakbass_att = max(bass_att,peakbass_att);
per_frame_30=beat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));
per_frame_31=beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_32=//Adjust responsiveness: To increase responsiveness, set the "0.96 and "0.996" on the next line to slightly lower values. Higher values decrease responsiveness.
per_frame_33=peakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);
per_frame_34=lastbeat = beat*time + (1-beat)*lastbeat;
per_frame_35=peakbass_att = max(peakbass_att,1.1*meanbass_att);
per_frame_36=//end beat code
per_frame_37=
per_frame_38=zoom = 1;
per_frame_39=decay = 1;
per_frame_40=warp = 0;
per_frame_41=wave_a = 0;
per_frame_42=
per_frame_43=tic = min(time-tin,.1);
per_frame_44=tin = time;
per_frame_45=
per_frame_46=q2 = 1;
per_frame_47=
per_frame_48=q1=1;
per_frame_49=vol = vol + ((alt + bass + mid)/3-vol)*tic*1;
per_frame_50=q5 = vol*vol*vol*2;
per_frame_51=
per_frame_52=
per_frame_53=q8 = sin(time)*.5;
per_frame_54=q9 = sin(time*.75)*.5;
per_frame_55=
per_frame_56=sw = abs(sw - beat);
per_frame_57=an = an + tic*.5*(1-2*sw);
per_frame_58=
per_frame_59=
per_frame_60=q7 = 1+(pow(q8,2) + pow(q9,2))*1;
per_frame_61=q10 = sin(an);
per_frame_62=q11 = cos(an);
per_frame_63=
per_frame_64=sp = sp + tic*vol*vol*.5;
per_frame_65=
per_frame_66=q12 = sp;
per_frame_67=
per_frame_68=monitor = q12;
per_pixel_1=//zoom = pow(rad,2)+.01;
warp_1=`
warp_2=`shader_body
warp_3=`{
warp_4=`
warp_5=`ret.xyz = tex2D(sampler_main, uv_orig).xyz*float3(.97,1,.97) - float3(.03,0,.03);
warp_6=`
warp_7=`ret.z += GetBlur1(uv_orig).z*.45;
warp_8=`ret.x += GetBlur1(uv_orig).z*.05 + GetBlur3(uv_orig).z*.05;
warp_9=`ret.z -= ret.x;
warp_10=`
warp_11=`float2 pixelsize = texsize.zw;
warp_12=`ret.y = saturate(tex2D( sampler_pw_main,uv_orig).y);
warp_13=`
warp_14=`float1 conway = tex2D( sampler_pw_main, uv_orig + float2(-1,-1)*pixelsize).y;
warp_15=`       conway += tex2D( sampler_pw_main, uv_orig + float2(0,-1)*pixelsize).y;
warp_16=`       conway += tex2D( sampler_pw_main, uv_orig + float2(1,-1)*pixelsize).y;
warp_17=`       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,0)*pixelsize).y;
warp_18=`       conway += tex2D( sampler_pw_main, uv_orig + float2(1,0)*pixelsize).y;
warp_19=`       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,1)*pixelsize).y;
warp_20=`       conway += tex2D( sampler_pw_main, uv_orig + float2(0,1)*pixelsize).y;
warp_21=`       conway += tex2D( sampler_pw_main, uv_orig + float2(1,1)*pixelsize).y;
warp_22=`
warp_23=`float1 test = q5*(1-GetBlur1(uv_orig).y)*(1-GetBlur2(uv_orig).y)*(1-GetBlur3(uv_orig).y);
warp_24=`
warp_25=`conway -= tex2D( sampler_pw_main, uv_orig).x;
warp_26=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_27=`                      ((uv.xyy*q27
warp_28=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_29=`                      ).xyz*
warp_30=`                      float3(1,1,0)*0.05 + 
warp_31=`                      time*float3(0,0,1)*q29
warp_32=`                     );
warp_33=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_34=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_35=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_36=`
warp_37=`
warp_38=`if (conway > 0) {
warp_39=`if (saturate(ret.y) == 0) {
warp_40=`ret.y = floor(test*1.8)*q1;
warp_41=`}
warp_42=`}
warp_43=`
warp_44=`ret.y -= ret.x;
warp_45=`
warp_46=`ret.xyz -= 1-q2;
warp_47=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 d = texsize.zw*4;
comp_4=`    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_5=`    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_6=`float2 uv_bg = uv - float2(dx.y,dy.y)*texsize.zw*16;
comp_7=`ret = (GetBlur2(uv_bg)-GetBlur1(uv_bg)*1+GetPixel(uv_bg)*0.9 + (-dx.y + dy.y)*0.4).y*0.8*float3(1,1.1,1.2);
comp_8=`
comp_9=`float2 uv_m = uv - float2(dx.x,dy.x)*texsize.zw*8;
comp_10=`ret = lerp(ret, 2*float3(0,0.5,1), GetBlur3(uv_m - float2(dx.y,dy.y)*0.4).x*0.4);
comp_11=`ret = lerp(ret, 2*float3(0.5,1,1), GetBlur2(uv_m - float2(dx.y,dy.y)*0.2).x*0.4);
comp_12=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_13=`                      ((uv_m.xyy*q28
comp_14=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_15=`                      ).xyz*
comp_16=`                      float3(1,1,0)*0.05 + 
comp_17=`                      time*float3(0,0,1)*q31
comp_18=`                     );
comp_19=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_20=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_21=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_22=`ret = lerp(ret, 2*float3(1,1,0.8), GetBlur1(uv_m - float2(dx.y,dy.y)*0.1).x*0.2);
comp_23=`//ret = lerp(ret, float3(0.5,0,1), GetPixel(uv_m).x*0.4);
comp_24=`
comp_25=`ret = 1-ret;
comp_26=`}
