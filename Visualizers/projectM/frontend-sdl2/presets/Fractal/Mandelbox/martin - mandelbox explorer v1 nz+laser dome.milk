MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.958
fWaveSmoothing=0.450
fWaveParam=0.000
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=1.320
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.200
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.250
ib_a=1.000
nMotionVectorsX=25.600
nMotionVectorsY=9.600
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=282
wavecode_0_sep=20
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=3.91581
wavecode_0_smoothing=0.10000
wavecode_0_r=0.200
wavecode_0_g=0.300
wavecode_0_b=1.000
wavecode_0_a=0.600
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=0.000
wavecode_2_g=0.200
wavecode_2_b=0.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.090
shapecode_0_y=0.900
shapecode_0_rad=0.22437
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.76002
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.600
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.260
shapecode_1_y=0.200
shapecode_1_rad=0.39317
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=6.19589
shapecode_1_r=0.000
shapecode_1_g=0.550
shapecode_1_b=0.500
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.400
shapecode_1_b2=0.400
shapecode_1_a2=0.070
shapecode_1_border_r=0.300
shapecode_1_border_g=0.700
shapecode_1_border_b=0.800
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=44
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.503
shapecode_2_y=0.500
shapecode_2_rad=0.03886
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.60986
shapecode_2_r=1.000
shapecode_2_g=0.100
shapecode_2_b=0.000
shapecode_2_a=0.900
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.500
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.49981
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.200
shapecode_3_border_g=0.700
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_init_1=index2 = int(rand(8));
per_frame_init_2=px = int(rand(100));
per_frame_init_3=py = int(rand(100));
per_frame_init_4=pz = int(rand(100));
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;//q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=dec_med = pow (0.85, 30/fps);
per_frame_26=dec_slow = pow (0.95, 30/fps);
per_frame_27=beat = mid;
per_frame_28=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_29=is_beat = above(beat, 1.2*avg) * above (time, t0+.1);
per_frame_30=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_31=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_32=index = (index + is_beat) %32;
per_frame_33=index2 = (index2 + is_beat*bnot(index))%8;
per_frame_34=
per_frame_35=spb = min(t0-t0a + .01,2); t0a = t0;
per_frame_36=spb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);
per_frame_37=mindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));
per_frame_38=sdev = if(is_beat,sdev * .96 + .04*pow(mindev+.01,2),sdev);
per_frame_39=
per_frame_40=q20 = avg;
per_frame_41=q21 = beat;
per_frame_42=q22 = peak;
per_frame_43=q24 = is_beat;
per_frame_44=q27 = index;
per_frame_45=q28 = index2;
per_frame_46=puls = puls*dec_med + (1-dec_med)*q24*16*bnot(index%4);
per_frame_47=q23 = min(1,puls);
per_frame_48=
per_frame_49=test = test + above(beat,avg*1.2) * (beat-avg)/fps*30*4;
per_frame_50=tic = q27/2;
per_frame_51=
per_frame_52=l1angz = tic*0+ test*33;
per_frame_53=l1angy = (1+sin(2*test))*1.6/2;
per_frame_54=sw1 = (q28%2) * above(avg,1);
per_frame_55=l1angy = l1angy-1/q22*sw1+ (1-sw1)*q22/8;
per_frame_56=l1angy = l1angy+above(avg,1.2)*2*sin(q22);
per_frame_57=
per_frame_58=q10 = cos(l1angz)*sin(l1angy);
per_frame_59=q11 = sin(l1angz)*sin(l1angy);
per_frame_60=q12 = abs(cos(l1angy)*cos(l1angy));
per_frame_61=
per_frame_62=trig = q24 * bnot(index%2);
per_frame_63=ran1 = if (trig,int(rand(100))/100-.5, ran1);
per_frame_64=ran2 = if (trig,int(rand(100))/100-.5, ran2);
per_frame_65=q13 = ran1/2;
per_frame_66=q14 = ran2/2;
per_frame_67=
per_frame_68=pp =  4*avg*q13/fps;
per_frame_69=pp = 1/fps;
per_frame_70=crit= int(q27/8);
per_frame_71=px = px + equal(crit,0)*pp;
per_frame_72=py = py + equal(crit,1)*pp;
per_frame_73=pz = pz + equal(crit,2)*pp;
per_frame_74=
per_frame_75=trel = trel + 1/spb_/fps;
per_frame_76=jump = int(trel) * below(sdev,.004*avg);
per_frame_77=
per_frame_78=q15 = px+jump;
per_frame_79=q16 = py+jump;
per_frame_80=q17 = pz+jump;
per_frame_81=
per_frame_82=q30 = above(q28,5);
per_frame_83=monitor = avg;
per_frame_84=
per_frame_85=q29 = q22/16*(above(q22,1.5)+.8-avg)+(sin(time/5)-.8)*.1;
per_frame_86=
per_frame_87=zoom = 1;
per_frame_88=warp = 0.0; rot = 0;
per_frame_89=dx = 0;
per_frame_90=dy = -.02;
per_frame_91=
per_frame_92=bb = bb*0.99 + bass*0.02;
per_frame_93=mm = mm*0.99 + mid*0.02;
per_frame_94=tt = tt*0.99 + treb*0.02;
per_frame_95=
per_frame_96=mx = max(max(bb,mm),tt);
per_frame_97=mn = min(min(bb,mm),tt);
per_frame_98=
per_frame_99=h1 = (bb-mn)/(mx-mn);
per_frame_100=h2 = (mm-mn)/(mx-mn);
per_frame_101=h3 = (tt-mn)/(mx-mn);
per_frame_102=v = 0.2/fps;
per_frame_103=bm = bm + (h1-h2)*v;
per_frame_104=mt = mt + (h2-h3)*v;
per_frame_105=bt = bt + (h1-h3)*v;
per_frame_106=w = bm;
per_frame_107=q3 = sin(w)*4;
per_frame_108=q4 = cos(w);
per_frame_109=q5 = mt*2;
per_frame_110=q6 = bt*2;
per_frame_111=q30=(bass+treb+mid)*2;
warp_1=`float dist, struc; float2 uv0, uv1; float3 box;
warp_2=`static const float3x3 RotMat = float3x3(q20,q21,q22,q23,q24,q25,q26,q27,q28);
warp_3=`static const float3 CamPos = float3(q4,q5,q6);
warp_4=`static const float myzoom = q7,  res = q31, res2 = 64, limit = 20;
warp_5=`static const float sustain = .98 - q14*2, change = q14;
warp_6=`
warp_7=`float2 fstep2 (float2 xy) {return 1.0/res*round(res*xy);}
warp_8=`
warp_9=`float GetDist(float2 uvi) {float2 tmp; tmp = fstep2(tex2D (sampler_pw_main, uvi).gb); 
warp_10=`  return pow(1-(tmp.y + 1.0/res2*(tmp.x-.505)),1/q30);}
warp_11=`
warp_12=`float2 PutDist(float x) {float tmp; x = pow(x,q30);   tmp = fstep2(1-x);
warp_13=`  return (float2(res2*((1-x)-tmp)+.495,tmp));}
warp_14=`
warp_15=`float MinDist (float2 uvi) {float tmp; float4 nb; float2 pix;
warp_16=`  pix = texsize.zw*(1+length(uvi-.5)*3);
warp_17=`  tmp = GetDist(uvi);
warp_18=`  nb.x = GetDist(uvi+pix*float2(-1,-1));  nb.y = GetDist(uvi+pix*float2(1,-1));
warp_19=`  nb.z = GetDist(uvi+pix*float2(1,1));   nb.w = GetDist(uvi+pix*float2(-1,1));
warp_20=`  tmp = min(tmp,min(min(min(nb.x, nb.y),nb.z),nb.w)) ;
warp_21=`  nb.x = GetDist(uvi+pix*float2(0,-1));  nb.y = GetDist(uvi+pix*float2(1,0));
warp_22=`  nb.z = GetDist(uvi+pix*float2(0,1));   nb.w = GetDist(uvi+pix*float2(-1,0));
warp_23=`  tmp = min(tmp,min(min(min(nb.x, nb.y),nb.z),nb.w)) ;
warp_24=`  return tmp;}
warp_25=`
warp_26=`float3 Get1 (float2 uvi) {float3 tmp; float2 pix;
warp_27=`  tmp = GetBlur1(uvi)*3;
warp_28=`  return lerp (GetPixel(uvi),tmp/3,change*4);}
warp_29=`
warp_30=`float3 mbox (float3 uvi) {float3 zz, zz0; float tmp, li;
warp_31=`  zz = uvi; zz0 = zz;
warp_32=`  for (int n = 0; n <= 7; n++) {
warp_33=`    zz = 2.0*clamp(zz,-1,1)-zz;  tmp = dot(zz,zz);
warp_34=`    if (tmp <= 0.25) {zz *= 4;} else if (tmp <= 1) {zz /= pow(tmp,1);}
warp_35=`    zz = 2.6*zz + zz0;}
warp_36=`  return zz;}
warp_37=`
warp_38=`shader_body {
warp_39=`uv = (uv-.5)*q13 + .5;
warp_40=`uv1 = (uv-.5)*aspect.xy;
warp_41=`float3 noise = frac(8*tex2D (sampler_noise_lq,uv+rand_frame.yz)); 
warp_42=`
warp_43=`dist = noise.r;
warp_44=`if (noise.g > 0.2) {dist = MinDist(uv+.003*(noise.zy-.5)) + .005*(noise.r-.4)*abs(noise.b-.5);}
warp_45=`dist = min(dist,GetDist(uv));
warp_46=`
warp_47=`float3 uv2 = mul(float3(uv1*dist,dist-.02)/myzoom,RotMat)+CamPos;
warp_48=`uv2 = (frac(uv2/8.0+.5)-.5)*8.0;
warp_49=`box = mbox (uv2);
warp_50=`float len = (length(box));
warp_51=`struc = length(box.zy) /limit;
warp_52=`
warp_53=`if ((dist <= GetDist(uv)) && (len < limit) && (dist > 0.005)){
warp_54=` ret.r = (1-sustain)*struc+sustain*(Get1(uv).r); ret.gb=  PutDist(dist); } 
warp_55=` else {ret = tex2D(sampler_pc_main,uv_orig)*float3(sustain,1,1)-float3(0,0,change);} 
warp_56=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_57=`                      ((uv2.xyy*q27
warp_58=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_59=`                      ).xyz*
warp_60=`                      float3(1,1,0)*0.05 + 
warp_61=`                      time*float3(0,0,1)*q29
warp_62=`                     );
warp_63=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_64=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_65=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_66=`}
comp_1=`#define sat saturate
comp_2=`static const float2 pix = texsize.zw;
comp_3=`float glow, tmp, lamp, dist, bdist, b2dist, dist_c;
comp_4=`float2 dz, uv1, uv3;
comp_5=`static const float3 CamPos = float3(q4,q5,q6);
comp_6=`static const float myzoom = q7;
comp_7=`static const float3x3 RotMat = float3x3(q20,q21,q22,q23,q24,q25,q26,q27,q28);
comp_8=`static const float3 col_back = lerp(float3(0,0.4,1), float3(1,0.4,0),rand_preset.x>=0.8);
comp_9=`static const float3 col_struc =  float3(1,.7,.3) + .2*slow_roam_sin;
comp_10=`static float2 center = float2 (q1,q2);
comp_11=`
comp_12=`float3 GetBlurX (float2 uvi, float x) {return lerp (GetPixel(uvi), GetBlur1(uvi), x);}
comp_13=`float GetDist(float2 uvi)   {return 1-GetPixel(uvi).b;}
comp_14=`float GetDistB(float2 uvi)  {return 1-GetBlur1(uvi).b;}
comp_15=`float GetDistB2(float2 uvi) {return 1-GetBlur2(uvi).b;}
comp_16=`
comp_17=`float MinDistB (float2 uvi) {float tmp; float4 nb; //##nicht ideal
comp_18=`  tmp = GetDist(uvi);
comp_19=`  tmp = min(tmp,GetDistB2(uvi)) ;
comp_20=`  return tmp;}
comp_21=`
comp_22=`shader_body {uv1 = (uv-center)*aspect.xy;
comp_23=`//Glow
comp_24=`float3 uv2 = mul(float3((uv-.5)*MinDistB(uv),MinDistB(uv))/myzoom,RotMat)+CamPos;
comp_25=`glow = pow (sat(tex2D (sampler_noise_hq,.02*uv2).r-.5)*2,2);
comp_26=`uv += .002*glow*tex2D (sampler_noise_mq,uv/2+float2(0,time/4));
comp_27=`
comp_28=`dist = MinDistB(uv);
comp_29=`bdist = lerp(dist,GetDistB(uv),.2);
comp_30=`b2dist= lerp(dist,GetDistB(uv),1);;
comp_31=`dist_c = clamp(GetDistB2 (center),.02,.5); //center distance
comp_32=`
comp_33=`float focus = sat(abs(b2dist-dist_c)*3);
comp_34=`float struc = GetBlurX(uv,focus).r;
comp_35=`
comp_36=`ret = pow(struc,1.5)* (.1+pow(1-focus,.8) *lerp(dist,1-dist,q18)) * col_struc;
comp_37=`
comp_38=`//Glow
comp_39=`glow *=  (.8+ .1/tex3D (sampler_noisevol_lq,(uv2*2)));
comp_40=`ret += saturate(exp(-4*max(struc,bdist))) * float3(glow,0,0);
comp_41=`
comp_42=`//distant light
comp_43=`ret += bdist*bdist*col_back *q19;
comp_44=`
comp_45=`//Lamp
comp_46=`uv3 = uv1; 
comp_47=`lamp = saturate(1-4*length(uv3))*struc*saturate(1-2*bdist)*1.6;
comp_48=`ret += (1-lum(ret))*lamp*float3(.65,.75,1) ;
comp_49=`
comp_50=`ret = 1-exp((-1.6)*ret);
comp_51=`}
comp_52=`
comp_53=`//-------------------------------------------
comp_54=`//Written by martin
comp_55=`
