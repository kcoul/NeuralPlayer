MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.958
fWaveSmoothing=0.450
fWaveParam=0.000
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=1.320
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.100
ob_b=1.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=25.600
nMotionVectorsY=9.600
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=132
wavecode_0_sep=20
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=0.48454
wavecode_0_smoothing=0.10000
wavecode_0_r=1.000
wavecode_0_g=0.000
wavecode_0_b=0.200
wavecode_0_a=1.000
wave_0_per_point1=x = sample; y = value1 + 0.3;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=0.000
wavecode_2_g=0.200
wavecode_2_b=0.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.090
shapecode_0_y=0.900
shapecode_0_rad=0.22437
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.76002
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.600
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.260
shapecode_1_y=0.200
shapecode_1_rad=0.39317
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=6.19589
shapecode_1_r=0.000
shapecode_1_g=0.550
shapecode_1_b=0.500
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.400
shapecode_1_b2=0.400
shapecode_1_a2=0.070
shapecode_1_border_r=0.300
shapecode_1_border_g=0.700
shapecode_1_border_b=0.800
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.803
shapecode_2_y=0.500
shapecode_2_rad=0.31400
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.49332
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=0.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.500
shapecode_2_border_a=1.000
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.49981
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.200
shapecode_3_border_g=0.700
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_init_1=
per_frame_init_2=//******** INITIALIZATION *********
per_frame_init_3=//---------- some global vars, do not change -------------
per_frame_init_4=avg = 0.01;
per_frame_init_5=q7 = .15; //MyZoom
per_frame_init_6=q8 =  0.1 + rand(1)*0.9; //fractal modifier
per_frame_init_7=q16 = 1.8; //#fish eye
per_frame_init_8=start = 1; travel = 0; RotZ = 0; t0 = time+3;
per_frame_init_9=cran0 = rand(1);
per_frame_init_10=n = 0; loop (1000, gmegabuf(n)=0; megabuf(n)=0; n=n+1; ); 
per_frame_init_11=trelx = 0;  trely = 0; trelz = 0;
per_frame_init_12=reg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;
per_frame_init_13=
per_frame_init_14=//Find random starting point
per_frame_init_15=while (exec2(
per_frame_init_16=  ran1 = rand(8); ran2 = rand(8); ran3 = rand(8);
per_frame_init_17=  PosX = rand(8); PosY = rand(8); PosZ = rand(8); 
per_frame_init_18=
per_frame_init_19=//  PosX = 3.3; PosY = 2; PosZ = -2; ran1 = 0; ran2 = 0; ran3 = 0; //#
per_frame_init_20=
per_frame_init_21=  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); 
per_frame_init_22=  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);
per_frame_init_23=
per_frame_init_24=  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;
per_frame_init_25=  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;
per_frame_init_26=  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;
per_frame_init_27=
per_frame_init_28=  //***********BOT*************
per_frame_init_29=  //Coord. Trans. must exactly match def in warp S. !!!!
per_frame_init_30=  dist = 0.001;
per_frame_init_31=  while (exec2(
per_frame_init_32=    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;
per_frame_init_33=    uvx += PosX; uvy += PosY; uvz += PosZ;
per_frame_init_34=    uvx = 1+2*((uvx/4+30.5 - int(uvx/4+30.5))-.5);
per_frame_init_35=    uvy = 2+2*((uvy/4+30.5 - int(uvy/4+30.5))-.5);
per_frame_init_36=    uvz = 3+2*((uvz/4+30.5 - int(uvz/4+30.5))-.5);
per_frame_init_37=    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;
per_frame_init_38=    loop (7+1,
per_frame_init_39=      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));
per_frame_init_40=      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));
per_frame_init_41=      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));
per_frame_init_42=      slen = uvx*uvx + uvy*uvy + uvz*uvz;
per_frame_init_43=      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; 
per_frame_init_44=      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; 
per_frame_init_45=      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; 
per_frame_init_46=    );
per_frame_init_47=    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);
per_frame_init_48=    dist *= 1.05;
per_frame_init_49=  ,(dist < 0.6)*(len > 30)));
per_frame_init_50=,(dist < .06))); //end while
per_frame_init_51=
per_frame_1=fps_= fps;
per_frame_2=dec_s = 1-.04*40/fps_;
per_frame_3=dec_m  = 1 - 0.15 * 40/fps;
per_frame_4=//beat = (time >  t0+3); t0 = if(beat, time, t0);
per_frame_5=
per_frame_6=vol = (bass+mid+treb) / 3;
per_frame_7=avg = avg*dec_s+ vol*(1-dec_s);
per_frame_8=is_beat = above(vol, 0.5+1.5*avg) * above (time, tc0+.2);
per_frame_9=tc0 = if (is_beat,time,tc0);
per_frame_10=peak = is_beat * vol + (1-is_beat)*peak*0.65;
per_frame_11=
per_frame_12=
per_frame_13=speed = (0.05 + dist_*0.4)* (1+avg)/q7;
per_frame_14=ds = ds * dec_s + (1-dec_s)*speed*.25/fps_; 
per_frame_15=RotZ = 0.2*pow (sin(time/8),3);
per_frame_16=
per_frame_17=//Position 
per_frame_18=DirX= reg26; DirY= reg27; DirZ = reg28;
per_frame_19=PosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ; 
per_frame_20=q4 = PosX; q5 = PosY; q6 = PosZ;
per_frame_21=
per_frame_22=angchg = (.3-dist_)*(dist_ < .3)*1;
per_frame_23=travel = if (angchg > 0,0,travel+ds);
per_frame_24=v1 = v1 * dec_m + (1-dec_m)* RotZ * ds;
per_frame_25=v2p = v2p *dec_m + (1-dec_m)* angchg *xslope/fps;
per_frame_26=v3p = v3p *dec_m + (1-dec_m)*(angchg *yslope/fps);
per_frame_27=v2 = v2 *dec_m + (1-dec_m)* v2p;
per_frame_28=v3 = v3 *dec_m + (1-dec_m)* v3p;
per_frame_29=
per_frame_30=//v1 = 0;
per_frame_31=//v3 = 0.01*sin(time);
per_frame_32=//v2 = 0;
per_frame_33=
per_frame_34=//push old RotMat
per_frame_35=reg30 =reg20; reg31 =reg21; reg32 =reg22; 
per_frame_36=reg33 =reg23; reg34 =reg24; reg35 =reg25; 
per_frame_37=reg36 =reg26; reg37 =reg27; reg38 =reg28; 
per_frame_38=
per_frame_39=n = 0; avg = 0;
per_frame_40=loop (5,
per_frame_41=  n = n+1;
per_frame_42=  //new Rot. Mat for infinitesimal angles
per_frame_43=  ran1 = rand(100)/100;
per_frame_44=  ran2 = rand(100)/200-.25;
per_frame_45=  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;
per_frame_46=  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); 
per_frame_47=  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);
per_frame_48=  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;
per_frame_49=  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;
per_frame_50=  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;
per_frame_51=
per_frame_52=  //pop old RotMat
per_frame_53=  reg20 =reg30; reg21 =reg31; reg22 =reg32; 
per_frame_54=  reg23 =reg33; reg24 =reg34; reg25 =reg35; 
per_frame_55=  reg26 =reg36; reg27 =reg37; reg28 =reg38; 
per_frame_56=
per_frame_57=  //Multiply new RotMat by old one
per_frame_58=  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;
per_frame_59=  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;
per_frame_60=  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;
per_frame_61=  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;
per_frame_62=  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;
per_frame_63=  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;
per_frame_64=  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;
per_frame_65=  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;
per_frame_66=  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;
per_frame_67=
per_frame_68=  reg20 =q20; reg21 =q21; reg22 =q22;
per_frame_69=  reg23 =q23; reg24 =q24; reg25 =q25;
per_frame_70=  reg26 =q26; reg27 =q27; reg28 =q28;
per_frame_71=
per_frame_72=  //***********BOT*************
per_frame_73=  //Coord. Trans. must exactly match def in warp S. !!!!
per_frame_74=  dist = 0.002;
per_frame_75=  while (exec2(
per_frame_76=    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;
per_frame_77=    uvx += PosX; uvy += PosY; uvz += PosZ;
per_frame_78=//    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);
per_frame_79=//    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);
per_frame_80=//    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);
per_frame_81=    uvx = 1+2*((uvx/4+30.5 - int(uvx/4+30.5))-.5);
per_frame_82=    uvy = 2+2*((uvy/4+30.5 - int(uvy/4+30.5))-.5);
per_frame_83=    uvz = 3+2*((uvz/4+30.5 - int(uvz/4+30.5))-.5);
per_frame_84=    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;
per_frame_85=    loop (7+1,
per_frame_86=      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));
per_frame_87=      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));
per_frame_88=      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));
per_frame_89=      slen = uvx*uvx + uvy*uvy + uvz*uvz;
per_frame_90=      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; 
per_frame_91=      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; 
per_frame_92=      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; 
per_frame_93=    );
per_frame_94=    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);
per_frame_95=    dist *= 1.1;
per_frame_96=  ,(dist < 0.6)*(len > 30)));
per_frame_97=  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points
per_frame_98=  avg = avg+abs(megabuf(n)/5);
per_frame_99=); //end loop 5
per_frame_100=
per_frame_101=n = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));
per_frame_102=
per_frame_103=xslope = min(max(8*(megabuf(1)-megabuf(3)),-2),2);
per_frame_104=yslope = min(max(8*(megabuf(4)-megabuf(2)),-2),2);
per_frame_105=monitor = avg;
per_frame_106=dist_ = dist_*dec_s + (1-dec_s)*dist;
per_frame_107=
per_frame_108=q10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv
per_frame_109=q14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + 1.0/255 + start*.05; 
per_frame_110=q19 = .6 + .4*sin(time*.02+cran0*6); //brightness backgd
per_frame_111=start = start * .9;
per_frame_112=q11 = v1; q12 = -v2; q13 = v3;
per_frame_113=//forward comp. of Rotation
per_frame_114=
per_frame_115=warp = 0.0; zoom = 1; dx = q12/q16; dy = q13/q16; 
per_frame_116=rot =q11;
per_frame_117=
per_frame_118=
per_frame_119=q30 = 0.4*peak*avg;
per_frame_120=avg2 = if (vol> avg2, min (1,vol/2), avg2*dec_s);
per_frame_121=
per_frame_122=
per_frame_123=l1 = if (is_beat,rand(100)/100*0.8+0.1, l1);
per_frame_124=l2 = if (is_beat,rand(100)/100*0.8+0.1, l2);
per_frame_125=q1 = l1; q2 = l2;
per_frame_126=
per_frame_127=monitor = q10;
per_pixel_1=warp = 0.0; zoom = 1; 
per_pixel_2=tx = tan((2*x-1)*0.9);
per_pixel_3=ty = tan((2*y-1)*0.9);
per_pixel_4=
per_pixel_5=dx = q12/q16* (1+0.5*abs(tx)); 
per_pixel_6=dy = q13/q16* (1+0.5*abs(ty)); 
per_pixel_7=
per_pixel_8=
per_pixel_9=dx += q13*ty*(x-0.5)*1; 
per_pixel_10=dy += q12*tx*(y-0.5)*1; 
per_pixel_11=
per_pixel_12=//muss experimentell an tele angepasst werden; momentan 1.5 !!!
warp_1=`float seed, dist, struc, len; float2 uv0, uv1; float3 uv2; float4 box;
warp_2=`static const float3x3 RotMat = float3x3(q20,q21,q22,q23,q24,q25,q26,q27,q28);
warp_3=`static const float2 compxy = float2 (q12,q13);
warp_4=`static const float3 CamPos = float3(q4,q5,q6);
warp_5=`static const float sustain = .98 - q14, change = q14, ds = q10;
warp_6=`static const float myzoom = q7, limit = 40, tele=q16;
warp_7=`static const float3 mod1 = (rand_preset > 0.5);
warp_8=`float GetDist(float2 uvi) {float2 tmp; tmp = tex2D (sampler_pw_main, uvi).gb; 
warp_9=`  return 1-(tmp.y + 1.0/255*tmp.x);}
warp_10=`
warp_11=`float2 PutDist(float x) {float fg, fb; fg = modf((1-x)*255.0,fb);
warp_12=`  return (float2(fg,fb/255.0));}
warp_13=`
warp_14=`float tdist (float d) {return tan(d*1.3)/1.3;}
warp_15=`
warp_16=`float MinDist (float2 uvi, float d) 
warp_17=`{  float4 nb; float4 nb2; float2 pix;
warp_18=`   pix = texsize.zw*d;
warp_19=`   nb.x = GetDist(uvi+pix*float2(-1,-1));    nb.y = GetDist(uvi+pix*float2(1,-1));
warp_20=`   nb.z = GetDist(uvi+pix*float2(1,1));      nb.w = GetDist(uvi+pix*float2(-1,1));
warp_21=`   nb2.x = GetDist(uvi+pix*float2(0,-1));    nb2.y = GetDist(uvi+pix*float2(1,0));
warp_22=`   nb2.z = GetDist(uvi+pix*float2(0,1));     nb2.w = GetDist(uvi+pix*float2(-1,0));
warp_23=`   nb = min( nb, nb2 );   nb.xy = min( nb.xy, nb.zw );
warp_24=`   return min( nb.x, nb.y );
warp_25=`}
warp_26=`
warp_27=`float4 mbox (float3 uvi) {float3 zz, zz0; float tmp, li;
warp_28=`  zz = uvi; zz0 = zz+q8; li=0;
warp_29=`  for (int n = 0; n <= 8; n++) {
warp_30=`    zz = 2.0*clamp(zz,-1,1)-zz;  tmp = dot(zz,zz);
warp_31=`    zz *= max(.25/tmp, .25)*4;
warp_32=`    zz = 2.6*zz + zz0;}
warp_33=`  return float4(zz,li);}
warp_34=`
warp_35=`shader_body {
warp_36=`uv1 = (uv-.5)*aspect.xy*tele;
warp_37=`uv = (uv-.5)*(1-ds/(GetDist(uv))) + .5;
warp_38=`//uv = (uv-.5)*(1-(1.001*ds/tdist(GetDist(uv))+dot(compxy,uv1))) + .5;
warp_39=`
warp_40=`float3 noise = frac(8*tex2D (sampler_noise_lq,uv+rand_frame.yz)); 
warp_41=`dist = noise.r; seed = 1;
warp_42=`   if (noise.g > 0.15) 
warp_43=`   {  seed = 0;float3 noiseBiased = noise - 0.3;
warp_44=`      dist = min (MinDist(uv,2), 111) +  0.008* noiseBiased.x * noise.y ; }
warp_45=`
warp_46=`dist = min(dist,GetDist(uv))- ds*0.7;
warp_47=`uv2 = mul(float3(uv1*tdist(dist),tdist(dist)-.0)/myzoom,RotMat)+CamPos;
warp_48=`uv2 = (frac(uv2/4+.5)-.5)*2+float3(1,2,3);
warp_49=`box = mbox (uv2); len = length(box.xyz); 
warp_50=`
warp_51=`struc = lerp (saturate(1-1.5*dot(box,mod1)/limit),0.5,.0);
warp_52=`
warp_53=`if ((len < limit) && (dist > 0.04*(1-rad))){
warp_54=` ret.r = lerp (struc,GetPixel(uv).r,sustain); ret.gb=  PutDist(dist); } 
warp_55=` else {ret = tex2D(sampler_fc_main,uv)*sustain  - 1.0/255;} 
warp_56=`
warp_57=`}
comp_1=`sampler sampler_smalltiled_lizard_scales;
comp_2=`float2 dz, dz1, uv0, uv1, uvt, uv3;
comp_3=`float3 flash2;
comp_4=`static const float2 pix = texsize.zw*2;
comp_5=`
comp_6=`float GetBuf(float2 uvi)
comp_7=`  {float res;
comp_8=`  res = lerp(GetBlur1(uvi).r,GetPixel(uvi).r,0.15)-.0;
comp_9=`  res = pow(res,1.3)*(1+2*rand_preset.z);
comp_10=`  return res;}
comp_11=`
comp_12=`shader_body {
comp_13=`uv0 = uv;
comp_14=`
comp_15=`dz1.x = GetBuf(uv+pix*float2(1,0)) - GetBuf(uv+pix*float2(-1,0));
comp_16=`dz1.y = GetBuf(uv+pix*float2(0,1)) - GetBuf(uv+pix*float2(0,-1));
comp_17=`uv += dz1 * saturate(1-GetBuf(uv0))*0.3;
comp_18=`
comp_19=`float rdist = GetBlur1(uv).b;
comp_20=`//Untergrund
comp_21=`ret = tex2D (sampler_smalltiled_lizard_scales,uv -3*dz1+time*0.03)
comp_22=`     * rdist* rand_preset.x*(rand_preset.z>0.3);
comp_23=`
comp_24=`//farbiger Glanz
comp_25=`uv1 = uv; dz = dz1* 4*(1-rand_preset.x);
comp_26=`float3 refl = .1/float3 (length(uv1+dz*.6),length(uv1+dz), length(uv1+dz*2.6) ) * (0.5+GetBlur1(uv).b);
comp_27=`ret += refl * rdist;
comp_28=`
comp_29=`
comp_30=`ret += (GetBlur1(uv).r) * (rand_preset.y-0.2);
comp_31=`ret += rdist * float3 (0, 1, 3)/8;
comp_32=`
comp_33=`uvt = float2(q1,q2).xy+ (tex2D(sampler_noise_hq,uv0+rand_frame.xy)-0.5)*0.07*q28*rdist;
comp_34=`float k1 = GetBlur2(uv).r*2;
comp_35=`uv3 = mul(uv-uvt,float2x2(sin(k1),cos(k1),-cos(k1),sin(k1)));
comp_36=`uv3 = lerp (uv3.x,uv3.y,rdist);
comp_37=`flash2 = q30/length (uv3+dz*0.2) *roam_sin;
comp_38=`ret *= 0.4+flash2*saturate(1-lum(ret)) ;
comp_39=`
comp_40=`//ret *= 1-rad*rad;
comp_41=`//ret = GetPixel(uv0).r;
comp_42=`
comp_43=`}
comp_44=`
comp_45=`
