MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.07830
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=0.300
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=sp = sample*6.28*8*8*4;
wave_0_per_point2=it = it+1;
wave_0_per_point3=it = it*above(sample,0);
wave_0_per_point4=sz = q1;
wave_0_per_point5=ss = sample*6;
wave_0_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_0_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_0_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_0_per_point9=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_0_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_0_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_0_per_point12=
wave_0_per_point13=xang = q2;
wave_0_per_point14=axang = 0;
wave_0_per_point15=yang = q3;
wave_0_per_point16=ayang = 0;
wave_0_per_point17=zang = q4;
wave_0_per_point18=azang = 0;
wave_0_per_point19=fov = .3;
wave_0_per_point20=
wave_0_per_point21=mx = ox*cos(zang) - oy*sin(zang);
wave_0_per_point22=my = ox*sin(zang) + oy*cos(zang);
wave_0_per_point23=ox = mx;
wave_0_per_point24=oy = my;
wave_0_per_point25=mx = ox*cos(yang) + oz*sin(yang);
wave_0_per_point26=mz = - ox*sin(yang) + oz*cos(yang);
wave_0_per_point27=ox = mx;
wave_0_per_point28=oz = mz;
wave_0_per_point29=my = oy*cos(xang) - oz*sin(xang);
wave_0_per_point30=mz = oy*sin(xang) + oz*cos(xang);
wave_0_per_point31=oy = my;
wave_0_per_point32=oz = mz;
wave_0_per_point33=
wave_0_per_point34=a = .05;
wave_0_per_point35=mod = (oz+1)*.5;
wave_0_per_point36=a = a*max(min(mod,1),0);
wave_0_per_point37=oz = oz - 2;
wave_0_per_point38=x = ox*fov/oz + 0.5;
wave_0_per_point39=x = (x-.5)*0.75 + 0.5;
wave_0_per_point40=y = oy*fov/oz + 0.5;
wave_0_per_point41=
wave_0_per_point42=r = 1+sin(sp);
wave_0_per_point43=g = 0.5 + 0.5*sin(sample*1.57);
wave_0_per_point44=b = 0.5 + 0.5*cos(sample*1.57);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=tic = time - tin;
wave_1_per_frame2=tin = time;
wave_1_per_frame3=mod = .1*(mod*9 + bass_att);
wave_1_per_frame4=tt = tt + tic*((mod+1)*(mod+1)-1);
wave_1_per_frame5=t1 = tt;
wave_1_per_point1=sp = sample*6.28*8*8*4;
wave_1_per_point2=it = it+1;
wave_1_per_point3=it = it*above(sample,0);
wave_1_per_point4=sz = q1;
wave_1_per_point5=pi = 3.141592653;
wave_1_per_point6=ss = sample*6;
wave_1_per_point7=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_1_per_point8=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_1_per_point9=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_1_per_point10=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_1_per_point11=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_1_per_point12=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_1_per_point13=
wave_1_per_point14=zang = t1;
wave_1_per_point15=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point16=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point17=ox = mx;
wave_1_per_point18=oy = my;
wave_1_per_point19=
wave_1_per_point20=sh = sz*.5;
wave_1_per_point21=br = (zang/pi) + .5;
wave_1_per_point22=br = br - int(br*.25)*4;
wave_1_per_point23=br = int(br);
wave_1_per_point24=ra = pow(sh*sh*2,.5);
wave_1_per_point25=
wave_1_per_point26=ox = ox - (sh + ra*sin(-zang + pi*.25))*equal(br,0) - (-sh + ra*sin(zang + pi*.25))*equal(br,1) - (-sh - ra*sin(-zang + pi*.25))*equal(br,2) - (sh - ra*sin(zang + pi*.25))*equal(br,3);
wave_1_per_point27=oy = oy - (sh + ra*cos(-zang + pi*.25))*equal(br,0) - (sh - ra*cos(zang + pi*.25))*equal(br,1) - (-sh - ra*cos(-zang + pi*.25))*equal(br,2) - (-sh + ra*cos(zang + pi*.25))*equal(br,3);
wave_1_per_point28=
wave_1_per_point29=xang = q2;
wave_1_per_point30=axang = 0;
wave_1_per_point31=yang = q3;
wave_1_per_point32=ayang = 0;
wave_1_per_point33=zang = q4;
wave_1_per_point34=azang = 0;
wave_1_per_point35=fov = .3;
wave_1_per_point36=
wave_1_per_point37=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point38=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point39=ox = mx;
wave_1_per_point40=oy = my;
wave_1_per_point41=mx = ox*cos(yang) + oz*sin(yang);
wave_1_per_point42=mz = - ox*sin(yang) + oz*cos(yang);
wave_1_per_point43=ox = mx;
wave_1_per_point44=oz = mz;
wave_1_per_point45=my = oy*cos(xang) - oz*sin(xang);
wave_1_per_point46=mz = oy*sin(xang) + oz*cos(xang);
wave_1_per_point47=oy = my;
wave_1_per_point48=oz = mz;
wave_1_per_point49=
wave_1_per_point50=a = .05;
wave_1_per_point51=mod = (oz+1)*.5;
wave_1_per_point52=a = a*max(min(mod,1),0);
wave_1_per_point53=oz = oz - 2;
wave_1_per_point54=x = ox*fov/oz + 0.5;
wave_1_per_point55=x = (x-.5)*0.75 + 0.5;
wave_1_per_point56=y = oy*fov/oz + 0.5;
wave_1_per_point57=
wave_1_per_point58=r = -sin(sp);
wave_1_per_point59=g = 0.5 - 0.5*sin(sample*1.57);
wave_1_per_point60=b = 0.5 - 0.5*cos(sample*1.57);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=tic = time - tin;
wave_2_per_frame2=tin = time;
wave_2_per_frame3=mod = .1*(mod*9 + mid_att);
wave_2_per_frame4=tt = tt + tic*((mod+1)*(mod+1)-1);
wave_2_per_frame5=t1 = tt;
wave_2_per_point1=sp = sample*6.28*8*8*4;
wave_2_per_point2=it = it+1;
wave_2_per_point3=it = it*above(sample,0);
wave_2_per_point4=sz = q1;
wave_2_per_point5=pi = 3.141592653;
wave_2_per_point6=ss = sample*6;
wave_2_per_point7=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_2_per_point8=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_2_per_point9=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_2_per_point10=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_2_per_point11=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_2_per_point12=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_2_per_point13=
wave_2_per_point14=ang = t1;
wave_2_per_point15=mx = ox*cos(ang) + oz*sin(ang);
wave_2_per_point16=mz = - ox*sin(ang) + oz*cos(ang);
wave_2_per_point17=ox = mx;
wave_2_per_point18=oz = mz;
wave_2_per_point19=
wave_2_per_point20=sh = sz*.5;
wave_2_per_point21=br = (ang/pi) + .5;
wave_2_per_point22=br = br - int(br*.25)*4;
wave_2_per_point23=br = 4-int(br);
wave_2_per_point24=br = br - 4*equal(br,4);
wave_2_per_point25=ra = pow(sh*sh*2,.5);
wave_2_per_point26=ang = -ang;
wave_2_per_point27=ox = ox - (sh + ra*sin(-ang + pi*.25))*equal(br,0) - (-sh + ra*sin(ang + pi*.25))*equal(br,1) - (-sh - ra*sin(-ang + pi*.25))*equal(br,2) - (sh - ra*sin(ang + pi*.25))*equal(br,3);
wave_2_per_point28=oz = oz - (sh + ra*cos(-ang + pi*.25))*equal(br,0) - (sh - ra*cos(ang + pi*.25))*equal(br,1) - (-sh - ra*cos(-ang + pi*.25))*equal(br,2) - (-sh + ra*cos(ang + pi*.25))*equal(br,3);
wave_2_per_point29=
wave_2_per_point30=xang = q2;
wave_2_per_point31=axang = 0;
wave_2_per_point32=yang = q3;
wave_2_per_point33=ayang = 0;
wave_2_per_point34=zang = q4;
wave_2_per_point35=azang = 0;
wave_2_per_point36=fov = .3;
wave_2_per_point37=
wave_2_per_point38=mx = ox*cos(zang) - oy*sin(zang);
wave_2_per_point39=my = ox*sin(zang) + oy*cos(zang);
wave_2_per_point40=ox = mx;
wave_2_per_point41=oy = my;
wave_2_per_point42=mx = ox*cos(yang) + oz*sin(yang);
wave_2_per_point43=mz = - ox*sin(yang) + oz*cos(yang);
wave_2_per_point44=ox = mx;
wave_2_per_point45=oz = mz;
wave_2_per_point46=my = oy*cos(xang) - oz*sin(xang);
wave_2_per_point47=mz = oy*sin(xang) + oz*cos(xang);
wave_2_per_point48=oy = my;
wave_2_per_point49=oz = mz;
wave_2_per_point50=
wave_2_per_point51=a = .05;
wave_2_per_point52=mod = (oz+1)*.5;
wave_2_per_point53=a = a*max(min(mod,1),0);
wave_2_per_point54=oz = oz - 2;
wave_2_per_point55=x = ox*fov/oz + 0.5;
wave_2_per_point56=x = (x-.5)*0.75 + 0.5;
wave_2_per_point57=y = oy*fov/oz + 0.5;
wave_2_per_point58=
wave_2_per_point59=g = -sin(sp);
wave_2_per_point60=b = 0.5 - 0.5*sin(sample*1.57);
wave_2_per_point61=r = 0.5 - 0.5*cos(sample*1.57);
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=tic = time - tin;
wave_3_per_frame2=tin = time;
wave_3_per_frame3=mod = .1*(mod*9 + treb_att);
wave_3_per_frame4=tt = tt + tic*((mod+1)*(mod+1)-1);
wave_3_per_frame5=t1 = tt;
wave_3_per_point1=sp = sample*6.28*8*8*4;
wave_3_per_point2=it = it+1;
wave_3_per_point3=it = it*above(sample,0);
wave_3_per_point4=sz = q1;
wave_3_per_point5=pi = 3.141592653;
wave_3_per_point6=ss = sample*6;
wave_3_per_point7=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_3_per_point8=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_3_per_point9=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_3_per_point10=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_3_per_point11=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_3_per_point12=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_3_per_point13=
wave_3_per_point14=zang = t1;
wave_3_per_point15=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point16=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point17=ox = mx;
wave_3_per_point18=oy = my;
wave_3_per_point19=
wave_3_per_point20=sh = sz*.5;
wave_3_per_point21=br = (zang/pi) + .5;
wave_3_per_point22=br = br - int(br*.25)*4;
wave_3_per_point23=br = int(br);
wave_3_per_point24=ra = pow(sh*sh*2,.5);
wave_3_per_point25=
wave_3_per_point26=ox = ox - (sh + ra*sin(-zang + pi*.25))*equal(br,0) - (-sh + ra*sin(zang + pi*.25))*equal(br,1) - (-sh - ra*sin(-zang + pi*.25))*equal(br,2) - (sh - ra*sin(zang + pi*.25))*equal(br,3);
wave_3_per_point27=oy = oy - (sh + ra*cos(-zang + pi*.25))*equal(br,0) - (sh - ra*cos(zang + pi*.25))*equal(br,1) - (-sh - ra*cos(-zang + pi*.25))*equal(br,2) - (-sh + ra*cos(zang + pi*.25))*equal(br,3);
wave_3_per_point28=
wave_3_per_point29=yang = pi*.5;
wave_3_per_point30=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point31=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point32=ox = mx;
wave_3_per_point33=oz = mz;
wave_3_per_point34=
wave_3_per_point35=xang = q2;
wave_3_per_point36=axang = 0;
wave_3_per_point37=yang = q3;
wave_3_per_point38=ayang = 0;
wave_3_per_point39=zang = q4;
wave_3_per_point40=azang = 0;
wave_3_per_point41=fov = .3;
wave_3_per_point42=
wave_3_per_point43=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point44=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point45=ox = mx;
wave_3_per_point46=oy = my;
wave_3_per_point47=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point48=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point49=ox = mx;
wave_3_per_point50=oz = mz;
wave_3_per_point51=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point52=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point53=oy = my;
wave_3_per_point54=oz = mz;
wave_3_per_point55=
wave_3_per_point56=a = .05;
wave_3_per_point57=mod = (oz+1)*.5;
wave_3_per_point58=a = a*max(min(mod,1),0);
wave_3_per_point59=oz = oz - 2;
wave_3_per_point60=x = ox*fov/oz + 0.5;
wave_3_per_point61=x = (x-.5)*0.75 + 0.5;
wave_3_per_point62=y = oy*fov/oz + 0.5;
wave_3_per_point63=
wave_3_per_point64=b = -sin(sp);
wave_3_per_point65=r = 0.5 - 0.5*sin(sample*1.57);
wave_3_per_point66=g = 0.5 - 0.5*cos(sample*1.57);
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=max_bass = 1.2;
per_frame_1=wave_r = mv_b;
per_frame_2=wave_b = mv_g;
per_frame_3=wave_g = mv_r;
per_frame_4=b=max(bass-1,0);
per_frame_5=m=max(mid-1,0);
per_frame_6=t=max(treb-1,0);
per_frame_7=mv_r=.6*abs(sin(time*2.6+1.23+cos(time*4.87+2.145)))+(b/30);
per_frame_8=mv_g=.6*abs(sin(time*4.451+2.89+cos(time*3.74+.78)))+(m/30);
per_frame_9=mv_b=.6*abs(sin(time*3.845+1.23+cos(time*2.6+3)))+(t/30);
per_frame_10=
per_frame_11=q1=(3.14*cos(time*1.45 + 1.54 + cos((bass_att*.1)+time+ 3.22)));
per_frame_12=q2=(3.14*cos(time*2.4 + 2.69 + cos((bass_att*.1)+time+.65)));
per_frame_13=q3=time%50;
per_frame_14=f=if(equal(endframe,0),1,0);
per_frame_15=beat_avg=if(equal(beat_avg,0),bass,beat_avg);
per_frame_16=beat_avg=(beat_avg+bass)/2;
per_frame_17=
per_frame_18=max_bass = if( beat*above(f*bass_att,max_bass),0.99*bass_att, max_bass );
per_frame_19=max_bass = if( equal(frame%3000,0),0.8*max_bass,max_bass*.9999);
per_frame_20=max_bass=if( above(max_bass,10*beat_avg),10*beat_avg,max_bass);
per_frame_21=trig=if( equal(beat,1)*above(bass_att,max_bass),1,0);
per_frame_22=endframe=if(equal(trig,1)*equal(endframe,0), frame+4*min(interval,FPS),endframe);
per_frame_23=trig=if(equal(frame,endframe),0,trig);
per_frame_24=endframe=if(above(frame,endframe),0,endframe);
per_frame_25=q4=if(above(endframe,0),1,0);
per_frame_26=wave_a=0;
per_frame_27=rot=.1*sin(time*1.53+cos(time*4.676+3.43));
per_frame_28=rot=rot*(1+.4*q4);
per_frame_29=ob_size=.3+.7*abs(cos(time*2.45 + 1.566 +sin(time*5 +2.43)));
per_frame_30=
per_frame_31=ob_r=mv_r*(rand(100)/100);
per_frame_32=ob_g=mv_g*(rand(100)/100);
per_frame_33=ob_b=mv_b*(rand(100)/100);
per_frame_34=ob_a=.05*abs(cos(time*2.45 + 1.566 +sin(time+2)));
per_frame_35=
per_frame_36=
per_frame_37=
per_frame_38=
per_frame_39=
per_frame_40=
per_frame_41=
per_frame_42=
per_frame_43=
per_frame_44=mv_x=if(equal(q4,1),54+10*cos(time*10),64);
per_frame_45=
per_frame_46=
per_frame_47=zoom=if(equal(rand(40+60*(q4)),25),1.6,zoom);
per_frame_48=// -------------------------------- Beat Detective 007 ----------------------------------
per_frame_49=sure=if(equal(sure,0),.6,sure);
per_frame_50=interval=if(equal(interval,0),40,interval);
per_frame_51=lastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);
per_frame_52=dbass=(bass-pbass)/FPS;
per_frame_53=beat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);
per_frame_54=sure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),
per_frame_55=min(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);
per_frame_56=sure=max(.5,sure);
per_frame_57=cheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);
per_frame_58=beat=if(cheat,1,beat);
per_frame_59=sure=if(cheat,.95*sure,sure);
per_frame_60=maxdbass=max(maxdbass*.999,dbass);
per_frame_61=maxdbass=max(.012,maxdbass);
per_frame_62=maxdbass=min(.02,maxdbass);
per_frame_63=interval=if(beat, frame-lastbeat,interval);
per_frame_64=lastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);
per_frame_65=cheat=0;
per_frame_66=pbass=bass;
per_frame_67=// ----------------------------------------------------------------------------------------------
per_frame_68=
per_frame_69=zoom = if(equal(beat,1),zoom+bass*.7,zoom);
per_frame_70=monitor=sx;
per_frame_71=//monitor=60*FPS/interval;
per_pixel_1=dx= if( below( abs(ang-q1), .4*sqrt(rad)),dx+(1-q4)*(.02*rad*sin(q1)),dx);
per_pixel_2=dy=if( below(abs(ang-q1),.4*sqrt(rad)),dy+(1-q4)*(.02*rad*cos(q1)),dy);
per_pixel_3=zoom=if(below( abs(ang-q1),.4*sqrt(rad)),zoom+(1-q4)*(.2*rad*bass),zoom);
per_pixel_4=
per_pixel_5=dx= if( below( abs(ang-q2), .4*sqrt(rad)),dx+(1-q4)*(.02*rad*sin(q2)),dx);
per_pixel_6=dy = if(below( abs(ang-q2),.4*sqrt(rad)),dy+(1-q4)*(.02*rad*cos(q2)),dy);
per_pixel_7=zoom = if(below(abs(ang-q2),.4*sqrt(rad)),zoom+(1-q4)*(.2*rad*bass), zoom);
per_pixel_8=zoom=zoom-(1-q4)*.04*rad +q4*.1;
warp_1=`#define sat saturate
warp_2=`sampler sampler_pw_noise_lq;
warp_3=`float3 color, mus;
warp_4=`float2 uv1, uv2, uv3;
warp_5=`float arg, arg2;
warp_6=`
warp_7=`float aTan2(float y, float x) {float angle;	 float abs_y = abs(y);
warp_8=`if (x >= 0) {float r = (x - abs_y) / (x + abs_y); angle = 1-r;} 
warp_9=`else {float r = (x + abs_y) / (abs_y - x); angle = 3-r; }	
warp_10=`return y < 0 ? -angle : angle;}
warp_11=`
warp_12=`
warp_13=`shader_body {
warp_14=`
warp_15=`ret = GetPixel (uv_orig)*0.4;
warp_16=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`float2 rs, rs0, uv1, uv2, uv3,uv4,uv5,dz,sunpos1;
comp_3=`float3 ret1,col,gnd, back,back2;
comp_4=`
comp_5=`
comp_6=`shader_body {
comp_7=`//uv += texsize.zw/2;
comp_8=`ret1 = GetPixel(uv_orig);
comp_9=`
comp_10=`uv2 = float2 (uv.x,uv.y-.3);
comp_11=`float shadow = lum(GetBlur2(frac(uv2)))*3;
comp_12=`
comp_13=`float k1 = saturate(lum(back));
comp_14=`ret = lerp(GetPixel(uv),2*GetBlur1(uv),.4)*1.5;
comp_15=`
comp_16=`ret += saturate(1) * saturate(1-lum(ret))*(1-shadow) * .2*(uv.y);
comp_17=`
comp_18=`
comp_19=`ret = GetPixel(uv); ret1 = 0;
comp_20=`for (int n =1; n < saturate(q29)*8; n++)
comp_21=`{
comp_22=`ret = max(ret,GetPixel(uv-texsize.zw*float2(n,0)));
comp_23=`ret = max(ret,GetPixel(uv+texsize.zw*float2(n,0)));
comp_24=`}
comp_25=`
comp_26=`col = 0.5+0.5*float3(q2,q4,q6);
comp_27=`ret *= q28+8*(.05/(length(uv.x-ret*4+0.5)))*(1+col)/2;
comp_28=`//ret *= .5+2*tex2D(sampler_noise_hq,uv-ret+0.5);
comp_29=`
comp_30=`float mask = saturate(1-2*lum(ret));
comp_31=`float z = .5/(uv.y+(uv.x-0.5)*1*q5*q3-0.3);
comp_32=`uv1 = float2 (1*z*(uv.x-0.5),z);
comp_33=`float noise = tex2D(sampler_noise_lq,uv1+float2(q1,q3+time)).r*mask*(z>0)*0.2 * min(1,1/z);
comp_34=`
comp_35=`ret += noise;
comp_36=`ret += -mask*noise*lum(12*GetBlur1((uv1-float2(-0.5,.25))));
comp_37=`ret += .5/(abs(z))*normalize(col) * (z<0) *mask;
comp_38=`}
