MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=0.925
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=3.177
fWaveSmoothing=0.000
fWaveParam=-0.400
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=1.000
ob_a=0.300
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.200
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.300
wave_0_per_point1=n=sample*6.283;
wave_0_per_point2=phs=-sample * 0.2;
wave_0_per_point3=tm=time*0.4 + phs;
wave_0_per_point4=
wave_0_per_point5=flip=flip+1;
wave_0_per_point6=flip=flip*below(flip,2);
wave_0_per_point7=
wave_0_per_point8=xp=0;
wave_0_per_point9=yp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;
wave_0_per_point10=zp=0;
wave_0_per_point11=
wave_0_per_point12=//wrist movement;
wave_0_per_point13=ang=sin(tm*2)*0.5 +0.5;
wave_0_per_point14=
wave_0_per_point15=xq=xp;
wave_0_per_point16=yq=yp*sin(ang) + zp*cos(ang);
wave_0_per_point17=zq=yp*cos(ang) - zp*sin(ang);
wave_0_per_point18=yq=yp;
wave_0_per_point19=zq=zp;
wave_0_per_point20=
wave_0_per_point21=ang=tm*8;
wave_0_per_point22=xp=xq*sin(ang) + yq*cos(ang);
wave_0_per_point23=yp=xq*cos(ang) - yq*sin(ang);
wave_0_per_point24=zp=zq;
wave_0_per_point25=
wave_0_per_point26=//forearm movement;
wave_0_per_point27=zp=zp-0.3;
wave_0_per_point28=ang=3.14 + sin(tm*2 - 0.5)*1.5;
wave_0_per_point29=xq=xp;
wave_0_per_point30=yq=yp*sin(ang) + zp*cos(ang);
wave_0_per_point31=zq=yp*cos(ang) - zp*sin(ang);
wave_0_per_point32=
wave_0_per_point33=//upper arm twist
wave_0_per_point34=ang=-1.0 + cos(tm*3 + 0.5);
wave_0_per_point35=xp=xq*sin(ang) + yq*cos(ang);
wave_0_per_point36=yp=xq*cos(ang) - yq*sin(ang);
wave_0_per_point37=zp=zq;
wave_0_per_point38=
wave_0_per_point39=//upper arm outward;
wave_0_per_point40=zp=zp-0.35;
wave_0_per_point41=ang=cos(tm*2)*0.75 - 1.05;
wave_0_per_point42=xq=xp*sin(ang) + zp*cos(ang);
wave_0_per_point43=yq=yp;
wave_0_per_point44=zq=xp*cos(ang) - zp*sin(ang);
wave_0_per_point45=
wave_0_per_point46=//upper arm up down;
wave_0_per_point47=ang=cos(tm)*0.5 - 0.5;
wave_0_per_point48=xp=xq;
wave_0_per_point49=yp=yq*cos(ang) - zq*sin(ang);
wave_0_per_point50=zp=yq*sin(ang) + zq*cos(ang);
wave_0_per_point51=
wave_0_per_point52=//xp=xq;yp=yq;zp=zq;
wave_0_per_point53=
wave_0_per_point54=
wave_0_per_point55=//project into screenspace and draw on screen
wave_0_per_point56=zp=zp+2;
wave_0_per_point57=xs=xp/zp;
wave_0_per_point58=ys=yp/zp;
wave_0_per_point59=
wave_0_per_point60=x=xs+0.5;
wave_0_per_point61=y=ys*1.3+0.5;
wave_0_per_point62=
wave_0_per_point63=
wave_0_per_point64=//a=(1-sample)*flip;
wave_0_per_point65=
wave_0_per_point66=//b=b+pow(1-sample,2)*0.3;
wave_0_per_point67=
wave_0_per_point68=x = 0.5 + (x-0.5)/q1;
wave_0_per_point69=y = 0.5 + (y-0.5)/q2 + 0.1;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.200
wavecode_1_g=0.000
wavecode_1_b=0.000
wavecode_1_a=0.300
wave_1_per_point1=n=sample*6.283;
wave_1_per_point2=phs=-sample * 0.2;
wave_1_per_point3=tm=time*0.4 + phs;
wave_1_per_point4=
wave_1_per_point5=flip=flip+1;
wave_1_per_point6=flip=flip*below(flip,2);
wave_1_per_point7=
wave_1_per_point8=xp=0;
wave_1_per_point9=yp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;
wave_1_per_point10=yp=-yp;
wave_1_per_point11=zp=0;
wave_1_per_point12=
wave_1_per_point13=//wrist movement;
wave_1_per_point14=ang=sin(tm*2)*0.5 +0.5;
wave_1_per_point15=
wave_1_per_point16=xq=xp;
wave_1_per_point17=yq=yp*sin(ang) + zp*cos(ang);
wave_1_per_point18=zq=yp*cos(ang) - zp*sin(ang);
wave_1_per_point19=yq=yp;
wave_1_per_point20=zq=zp;
wave_1_per_point21=
wave_1_per_point22=ang=tm*8;
wave_1_per_point23=xp=xq*sin(ang) + yq*cos(ang);
wave_1_per_point24=yp=xq*cos(ang) - yq*sin(ang);
wave_1_per_point25=zp=zq;
wave_1_per_point26=
wave_1_per_point27=//forearm movement;
wave_1_per_point28=zp=zp-0.3;
wave_1_per_point29=ang=3.14 + sin(tm*2 - 0.5)*1.5;
wave_1_per_point30=xq=xp;
wave_1_per_point31=yq=yp*sin(ang) + zp*cos(ang);
wave_1_per_point32=zq=yp*cos(ang) - zp*sin(ang);
wave_1_per_point33=
wave_1_per_point34=//upper arm twist
wave_1_per_point35=ang=-1.0 + cos(tm*3 + 0.5);
wave_1_per_point36=xp=xq*sin(ang) + yq*cos(ang);
wave_1_per_point37=yp=xq*cos(ang) - yq*sin(ang);
wave_1_per_point38=zp=zq;
wave_1_per_point39=
wave_1_per_point40=//upper arm outward;
wave_1_per_point41=zp=zp-0.35;
wave_1_per_point42=ang=cos(tm*2)*0.75 - 1.05;
wave_1_per_point43=xq=xp*sin(ang) + zp*cos(ang);
wave_1_per_point44=yq=yp;
wave_1_per_point45=zq=xp*cos(ang) - zp*sin(ang);
wave_1_per_point46=
wave_1_per_point47=//upper arm up down;
wave_1_per_point48=ang=cos(tm)*0.5 - 0.5;
wave_1_per_point49=xp=xq;
wave_1_per_point50=yp=yq*cos(ang) - zq*sin(ang);
wave_1_per_point51=zp=yq*sin(ang) + zq*cos(ang);
wave_1_per_point52=
wave_1_per_point53=//xp=xq;yp=yq;zp=zq;
wave_1_per_point54=
wave_1_per_point55=
wave_1_per_point56=//project into screenspace and draw on screen
wave_1_per_point57=zp=zp+2;
wave_1_per_point58=xs=xp/zp;
wave_1_per_point59=ys=yp/zp;
wave_1_per_point60=
wave_1_per_point61=x=xs+0.5;
wave_1_per_point62=y=ys*1.3+0.5;
wave_1_per_point63=
wave_1_per_point64=
wave_1_per_point65=//a=(1-sample)*flip;
wave_1_per_point66=
wave_1_per_point67=
wave_1_per_point68=//b=b+pow(1-sample,2)*0.3;
wave_1_per_point69=
wave_1_per_point70=
wave_1_per_point71=x = 0.5 + (x-0.5)/q1;
wave_1_per_point72=y = 0.5 + (y-0.5)/q2 + 0.1;
wave_1_per_point73=
wavecode_2_enabled=0
wavecode_2_samples=61
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=2.44415
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=t1 = q1;
wave_2_per_frame2=t2 = q2;
wave_2_per_frame3=t3 = q3;
wave_2_per_frame4=t4 = q4;
wave_2_per_frame5=t5 = q5;
wave_2_per_frame6=t6 = q6;
wave_2_per_frame7=t7 = q7;
wave_2_per_frame8=t8 = q8;
wave_2_per_point1=x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2
wave_2_per_point2=+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;
wave_2_per_point3=
wave_2_per_point4=y = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6
wave_2_per_point5=+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;
wavecode_3_enabled=0
wavecode_3_samples=61
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=2.44415
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=t2 = 0
wave_3_per_frame1=t1 = q1;
wave_3_per_frame2=t2 = q2;
wave_3_per_frame3=t3 = q3;
wave_3_per_frame4=t4 = q4;
wave_3_per_frame5=t5 = q5;
wave_3_per_frame6=t6 = q6;
wave_3_per_frame7=t7 = q7;
wave_3_per_frame8=t8 = q8;
wave_3_per_point1=x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2
wave_3_per_point2=+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;
wave_3_per_point3=
wave_3_per_point4=y = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6
wave_3_per_point5=+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=512
shapecode_0_x=0.500
shapecode_0_y=0.550
shapecode_0_rad=0.06689
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.78748
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=
shape_0_per_frame2=
shape_0_per_frame3=d = 1.4; // makes the perspective impact
shape_0_per_frame4=zoom = 0.7;
shape_0_per_frame5=
shape_0_per_frame6=
shape_0_per_frame7=// Kardan angles
shape_0_per_frame8=
shape_0_per_frame9=w1 = q3; // first rotation: clockwise in the desktop pane
shape_0_per_frame10=w2 = q4; // rotation around vertical axis
shape_0_per_frame11=w3 = q5; // rotation around horizontal axis
shape_0_per_frame12=
shape_0_per_frame13=
shape_0_per_frame14=// definition of the 3D shape
shape_0_per_frame15=
shape_0_per_frame16=i = instance;
shape_0_per_frame17=
shape_0_per_frame18=my_x = (i % 8)/8 - 0.5;
shape_0_per_frame19=my_y = (i % 64 - (i % 8))/64 - 0.5;
shape_0_per_frame20=my_z = (i - (i % 64 - (i % 8))/64)/512 - 0.5;
shape_0_per_frame21=
shape_0_per_frame22=
shape_0_per_frame23=// 3D rotations
shape_0_per_frame24=
shape_0_per_frame25=x1 = cos(w1)*my_x + sin(w1)*my_y;
shape_0_per_frame26=y1 = -sin(w1)*my_x + cos(w1)*my_y;
shape_0_per_frame27=z1 = my_z;
shape_0_per_frame28=
shape_0_per_frame29=x2 = cos(w2)*x1 + sin(w2)*z1;
shape_0_per_frame30=z2 = -sin(w2)*x1 + cos(w2)*z1;
shape_0_per_frame31=y2 = y1;
shape_0_per_frame32=
shape_0_per_frame33=y3 = cos(w3)*y2 + sin(w3)*z2;
shape_0_per_frame34=z3 = -sin(w3)*y2 + cos(w3)*z2;
shape_0_per_frame35=x3 = x2;
shape_0_per_frame36=
shape_0_per_frame37=// perspective calculation
shape_0_per_frame38=
shape_0_per_frame39=l = sqrt(x3*x3 + y3*y3);
shape_0_per_frame40=w = atan2(x3,y3);
shape_0_per_frame41=p = tan(asin(1) + atan2(d+z3,l));
shape_0_per_frame42=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
shape_0_per_frame43=
shape_0_per_frame44=rad = rad/d;
shape_0_per_frame45=my_x = zoom*sin(w)*p;
shape_0_per_frame46=my_y = zoom*cos(w)*p;
shape_0_per_frame47=
shape_0_per_frame48=x = 0.5 + my_x;
shape_0_per_frame49=y = 0.5 + my_y;
shape_0_per_frame50=
shape_0_per_frame51=x = 0.5 + (x-0.5)/q2;
shape_0_per_frame52=y = 0.5 + (y-0.5)/q1;
shapecode_1_enabled=1
shapecode_1_sides=32
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=33
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.500
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.500
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=trans = rand(int(q30))/15+instance-instance;
shape_1_per_frame2=trans2 = rand(int(q30))/15+instance-instance;
shape_1_per_frame3=trans3 = rand(int(q30))/15+instance-instance;
shape_1_per_frame4=a = trans;
shape_1_per_frame5=
shape_1_per_frame6=x = .5 + rand(15)*0.01*bass_att*if(equal(rand(2),1),1,-1)+instance-instance;
shape_1_per_frame7=y = .5 + rand(15)*0.01*bass_att*if(equal(rand(2),1),1,-1)+instance-instance;
shape_1_per_frame8=rad = .09 + rand(int(q30))/15+instance-instance;
shape_1_per_frame9=r=rand(q30)*.1+instance-instance;
shape_1_per_frame10=g=rand(q30)*.1+instance-instance;
shape_1_per_frame11=b=rand(q30)*.1+instance-instance;
shape_1_per_frame12=r2=rand(q30)*.1+instance-instance;
shape_1_per_frame13=g2=rand(q30)*.1+instance-instance;
shape_1_per_frame14=b2=rand(q30)*.1+instance-instance;
shape_1_per_frame15=border_r=rand(q30)*.1+instance-instance;
shape_1_per_frame16=border_g=rand(q30)*.1+instance-instance;
shape_1_per_frame17=border_b=rand(q30)*.1+instance-instance;
shapecode_2_enabled=1
shapecode_2_sides=32
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=7
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.000
shapecode_2_g=0.000
shapecode_2_b=0.500
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.500
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=trans = rand(int(q30))/15+instance-instance;
shape_2_per_frame2=trans2 = rand(int(q30))/15+instance-instance;
shape_2_per_frame3=trans3 = rand(int(q30))/15+instance-instance;
shape_2_per_frame4=a = trans;
shape_2_per_frame5=
shape_2_per_frame6=x = .5 + rand(15)*0.01*mid_att*if(equal(rand(2),1),1,-1)+instance-instance;
shape_2_per_frame7=y = .5 + rand(15)*0.01*mid_att*if(equal(rand(2),1),1,-1)+instance-instance;
shape_2_per_frame8=rad = .09 + rand(int(q30))/15+instance-instance;
shape_2_per_frame9=r=rand(q30)*.1+instance-instance;
shape_2_per_frame10=g=rand(q30)*.1+instance-instance;
shape_2_per_frame11=b=rand(q30)*.1+instance-instance;
shape_2_per_frame12=r2=rand(q30)*.1+instance-instance;
shape_2_per_frame13=g2=rand(q30)*.1+instance-instance;
shape_2_per_frame14=b2=rand(q30)*.1+instance-instance;
shape_2_per_frame15=border_r=rand(q30)*.1+instance-instance;
shape_2_per_frame16=border_g=rand(q30)*.1+instance-instance;
shape_2_per_frame17=border_b=rand(q30)*.1+instance-instance;
shape_2_per_frame18=
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=1
shapecode_3_thickOutline=1
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.750
shapecode_3_rad=0.07059
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.73458
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_init1=vx = 0
shape_3_per_frame1=x = q1;
shape_3_per_frame2=y = q5;
per_frame_init_1=prox = 1;
per_frame_1=dec_med = pow (0.8, 30/fps);
per_frame_2=dec_slow = pow (0.95, 30/fps);
per_frame_3=//dec_xlow = pow (0.999, 30/fps);
per_frame_4=beat = max (max (bass, mid), treb); 
per_frame_5=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_6=is_beat = above(beat, .2+avg+peak) * above (time, t0+.2);
per_frame_7=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_8=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_9=index = (index + is_beat) %32;
per_frame_10=index2 = (index2 + is_beat*bnot(index))%4;
per_frame_11=
per_frame_12=q22 = peak;
per_frame_13=q24 = is_beat;
per_frame_14=q26 = bass_att + mid_att + treb_att;
per_frame_15=vol = vol*dec_med + (1-dec_med)*q26;
per_frame_16=q27 = index + 1;
per_frame_17=q28 = index2 +1;
per_frame_18=
per_frame_19=p2 = .3*sin(time) + .3*cos(time/3);
per_frame_20=//*****tunnel tilting
per_frame_21=q1 = cos(p2 * 3.1416/4);
per_frame_22=q2 = sin(p2 * 3.1416/4);
per_frame_23=q3 = -q2;
per_frame_24=q4 = q1;
per_frame_25=
per_frame_26=//****tunnel viewpoint x,y
per_frame_27=vtrig = is_beat * bnot(index%2);
per_frame_28=vx = vx * bnot(vtrig) + vtrig * (int(rand(100))/100-.5);
per_frame_29=vy = vy * bnot(vtrig) + vtrig * (int(rand(100))/100-.5);
per_frame_30=vx = vx* below(index%15,5); //###
per_frame_31=vy = vy* below(index%15,5);
per_frame_32=q5 = vx*10;
per_frame_33=q6 = vy*12;
per_frame_34=
per_frame_35=//***tunnel width
per_frame_36=q21 = (1+sin(time/12))/8+.01;
per_frame_37=
per_frame_38=//**floor proximity
per_frame_39=prox = prox - above(vy,.3)*prox*2;
per_frame_40=q32 = .5 + .2*prox;
per_frame_41=monitor = prox;
per_frame_42=
per_frame_43=//****tunnel rotation
per_frame_44=rota = rota +.01*below(index%16,8)/fps*30;
per_frame_45=rota1 = rota1*dec_med + (1-dec_med)*rota;
per_frame_46=q7 = rota1;
per_frame_47=
per_frame_48=//****tunnel speed
per_frame_49=movez = movez + 1.2/(1+abs(vx)+abs(vy))/fps;
per_frame_50=q8 = movez * (1+q21/4);
per_frame_51=//dyn. Aenderung von q21 bewirkt auch Richt.wechsel
per_frame_52=
per_frame_53=//***********************
per_frame_54=trig1= q24*bnot(index%12);
per_frame_55=trig2= q24*bnot((index+4)%12);
per_frame_56=trig3= q24*bnot((index+8)%12);
per_frame_57=trel = trel + vol/fps;
per_frame_58=z0 = 1;
per_frame_59=speed = vol/2;
per_frame_60=hx = sin(trel);
per_frame_61=hy = cos(trel);
per_frame_62=
per_frame_63=p1z = bnot(trig1)* (p1z + (5+p1z)*speed/fps)+trig1*z0;
per_frame_64=p1z = max(p1z,.1);
per_frame_65=q9 = hx/(p1z); 
per_frame_66=q10 = hy/(p1z); 
per_frame_67=q11 = p1z;
per_frame_68=q12 = .1+.02*q26*bnot((index+2)%3)*p1z*exp(-p1z/100);
per_frame_69=
per_frame_70=p2z = bnot(trig2)* (p2z + (5+p2z)*speed/fps)+trig2*z0;
per_frame_71=p2z = max(p2z,.1);
per_frame_72=q13 = 2*hx/(p2z); 
per_frame_73=q14 = -.5*hy/(p2z); 
per_frame_74=q15 = p2z;
per_frame_75=q16 = .1+.02*q26*bnot((index+2)%3)*p2z*exp(-p2z/100);
per_frame_76=
per_frame_77=
per_frame_78=p3z = bnot(trig3)* (p3z + (5+p3z)*speed/fps)+trig3*z0;
per_frame_79=p3z = max(p3z,.1);
per_frame_80=q17 = -1.4*hx/(p3z); 
per_frame_81=q18 = 2*hy/(p3z); 
per_frame_82=q19 = p3z;
per_frame_83=q20 = .1+.02*q26*bnot((index+2)%3)*p3z*exp(-p3z/100);
per_frame_84=q30=(bass+treb+mid)*2;
warp_1=`sampler sampler_pw_noisevol_hq;
warp_2=`
warp_3=`shader_body
warp_4=`{
warp_5=`
warp_6=`uv *=2 ;
warp_7=`float2 m = floor(frac(uv*0.5)*2);
warp_8=`uv = frac(uv)*(1-m) + (m)*frac(1-uv);
warp_9=`uv*=.5;
warp_10=`    float2 ruv = uv + float2(q4,q5)*0.3;
warp_11=`    float2 luv = uv - float2(q5,q4)*0.3;
warp_12=`    ruv = lerp(uv, ruv, uv.y);    
warp_13=`    ruv = lerp(ruv,luv, uv.y);
warp_14=`    ruv = 0.5 + (ruv-0.5)*(1-(q12*0.3));  
warp_15=`    ruv = ruv + float2(0,q2*5);
warp_16=`    float3 pos = float3(ruv.x-roam_cos.x,ruv.y+time*0.2,q2*10);
warp_17=`    
warp_18=`
warp_19=`    ret = tex3D(sampler_pw_noisevol_hq, pos);
warp_20=`    ret += tex3D(sampler_pw_noisevol_hq, 2*pos)/2;
warp_21=`    ret += tex3D(sampler_pw_noisevol_hq, 4*pos)/4;
warp_22=`    ret += tex3D(sampler_pw_noisevol_hq, 8*pos)/8;
warp_23=`    ret += tex3D(sampler_pw_noisevol_hq, 16*pos)/16;
warp_24=`    ret = ret/1.8;    
warp_25=`    ret = (ret*ret*ret);
warp_26=`   
warp_27=`    ret *= 0.93; //or try: ret -= 0.004;
warp_28=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`
comp_3=`float k1, k2, mask1, mask2, mask3, rad1, rad2, rad3;
comp_4=`float2 rs, rss, rss0, rs0, uv2, uv3,uv4, rsk, uvo;
comp_5=`float2 dz1, dz2, dz3, Kugel1, Kugel2, Kugel3,tmp;
comp_6=`float3 noise, ret1, ret2;
comp_7=`
comp_8=`shader_body {
comp_9=`uvo = uv;
comp_10=`uv = mul(uv*aspect.xy,float2x2(_qa));
comp_11=`
comp_12=`uv = uv + -.0- .1*float2(q5,q6);
comp_13=`float2 uv1 = (uv-.5 );//*aspect.xy;
comp_14=`
comp_15=`//Kugel1
comp_16=`rsk = (uv1 + float2 (q9,q10)) ;
comp_17=`dz1 = normalize(rsk);
comp_18=`rad1 = q11*length (rsk) ;
comp_19=`uv4 =  tan(rad1)*dz1;
comp_20=`mask1 = saturate(8-8*rad1);
comp_21=`Kugel1 = uv4*mask1;
comp_22=`
comp_23=`//Kugel2
comp_24=`rsk = (uv1 + float2 (q13,q14)) ;
comp_25=`dz2 = normalize(rsk);
comp_26=`rad2 = q15*length (rsk) ;
comp_27=`uv4 =  tan(rad2)*dz2;
comp_28=`mask2 = saturate(8-8*rad2);
comp_29=`Kugel2 = uv4*mask2;
comp_30=`
comp_31=`//Kugel3
comp_32=`rsk = (uv1 + float2 (q17,q18)) ;
comp_33=`dz3 = normalize(rsk);
comp_34=`rad3 = q19*length (rsk) ;
comp_35=`uv4 =  tan(rad3)*dz3;
comp_36=`mask3 = saturate(8-8*rad3);
comp_37=`Kugel3 = uv4*mask3;
comp_38=`
comp_39=`float2 dz = (Kugel2 + Kugel1 + Kugel3)*.2;
comp_40=`//******************** STARS
comp_41=`uv1 += dz;
comp_42=`rss0.x = atan2(uv1.x, uv1.y)/3.1415927/4;
comp_43=`rss0 *=2 ;
comp_44=`float2 m = floor(frac(rss0*0.5)*2);
comp_45=`rss0 = frac(rss0)*(1-m) + (m)*frac(1-rss0);
comp_46=`rss0*=.5;
comp_47=`
comp_48=`rss0.y = .1*q21/(length (uv1));
comp_49=`
comp_50=`rss = float2 (rss0.x,rss0.y+time);
comp_51=`rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_52=`float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_53=`tmp = abs(frac(rss*8)-.5);
comp_54=`float3 dots = saturate(.04/length(tmp)) *noise;
comp_55=`
comp_56=`rss = float2 (rss0.x,rss0.y+time/4);
comp_57=`rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_58=`noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_59=`tmp = abs(frac(rss*8)-.5);
comp_60=`dots += saturate(.02/length(tmp)) * noise;
comp_61=`
comp_62=`dots *= saturate(.2/abs(rss0.y));
comp_63=`dots *= dots*.6;
comp_64=`//*************************
comp_65=`
comp_66=`float z = q32/(uv1.y-.02);//floor proxy
comp_67=`float mask = saturate(4/z);
comp_68=`rs0.x = (uv1.x)*z;
comp_69=`rs0.y = z/4;
comp_70=`rs.x = rs0.x ;
comp_71=`rs.y = rs0.y + q8*3;
comp_72=`float3 mirror = lum(tex2D(sampler_pw_noise_lq,.02*rs))-.5;
comp_73=`z = .2/(length(uv1)-q21);
comp_74=`uv2.y = z + q8;
comp_75=`uv2.x = rss0.x +q7;
comp_76=`uv3 =frac(uv2 +.0*mask*mirror);
comp_77=`
comp_78=`ret1 =  tex2D (sampler_main,uv3)/z;
comp_79=`ret = max(ret1*(1-0.5*mask),mirror*mask) +dots;
comp_80=`
comp_81=`float mod = q22*2;
comp_82=`float3 blk = abs(rsqrt(rad1)*dz1.x*roam_sin
comp_83=`+rsqrt(rad2)*dz2.y*roam_sin.rbg
comp_84=`+rsqrt(rad3)*dz3.x*roam_sin.bgr)*(.2+mirror*mask)*mod; 
comp_85=`ret += blk;
comp_86=`
comp_87=`ret2 = saturate(.02*q22*q21/length (uv1)*
comp_88=` (lum(tex2D (sampler_main,uv1+.5))));
comp_89=`ret2 /= (length(uv1)+.02);
comp_90=`float k1 = lum(ret2);
comp_91=`ret += k1*float3(1,k1,k1/2)  ;
comp_92=`}
