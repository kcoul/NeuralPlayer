MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=3.870
fDecay=1.000
fVideoEchoZoom=1.484
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=1
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.044
fWarpScale=2.418
fZoomExponent=1.00000
fShader=1.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.16217
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.500
ib_r=1.000
ib_g=0.000
ib_b=0.000
ib_a=0.050
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t1 = int(rand(1001))*.001;
wave_0_per_frame2=t2 = int(rand(1001))*.001;
wave_0_per_frame3=
wave_0_per_frame4=it = (it + 1)*below(it,2000);
wave_0_per_frame5=
wave_0_per_frame6=sw = 1- sw;
wave_0_per_frame7=//sw = equal(it%20,0);
wave_0_per_frame8=t3 = sw;
wave_0_per_frame9=
wave_0_per_frame10=//t1 = .5;
wave_0_per_frame11=//t2 = .5;
wave_0_per_point1=seg = seg*above(sample,0);
wave_0_per_point2=it = (it + 1)*above(sample,0);
wave_0_per_point3=seg = seg + equal(ita,0);
wave_0_per_point4=ita = (ita + 1)*above(sample,0)*below(ita,50);
wave_0_per_point5=ra = if(ra,ra,int(rand(2)))*below(sample,1);
wave_0_per_point6=
wave_0_per_point7=
wave_0_per_point8=toll = toll*above(sample,0);
wave_0_per_point9=toll = toll + value1 + value2;
wave_0_per_point10=tav = min(toll/50*.01,.2)*1;
wave_0_per_point11=
wave_0_per_point12=sp = sample*6.2832;
wave_0_per_point13=mod = int(rand(1001))*.001*bass*.5 - int(rand(1001))*.001*(mid+treb)*.125;
wave_0_per_point14=mod = if(ra,bass*.5*(.5 + .5*sin(sp)) - (mid+treb)*.25*(.5 + .5*cos(sp)),mod);
wave_0_per_point15=
wave_0_per_point16=toll = toll*(1-equal(ita,50));
wave_0_per_point17=
wave_0_per_point18=
wave_0_per_point19=la = if((1-t3)*equal(ita,50)*equal(seg,1),tav,la);
wave_0_per_point20=lb = if((1-t3)*equal(ita,50)*equal(seg,2),tav,lb);
wave_0_per_point21=lc = if((1-t3)*equal(ita,50)*equal(seg,3),tav,lc);
wave_0_per_point22=ld = if((1-t3)*equal(ita,50)*equal(seg,4),tav,ld);
wave_0_per_point23=le = if((1-t3)*equal(ita,50)*equal(seg,5),tav,le);
wave_0_per_point24=lf = if((1-t3)*equal(ita,50)*equal(seg,6),tav,lf);
wave_0_per_point25=lg = if((1-t3)*equal(ita,50)*equal(seg,7),tav,lg);
wave_0_per_point26=li = if((1-t3)*equal(ita,50)*equal(seg,8),tav,li);
wave_0_per_point27=lj = if((1-t3)*equal(ita,50)*equal(seg,9),tav,lj);
wave_0_per_point28=lk = if((1-t3)*equal(ita,50)*equal(seg,10),tav,lk);
wave_0_per_point29=
wave_0_per_point30=aa = if((1-t3)*equal(ita,50)*equal(seg,1),mod,aa);
wave_0_per_point31=ab = if((1-t3)*equal(ita,50)*equal(seg,2),mod,ab);
wave_0_per_point32=ac = if((1-t3)*equal(ita,50)*equal(seg,3),mod,ac);
wave_0_per_point33=ad = if((1-t3)*equal(ita,50)*equal(seg,4),mod,ad);
wave_0_per_point34=ae = if((1-t3)*equal(ita,50)*equal(seg,5),mod,ae);
wave_0_per_point35=af = if((1-t3)*equal(ita,50)*equal(seg,6),mod,af);
wave_0_per_point36=ag = if((1-t3)*equal(ita,50)*equal(seg,7),mod,ag);
wave_0_per_point37=ai = if((1-t3)*equal(ita,50)*equal(seg,8),mod,ai);
wave_0_per_point38=aj = if((1-t3)*equal(ita,50)*equal(seg,9),mod,aj);
wave_0_per_point39=ak = if((1-t3)*equal(ita,50)*equal(seg,10),mod,ak);
wave_0_per_point40=
wave_0_per_point41=
wave_0_per_point42=lev = lev*above(sample,0);
wave_0_per_point43=ud = ud*above(sample,0);
wave_0_per_point44=rep = rep*above(sample,0);
wave_0_per_point45=
wave_0_per_point46=lev = if(ud,lev-1,lev+1);
wave_0_per_point47=rep = (rep + equal(lev,0));
wave_0_per_point48=ud = if(equal(lev,0),0,if(equal(lev,10),1,ud));
wave_0_per_point49=
wave_0_per_point50=mx = above(lev,0)*la*sin(aa) + above(lev,1)*lb*sin(ab) + above(lev,2)*lc*sin(ac) + above(lev,3)*ld*sin(ad);
wave_0_per_point51=my = above(lev,0)*la*cos(aa) + above(lev,1)*lb*cos(ab) + above(lev,2)*lc*cos(ac) + above(lev,3)*ld*cos(ad);
wave_0_per_point52=mx = mx + above(lev,4)*le*sin(ae) + above(lev,5)*lf*sin(af) + above(lev,6)*lg*sin(ag);
wave_0_per_point53=my = my + above(lev,4)*le*cos(ae) + above(lev,5)*lf*cos(af) + above(lev,6)*lg*cos(ag);
wave_0_per_point54=mx = mx + above(lev,7)*li*sin(ai) + above(lev,8)*lj*sin(aj);// + above(lev,9)*lk*sin(ak);
wave_0_per_point55=my = my + above(lev,7)*li*cos(ai) + above(lev,8)*lj*cos(aj) + above(lev,9)*lk*cos(ak);
wave_0_per_point56=mx = (1-2*equal(ud,1))*mx*(1-equal(lev,10));
wave_0_per_point57=
wave_0_per_point58=poi = if(poi,poi,3 + int(rand(3)) + int(rand(3)))*above(sample,0);
wave_0_per_point59=modx = if(equal(lev,poi)*ud,mx,modx);
wave_0_per_point60=mody = if(equal(lev,poi)*ud,my,mody);
wave_0_per_point61=mang = (above(rep,7)*below(rep,14) - above(rep,15)*below(rep,22))*above(lev,poi);
wave_0_per_point62=modx = 0;
wave_0_per_point63=mx = mx - modx;
wave_0_per_point64=my = my - mody;
wave_0_per_point65=ox = mx*cos(mang) - my*sin(mang);
wave_0_per_point66=oy = mx*sin(mang) + my*cos(mang);
wave_0_per_point67=mx = ox + modx;
wave_0_per_point68=my = oy + mody;
wave_0_per_point69=
wave_0_per_point70=spin = if(above(sample,0),spin,int(rand(1001))*.001*6.2832);
wave_0_per_point71=mang = above(rep,1)*rep*1.0472 + spin; // add branches via rotation
wave_0_per_point72=ox = mx*cos(mang) - my*sin(mang);
wave_0_per_point73=oy = mx*sin(mang) + my*cos(mang);
wave_0_per_point74=mx = ox;
wave_0_per_point75=my = oy;
wave_0_per_point76=
wave_0_per_point77=x = mx*.75 + t1;
wave_0_per_point78=y = my + t2;
wave_0_per_point79=
wave_0_per_point80=a = t3; // drawn every 2nd frame, gets values in other one
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = int(rand(1001))*.001;
wave_1_per_frame2=t2 = int(rand(1001))*.001;
wave_1_per_frame3=
wave_1_per_frame4=it = (it + 1)*below(it,2000);
wave_1_per_frame5=
wave_1_per_frame6=sw = 1- sw;
wave_1_per_frame7=//sw = equal(it%20,0);
wave_1_per_frame8=t3 = sw;
wave_1_per_frame9=
wave_1_per_frame10=//t1 = .5;
wave_1_per_frame11=//t2 = .5;
wave_1_per_point1=seg = seg*above(sample,0);
wave_1_per_point2=it = (it + 1)*above(sample,0);
wave_1_per_point3=seg = seg + equal(ita,0);
wave_1_per_point4=ita = (ita + 1)*above(sample,0)*below(ita,50);
wave_1_per_point5=ra = if(ra,ra,int(rand(2)))*below(sample,1);
wave_1_per_point6=
wave_1_per_point7=
wave_1_per_point8=toll = toll*above(sample,0);
wave_1_per_point9=toll = toll + value1 + value2;
wave_1_per_point10=tav = min(toll/50*.01,.2)*1.25;
wave_1_per_point11=
wave_1_per_point12=sp = sample*6.2832;
wave_1_per_point13=mod = int(rand(1001))*.001*bass*.5 - int(rand(1001))*.001*(mid+treb)*.125;
wave_1_per_point14=mod = if(ra,bass*.5*(.5 + .5*sin(sp)) - (mid+treb)*.25*(.5 + .5*cos(sp)),mod);
wave_1_per_point15=
wave_1_per_point16=toll = toll*(1-equal(ita,50));
wave_1_per_point17=
wave_1_per_point18=
wave_1_per_point19=la = if((1-t3)*equal(ita,50)*equal(seg,1),tav,la);
wave_1_per_point20=lb = if((1-t3)*equal(ita,50)*equal(seg,2),tav,lb);
wave_1_per_point21=lc = if((1-t3)*equal(ita,50)*equal(seg,3),tav,lc);
wave_1_per_point22=ld = if((1-t3)*equal(ita,50)*equal(seg,4),tav,ld);
wave_1_per_point23=le = if((1-t3)*equal(ita,50)*equal(seg,5),tav,le);
wave_1_per_point24=lf = if((1-t3)*equal(ita,50)*equal(seg,6),tav,lf);
wave_1_per_point25=lg = if((1-t3)*equal(ita,50)*equal(seg,7),tav,lg);
wave_1_per_point26=li = if((1-t3)*equal(ita,50)*equal(seg,8),tav,li);
wave_1_per_point27=lj = if((1-t3)*equal(ita,50)*equal(seg,9),tav,lj);
wave_1_per_point28=lk = if((1-t3)*equal(ita,50)*equal(seg,10),tav,lk);
wave_1_per_point29=
wave_1_per_point30=aa = if((1-t3)*equal(ita,50)*equal(seg,1),mod,aa);
wave_1_per_point31=ab = if((1-t3)*equal(ita,50)*equal(seg,2),mod,ab);
wave_1_per_point32=ac = if((1-t3)*equal(ita,50)*equal(seg,3),mod,ac);
wave_1_per_point33=ad = if((1-t3)*equal(ita,50)*equal(seg,4),mod,ad);
wave_1_per_point34=ae = if((1-t3)*equal(ita,50)*equal(seg,5),mod,ae);
wave_1_per_point35=af = if((1-t3)*equal(ita,50)*equal(seg,6),mod,af);
wave_1_per_point36=ag = if((1-t3)*equal(ita,50)*equal(seg,7),mod,ag);
wave_1_per_point37=ai = if((1-t3)*equal(ita,50)*equal(seg,8),mod,ai);
wave_1_per_point38=aj = if((1-t3)*equal(ita,50)*equal(seg,9),mod,aj);
wave_1_per_point39=ak = if((1-t3)*equal(ita,50)*equal(seg,10),mod,ak);
wave_1_per_point40=
wave_1_per_point41=
wave_1_per_point42=lev = lev*above(sample,0);
wave_1_per_point43=ud = ud*above(sample,0);
wave_1_per_point44=rep = rep*above(sample,0);
wave_1_per_point45=
wave_1_per_point46=lev = if(ud,lev-1,lev+1);
wave_1_per_point47=rep = (rep + equal(lev,0));
wave_1_per_point48=ud = if(equal(lev,0),0,if(equal(lev,10),1,ud));
wave_1_per_point49=
wave_1_per_point50=mx = above(lev,0)*la*sin(aa) + above(lev,1)*lb*sin(ab) + above(lev,2)*lc*sin(ac) + above(lev,3)*ld*sin(ad);
wave_1_per_point51=my = above(lev,0)*la*cos(aa) + above(lev,1)*lb*cos(ab) + above(lev,2)*lc*cos(ac) + above(lev,3)*ld*cos(ad);
wave_1_per_point52=mx = mx + above(lev,4)*le*sin(ae) + above(lev,5)*lf*sin(af) + above(lev,6)*lg*sin(ag);
wave_1_per_point53=my = my + above(lev,4)*le*cos(ae) + above(lev,5)*lf*cos(af) + above(lev,6)*lg*cos(ag);
wave_1_per_point54=mx = mx + above(lev,7)*li*sin(ai) + above(lev,8)*lj*sin(aj);// + above(lev,9)*lk*sin(ak);
wave_1_per_point55=my = my + above(lev,7)*li*cos(ai) + above(lev,8)*lj*cos(aj) + above(lev,9)*lk*cos(ak);
wave_1_per_point56=mx = (1-2*equal(ud,1))*mx*(1-equal(lev,10));
wave_1_per_point57=
wave_1_per_point58=poi = if(poi,poi,3 + int(rand(3)) + int(rand(3)))*above(sample,0);
wave_1_per_point59=modx = if(equal(lev,poi)*ud,mx,modx);
wave_1_per_point60=mody = if(equal(lev,poi)*ud,my,mody);
wave_1_per_point61=mang = (above(rep,7)*below(rep,14) - above(rep,15)*below(rep,22))*above(lev,poi);
wave_1_per_point62=modx = 0;
wave_1_per_point63=mx = mx - modx;
wave_1_per_point64=my = my - mody;
wave_1_per_point65=ox = mx*cos(mang) - my*sin(mang);
wave_1_per_point66=oy = mx*sin(mang) + my*cos(mang);
wave_1_per_point67=mx = ox + modx;
wave_1_per_point68=my = oy + mody;
wave_1_per_point69=
wave_1_per_point70=spin = if(above(sample,0),spin,int(rand(1001))*.001*6.2832);
wave_1_per_point71=mang = above(rep,1)*rep*1.0472 + spin; // add branches via rotation
wave_1_per_point72=ox = mx*cos(mang) - my*sin(mang);
wave_1_per_point73=oy = mx*sin(mang) + my*cos(mang);
wave_1_per_point74=mx = ox;
wave_1_per_point75=my = oy;
wave_1_per_point76=
wave_1_per_point77=x = mx*.75 + t1;
wave_1_per_point78=y = my + t2;
wave_1_per_point79=
wave_1_per_point80=a = t3; // drawn every 2nd frame, gets values in other one
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=t1 = int(rand(1001))*.001;
wave_2_per_frame2=t2 = int(rand(1001))*.001;
wave_2_per_frame3=
wave_2_per_frame4=it = (it + 1)*below(it,2000);
wave_2_per_frame5=
wave_2_per_frame6=sw = 1- sw;
wave_2_per_frame7=//sw = equal(it%20,0);
wave_2_per_frame8=t3 = 1-sw;
wave_2_per_frame9=
wave_2_per_frame10=//t1 = .5;
wave_2_per_frame11=//t2 = .5;
wave_2_per_point1=seg = seg*above(sample,0);
wave_2_per_point2=it = (it + 1)*above(sample,0);
wave_2_per_point3=seg = seg + equal(ita,0);
wave_2_per_point4=ita = (ita + 1)*above(sample,0)*below(ita,50);
wave_2_per_point5=ra = if(ra,ra,int(rand(2)))*below(sample,1);
wave_2_per_point6=
wave_2_per_point7=
wave_2_per_point8=toll = toll*above(sample,0);
wave_2_per_point9=toll = toll + value1 + value2;
wave_2_per_point10=tav = min(toll/50*.01,.2)*1;
wave_2_per_point11=
wave_2_per_point12=sp = sample*6.2832;
wave_2_per_point13=mod = int(rand(1001))*.001*bass*.5 - int(rand(1001))*.001*(mid+treb)*.125;
wave_2_per_point14=mod = if(ra,bass*.5*(.5 + .5*sin(sp)) - (mid+treb)*.25*(.5 + .5*cos(sp)),mod);
wave_2_per_point15=
wave_2_per_point16=toll = toll*(1-equal(ita,50));
wave_2_per_point17=
wave_2_per_point18=
wave_2_per_point19=la = if((1-t3)*equal(ita,50)*equal(seg,1),tav,la);
wave_2_per_point20=lb = if((1-t3)*equal(ita,50)*equal(seg,2),tav,lb);
wave_2_per_point21=lc = if((1-t3)*equal(ita,50)*equal(seg,3),tav,lc);
wave_2_per_point22=ld = if((1-t3)*equal(ita,50)*equal(seg,4),tav,ld);
wave_2_per_point23=le = if((1-t3)*equal(ita,50)*equal(seg,5),tav,le);
wave_2_per_point24=lf = if((1-t3)*equal(ita,50)*equal(seg,6),tav,lf);
wave_2_per_point25=lg = if((1-t3)*equal(ita,50)*equal(seg,7),tav,lg);
wave_2_per_point26=li = if((1-t3)*equal(ita,50)*equal(seg,8),tav,li);
wave_2_per_point27=lj = if((1-t3)*equal(ita,50)*equal(seg,9),tav,lj);
wave_2_per_point28=lk = if((1-t3)*equal(ita,50)*equal(seg,10),tav,lk);
wave_2_per_point29=
wave_2_per_point30=aa = if((1-t3)*equal(ita,50)*equal(seg,1),mod,aa);
wave_2_per_point31=ab = if((1-t3)*equal(ita,50)*equal(seg,2),mod,ab);
wave_2_per_point32=ac = if((1-t3)*equal(ita,50)*equal(seg,3),mod,ac);
wave_2_per_point33=ad = if((1-t3)*equal(ita,50)*equal(seg,4),mod,ad);
wave_2_per_point34=ae = if((1-t3)*equal(ita,50)*equal(seg,5),mod,ae);
wave_2_per_point35=af = if((1-t3)*equal(ita,50)*equal(seg,6),mod,af);
wave_2_per_point36=ag = if((1-t3)*equal(ita,50)*equal(seg,7),mod,ag);
wave_2_per_point37=ai = if((1-t3)*equal(ita,50)*equal(seg,8),mod,ai);
wave_2_per_point38=aj = if((1-t3)*equal(ita,50)*equal(seg,9),mod,aj);
wave_2_per_point39=ak = if((1-t3)*equal(ita,50)*equal(seg,10),mod,ak);
wave_2_per_point40=
wave_2_per_point41=
wave_2_per_point42=lev = lev*above(sample,0);
wave_2_per_point43=ud = ud*above(sample,0);
wave_2_per_point44=rep = rep*above(sample,0);
wave_2_per_point45=
wave_2_per_point46=lev = if(ud,lev-1,lev+1);
wave_2_per_point47=rep = (rep + equal(lev,0));
wave_2_per_point48=ud = if(equal(lev,0),0,if(equal(lev,10),1,ud));
wave_2_per_point49=
wave_2_per_point50=mx = above(lev,0)*la*sin(aa) + above(lev,1)*lb*sin(ab) + above(lev,2)*lc*sin(ac) + above(lev,3)*ld*sin(ad);
wave_2_per_point51=my = above(lev,0)*la*cos(aa) + above(lev,1)*lb*cos(ab) + above(lev,2)*lc*cos(ac) + above(lev,3)*ld*cos(ad);
wave_2_per_point52=mx = mx + above(lev,4)*le*sin(ae) + above(lev,5)*lf*sin(af) + above(lev,6)*lg*sin(ag);
wave_2_per_point53=my = my + above(lev,4)*le*cos(ae) + above(lev,5)*lf*cos(af) + above(lev,6)*lg*cos(ag);
wave_2_per_point54=mx = mx + above(lev,7)*li*sin(ai) + above(lev,8)*lj*sin(aj);// + above(lev,9)*lk*sin(ak);
wave_2_per_point55=my = my + above(lev,7)*li*cos(ai) + above(lev,8)*lj*cos(aj) + above(lev,9)*lk*cos(ak);
wave_2_per_point56=mx = (1-2*equal(ud,1))*mx*(1-equal(lev,10));
wave_2_per_point57=
wave_2_per_point58=poi = if(poi,poi,3 + int(rand(3)) + int(rand(3)))*above(sample,0);
wave_2_per_point59=modx = if(equal(lev,poi)*ud,mx,modx);
wave_2_per_point60=mody = if(equal(lev,poi)*ud,my,mody);
wave_2_per_point61=mang = (above(rep,7)*below(rep,14) - above(rep,15)*below(rep,22))*above(lev,poi);
wave_2_per_point62=modx = 0;
wave_2_per_point63=mx = mx - modx;
wave_2_per_point64=my = my - mody;
wave_2_per_point65=ox = mx*cos(mang) - my*sin(mang);
wave_2_per_point66=oy = mx*sin(mang) + my*cos(mang);
wave_2_per_point67=mx = ox + modx;
wave_2_per_point68=my = oy + mody;
wave_2_per_point69=
wave_2_per_point70=spin = if(above(sample,0),spin,int(rand(1001))*.001*6.2832);
wave_2_per_point71=mang = above(rep,1)*rep*1.0472 + spin; // add branches via rotation
wave_2_per_point72=ox = mx*cos(mang) - my*sin(mang);
wave_2_per_point73=oy = mx*sin(mang) + my*cos(mang);
wave_2_per_point74=mx = ox;
wave_2_per_point75=my = oy;
wave_2_per_point76=
wave_2_per_point77=x = mx*.75 + t1;
wave_2_per_point78=y = my + t2;
wave_2_per_point79=
wave_2_per_point80=a = t3; // drawn every 2nd frame, gets values in other one
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=t1 = int(rand(1001))*.001;
wave_3_per_frame2=t2 = int(rand(1001))*.001;
wave_3_per_frame3=
wave_3_per_frame4=it = (it + 1)*below(it,2000);
wave_3_per_frame5=
wave_3_per_frame6=sw = 1- sw;
wave_3_per_frame7=//sw = equal(it%20,0);
wave_3_per_frame8=t3 = 1-sw;
wave_3_per_frame9=
wave_3_per_frame10=//t1 = .5;
wave_3_per_frame11=//t2 = .5;
wave_3_per_point1=seg = seg*above(sample,0);
wave_3_per_point2=it = (it + 1)*above(sample,0);
wave_3_per_point3=seg = seg + equal(ita,0);
wave_3_per_point4=ita = (ita + 1)*above(sample,0)*below(ita,50);
wave_3_per_point5=ra = if(ra,ra,int(rand(2)))*below(sample,1);
wave_3_per_point6=
wave_3_per_point7=
wave_3_per_point8=toll = toll*above(sample,0);
wave_3_per_point9=toll = toll + value1 + value2;
wave_3_per_point10=tav = min(toll/50*.01,.2)*1.5;
wave_3_per_point11=
wave_3_per_point12=sp = sample*6.2832;
wave_3_per_point13=mod = int(rand(1001))*.001*bass*.5 - int(rand(1001))*.001*(mid+treb)*.125;
wave_3_per_point14=mod = if(ra,bass*.5*(.5 + .5*sin(sp)) - (mid+treb)*.25*(.5 + .5*cos(sp)),mod);
wave_3_per_point15=
wave_3_per_point16=toll = toll*(1-equal(ita,50));
wave_3_per_point17=
wave_3_per_point18=
wave_3_per_point19=la = if((1-t3)*equal(ita,50)*equal(seg,1),tav,la);
wave_3_per_point20=lb = if((1-t3)*equal(ita,50)*equal(seg,2),tav,lb);
wave_3_per_point21=lc = if((1-t3)*equal(ita,50)*equal(seg,3),tav,lc);
wave_3_per_point22=ld = if((1-t3)*equal(ita,50)*equal(seg,4),tav,ld);
wave_3_per_point23=le = if((1-t3)*equal(ita,50)*equal(seg,5),tav,le);
wave_3_per_point24=lf = if((1-t3)*equal(ita,50)*equal(seg,6),tav,lf);
wave_3_per_point25=lg = if((1-t3)*equal(ita,50)*equal(seg,7),tav,lg);
wave_3_per_point26=li = if((1-t3)*equal(ita,50)*equal(seg,8),tav,li);
wave_3_per_point27=lj = if((1-t3)*equal(ita,50)*equal(seg,9),tav,lj);
wave_3_per_point28=lk = if((1-t3)*equal(ita,50)*equal(seg,10),tav,lk);
wave_3_per_point29=
wave_3_per_point30=aa = if((1-t3)*equal(ita,50)*equal(seg,1),mod,aa);
wave_3_per_point31=ab = if((1-t3)*equal(ita,50)*equal(seg,2),mod,ab);
wave_3_per_point32=ac = if((1-t3)*equal(ita,50)*equal(seg,3),mod,ac);
wave_3_per_point33=ad = if((1-t3)*equal(ita,50)*equal(seg,4),mod,ad);
wave_3_per_point34=ae = if((1-t3)*equal(ita,50)*equal(seg,5),mod,ae);
wave_3_per_point35=af = if((1-t3)*equal(ita,50)*equal(seg,6),mod,af);
wave_3_per_point36=ag = if((1-t3)*equal(ita,50)*equal(seg,7),mod,ag);
wave_3_per_point37=ai = if((1-t3)*equal(ita,50)*equal(seg,8),mod,ai);
wave_3_per_point38=aj = if((1-t3)*equal(ita,50)*equal(seg,9),mod,aj);
wave_3_per_point39=ak = if((1-t3)*equal(ita,50)*equal(seg,10),mod,ak);
wave_3_per_point40=
wave_3_per_point41=
wave_3_per_point42=lev = lev*above(sample,0);
wave_3_per_point43=ud = ud*above(sample,0);
wave_3_per_point44=rep = rep*above(sample,0);
wave_3_per_point45=
wave_3_per_point46=lev = if(ud,lev-1,lev+1);
wave_3_per_point47=rep = (rep + equal(lev,0));
wave_3_per_point48=ud = if(equal(lev,0),0,if(equal(lev,10),1,ud));
wave_3_per_point49=
wave_3_per_point50=mx = above(lev,0)*la*sin(aa) + above(lev,1)*lb*sin(ab) + above(lev,2)*lc*sin(ac) + above(lev,3)*ld*sin(ad);
wave_3_per_point51=my = above(lev,0)*la*cos(aa) + above(lev,1)*lb*cos(ab) + above(lev,2)*lc*cos(ac) + above(lev,3)*ld*cos(ad);
wave_3_per_point52=mx = mx + above(lev,4)*le*sin(ae) + above(lev,5)*lf*sin(af) + above(lev,6)*lg*sin(ag);
wave_3_per_point53=my = my + above(lev,4)*le*cos(ae) + above(lev,5)*lf*cos(af) + above(lev,6)*lg*cos(ag);
wave_3_per_point54=mx = mx + above(lev,7)*li*sin(ai) + above(lev,8)*lj*sin(aj);// + above(lev,9)*lk*sin(ak);
wave_3_per_point55=my = my + above(lev,7)*li*cos(ai) + above(lev,8)*lj*cos(aj) + above(lev,9)*lk*cos(ak);
wave_3_per_point56=mx = (1-2*equal(ud,1))*mx*(1-equal(lev,10));
wave_3_per_point57=
wave_3_per_point58=poi = if(poi,poi,3 + int(rand(3)) + int(rand(3)))*above(sample,0);
wave_3_per_point59=modx = if(equal(lev,poi)*ud,mx,modx);
wave_3_per_point60=mody = if(equal(lev,poi)*ud,my,mody);
wave_3_per_point61=mang = (above(rep,7)*below(rep,14) - above(rep,15)*below(rep,22))*above(lev,poi);
wave_3_per_point62=modx = 0;
wave_3_per_point63=mx = mx - modx;
wave_3_per_point64=my = my - mody;
wave_3_per_point65=ox = mx*cos(mang) - my*sin(mang);
wave_3_per_point66=oy = mx*sin(mang) + my*cos(mang);
wave_3_per_point67=mx = ox + modx;
wave_3_per_point68=my = oy + mody;
wave_3_per_point69=
wave_3_per_point70=spin = if(above(sample,0),spin,int(rand(1001))*.001*6.2832);
wave_3_per_point71=mang = above(rep,1)*rep*1.0472 + spin; // add branches via rotation
wave_3_per_point72=ox = mx*cos(mang) - my*sin(mang);
wave_3_per_point73=oy = mx*sin(mang) + my*cos(mang);
wave_3_per_point74=mx = ox;
wave_3_per_point75=my = oy;
wave_3_per_point76=
wave_3_per_point77=x = mx*.75 + t1;
wave_3_per_point78=y = my + t2;
wave_3_per_point79=
wave_3_per_point80=a = t3; // drawn every 2nd frame, gets values in other one
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=4.84545
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.12374
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.200
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=tex_zoom = 1/rad*.8;
shape_0_per_frame2=
shape_0_per_frame3=a2 = a;
shapecode_1_enabled=1
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=4.84545
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.12374
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.100
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=tex_zoom = 1/rad;
shape_1_per_frame2=
shape_1_per_frame3=a2 = a;
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=bl = 3.8;
per_frame_2=ul = 7.9;
per_frame_3=rate = 29;
per_frame_4=cha = .01;
per_frame_5=ib_size = 1;
per_frame_6=ib_r = 1;
per_frame_7=ib_g = 0;
per_frame_8=ib_b = 0;
per_frame_9=
per_frame_10=//warp = 0;
per_frame_11=gv = if(above(gv,bl),  if(below(gv,ul),  if(above(fps,rate),gv + cha,gv - cha),  ul-.1),bl+.1);
per_frame_12=
per_frame_13=gamma = gv;
per_frame_14=
per_frame_15=monitor = gv;
per_frame_16=
per_frame_17=
per_frame_18=tic = min(time-tin,.1);
per_frame_19=tin = time;
per_frame_20=
per_frame_21=ra = 1/tic*.25;
per_frame_22=vav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);
per_frame_23=
per_frame_24=dy = .004*(1.6+vav*.4);
per_frame_25=
per_frame_26=//monitor = ra;
per_frame_27=chng=sin(time*.5);
per_frame_28=cthr=.9999;
per_frame_29=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_30=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_31=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_32=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_33=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_34=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_35=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_36=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_37=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_38=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_39=monitor=chng;
per_frame_40=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_41=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_42=
per_frame_43=monitor=mq1;
per_frame_44=vol=bass+treb+mid;
per_frame_45=atime=atime+vol;
per_frame_46=q11=.4+sin(atime*.006        )*.4;
per_frame_47=q12=.4+cos(atime*.00613828348)*.4;
per_frame_48=q13=.4+sin(atime*.00598593455)*.4;
per_frame_49=monitor=q13;
per_frame_50=
per_frame_51=
warp_1=`sampler sampler_lichen;
warp_2=`
warp_3=`shader_body
warp_4=`{
warp_5=`    // PAINTERLY EFFECT:
warp_6=`    float2 uv2 = uv;
warp_7=`    float2 delta2 = texsize.zw*float2(1,1);
warp_8=`    float3 blurry_color = tex2D( sampler_main, 
warp_9=`        lerp(uv,uv_orig,-1) + delta2 ).xyz;
warp_10=`    uv2.xy += (blurry_color.xy-0.5) * q1;
warp_11=`
warp_12=`    // sample previous frame
warp_13=`    ret = tex2D( sampler_main, uv2 ).xyz;
warp_14=`
warp_15=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_16=`                      ((uv2.xyy*q27
warp_17=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_18=`                      ).xyz*
warp_19=`                      float3(1,1,0)*0.05 + 
warp_20=`                      time*float3(0,0,1)*q29
warp_21=`                     );
warp_22=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_23=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_24=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_25=`
warp_26=`    // push all colors toward 0.5:
warp_27=`    ret.xyz -= (saturate((ret.xyz-0.5)*99)*2-1)*float3(1,1,0)*0.001;
warp_28=`
warp_29=`    float2 uv3 = float2(slow_roam_cos.w,slow_roam_sin.z)*0.7 + uv_orig.xy*0.2;
warp_30=`    ret.xyz *= 0.998 - 0.1*saturate(tex2D(sampler_lichen, uv3).y*5-3.7);
warp_31=`
warp_32=`    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
warp_33=`    ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*15;
warp_34=`}
comp_1=`sampler sampler_fw_sky;
comp_2=`shader_body
comp_3=`{
comp_4=`float2 uvm = frac(uv + time*.0);
comp_5=`
comp_6=`ret = tex2D(sampler_main,uvm);
comp_7=`float diff = 1-length(ret.xy-GetBlur1(uvm).xy)*3.5;
comp_8=`diff *=1-length(ret.xy-GetBlur2(uvm).xy)*1;
comp_9=`ret.xy *= diff;
comp_10=`ret.z = pow(diff,1/(1-uvm.x));
comp_11=`
comp_12=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_13=`                      ((uvm.xyy*q28
comp_14=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_15=`                      ).xyz*
comp_16=`                      float3(1,1,0)*0.05 + 
comp_17=`                      time*float3(0,0,1)*q31
comp_18=`                     );
comp_19=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_20=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_21=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_22=`ret=.7-ret;
comp_23=`}
