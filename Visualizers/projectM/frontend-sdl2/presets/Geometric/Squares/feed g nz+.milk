MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.560
fDecay=1.000
fVideoEchoZoom=0.362
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=1.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=4.950
mv_r=1.000
mv_g=0.300
mv_b=0.200
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.100
wave_0_per_point1=//q1 = state;
wave_0_per_point2=//q2 = basstime;
wave_0_per_point3=
wave_0_per_point4=q1 = 0;
wave_0_per_point5=speed = bass_att*0.3;
wave_0_per_point6=v = sample*10000 + value2*bass*0.1;
wave_0_per_point7=
wave_0_per_point8=//state 0 elipse
wave_0_per_point9=xs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);
wave_0_per_point10=ys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);
wave_0_per_point11=
wave_0_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*1 + ys);
wave_0_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*1.1 + xs);
wave_0_per_point14=
wave_0_per_point15=
wave_0_per_point16=r = 0.5 + 0.5*sin(time*0.22) + 0.1;
wave_0_per_point17=g = 0.1 + 0.4*sin(time*0.307) + x;
wave_0_per_point18=//b = 0.4 + 0.4*sin(time*0.959);
wave_0_per_point19=
wave_0_per_point20=
wave_0_per_point21=xs = if(above(xs,1000),0 ,xs);
wave_0_per_point22=ys = if(above(ys,1000),0 ,ys);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=0.200
wavecode_1_b=0.200
wavecode_1_a=0.200
wave_1_per_point1=u = sample*3.14*2;
wave_1_per_point2=v = sample*6.28*20;
wave_1_per_point3=
wave_1_per_point4=xs = cos(u)*sin(v);
wave_1_per_point5=ys = sin(u)*sin(v);
wave_1_per_point6=zs = pow(sin(v),3);
wave_1_per_point7=
wave_1_per_point8=
wave_1_per_point9=//rotate x axis
wave_1_per_point10=angle = q2*0.3;
wave_1_per_point11=yx = ys*cos(angle) - zs*sin(angle);
wave_1_per_point12=zx = ys*sin(angle) + zs*cos(angle);
wave_1_per_point13=xx = xs;
wave_1_per_point14=
wave_1_per_point15=//rotate y axis
wave_1_per_point16=angle2 = q2*0.5;
wave_1_per_point17=xd = xx*cos(angle2) - zx*sin(angle2);
wave_1_per_point18=zd = xx*sin(angle2) + zx*cos(angle2);
wave_1_per_point19=yd = yx;
wave_1_per_point20=
wave_1_per_point21=//rotaye z axis
wave_1_per_point22=angle3 = q2*0.41;
wave_1_per_point23=xn = xd*cos(angle3) - yd*sin(angle3);
wave_1_per_point24=yn = xd*sin(angle3) + yd*cos(angle3);
wave_1_per_point25=
wave_1_per_point26=
wave_1_per_point27=zd = zd +2;
wave_1_per_point28=
wave_1_per_point29=x = xn/zd*0.5+ 0.5;
wave_1_per_point30=y = yn/zd*0.5+ 0.5;
wave_1_per_point31=
wave_1_per_point32=
wave_1_per_point33=r = sin(q2);
wave_1_per_point34=g = sin(q2*2);
wave_1_per_point35=b = sin(q2*3);
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=u = sample*3.14*2;
wave_2_per_point2=v = sample*6.28*20;
wave_2_per_point3=
wave_2_per_point4=xs = cos(u)*sin(v);
wave_2_per_point5=ys = sin(u)*sin(v);
wave_2_per_point6=zs = pow(sin(v),3);
wave_2_per_point7=
wave_2_per_point8=
wave_2_per_point9=//rotate x axis
wave_2_per_point10=angle = q2*0.3;
wave_2_per_point11=yx = ys*cos(angle) - zs*sin(angle);
wave_2_per_point12=zx = ys*sin(angle) + zs*cos(angle);
wave_2_per_point13=xx = xs;
wave_2_per_point14=
wave_2_per_point15=//rotate y axis
wave_2_per_point16=angle2 = q2*0.5;
wave_2_per_point17=xd = xx*cos(angle2) - zx*sin(angle2);
wave_2_per_point18=zd = xx*sin(angle2) + zx*cos(angle2);
wave_2_per_point19=yd = yx;
wave_2_per_point20=
wave_2_per_point21=//rotaye z axis
wave_2_per_point22=angle3 = q2*0.41 + 0.05;
wave_2_per_point23=xn = xd*cos(angle3) - yd*sin(angle3);
wave_2_per_point24=yn = xd*sin(angle3) + yd*cos(angle3);
wave_2_per_point25=
wave_2_per_point26=
wave_2_per_point27=zd = zd +2;
wave_2_per_point28=
wave_2_per_point29=x = xn/zd*0.5+ 0.5;
wave_2_per_point30=y = yn/zd*0.5+ 0.5;
wave_2_per_point31=
wave_2_per_point32=
wave_2_per_point33=r = 0;
wave_2_per_point34=g = 0;
wave_2_per_point35=b = 0;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=//apply zoom burst on beat
wave_3_per_point2=flag = above(q3,2);
wave_3_per_point3=//state zero is ready state
wave_3_per_point4=state = state + flag*equal(state,0);
wave_3_per_point5=
wave_3_per_point6=//upwards flight
wave_3_per_point7=yval = if(equal(state,0),0, yval);
wave_3_per_point8=yval = yval + 0.00004*equal(state,1);
wave_3_per_point9=ymax = if(equal(state,0),int(rand(100))*0.004,ymax);
wave_3_per_point10=
wave_3_per_point11=//hit apogee
wave_3_per_point12=state = if(above(yval,0.5+ymax),2,state);
wave_3_per_point13=
wave_3_per_point14=//reset variable
wave_3_per_point15=yval = if(equal(state,0),0, yval);
wave_3_per_point16=burst = if(equal(state,0),0.001,burst);
wave_3_per_point17=alphax = if(equal(state,0),1,alphax);
wave_3_per_point18=xdriftinc = if(equal(state,0),0,xdriftinc);
wave_3_per_point19=
wave_3_per_point20=burstspeed = if(equal(state,0),int(rand(10)),burstspeed);
wave_3_per_point21=xdrift = if(equal(state,0),int(rand(20)),xdrift);
wave_3_per_point22=//to get the numbers small enough have to use constants
wave_3_per_point23=xdriftinc = xdriftinc
wave_3_per_point24=+ equal(xdrift,0)*equal(state,1)*0.00002
wave_3_per_point25=+ equal(xdrift,1)*equal(state,1)*0.000018
wave_3_per_point26=+ equal(xdrift,2)*equal(state,1)*0.000016
wave_3_per_point27=+ equal(xdrift,3)*equal(state,1)*0.000014
wave_3_per_point28=+ equal(xdrift,4)*equal(state,1)*0.000012
wave_3_per_point29=+ equal(xdrift,5)*equal(state,1)*0.00001
wave_3_per_point30=+ equal(xdrift,6)*equal(state,1)*0.000008
wave_3_per_point31=+ equal(xdrift,7)*equal(state,1)*0.000006
wave_3_per_point32=+ equal(xdrift,8)*equal(state,1)*0.000004
wave_3_per_point33=+ equal(xdrift,9)*equal(state,1)*0.000002
wave_3_per_point34=+ equal(xdrift,11)*equal(state,1)*-0.000002
wave_3_per_point35=+ equal(xdrift,12)*equal(state,1)*-0.000004
wave_3_per_point36=+ equal(xdrift,13)*equal(state,1)*-0.000006
wave_3_per_point37=+ equal(xdrift,14)*equal(state,1)*-0.000008
wave_3_per_point38=+ equal(xdrift,15)*equal(state,1)*-0.00001
wave_3_per_point39=+ equal(xdrift,16)*equal(state,1)*-0.000012
wave_3_per_point40=+ equal(xdrift,17)*equal(state,1)*-0.000014
wave_3_per_point41=+ equal(xdrift,18)*equal(state,1)*-0.000016
wave_3_per_point42=+ equal(xdrift,19)*equal(state,1)*-0.000018;
wave_3_per_point43=
wave_3_per_point44=burst = burst
wave_3_per_point45=+ equal(burstspeed,0)*equal(state,2)*0.000024
wave_3_per_point46=+ equal(burstspeed,1)*equal(state,2)*0.000022
wave_3_per_point47=+ equal(burstspeed,2)*equal(state,2)*0.00002
wave_3_per_point48=+ equal(burstspeed,3)*equal(state,2)*0.000018
wave_3_per_point49=+ equal(burstspeed,4)*equal(state,2)*0.000016
wave_3_per_point50=+ equal(burstspeed,5)*equal(state,2)*0.000014
wave_3_per_point51=+ equal(burstspeed,6)*equal(state,2)*0.000012
wave_3_per_point52=+ equal(burstspeed,7)*equal(state,2)*0.00001
wave_3_per_point53=+ equal(burstspeed,8)*equal(state,2)*0.000008
wave_3_per_point54=+ equal(burstspeed,9)*equal(state,2)*0.000008;
wave_3_per_point55=
wave_3_per_point56=alphax = alphax - 0.00004*equal(state,2);
wave_3_per_point57=state = if(below(alphax,0),0,state);
wave_3_per_point58=
wave_3_per_point59=
wave_3_per_point60=s = sample*3.14*100;
wave_3_per_point61=ss = sample*6.28*1000;
wave_3_per_point62=
wave_3_per_point63=//draw torus
wave_3_per_point64=xs = (burst + 0.0001*cos(s))*cos(ss);
wave_3_per_point65=ys = (burst + 0.0001*cos(s))*sin(ss);
wave_3_per_point66=zs = 0.1*burst*sin(s);
wave_3_per_point67=
wave_3_per_point68=
wave_3_per_point69=//rotate x axis
wave_3_per_point70=angle = sin(-q1*0.035)*6.28;
wave_3_per_point71=yx = ys*cos(angle) - zs*sin(angle);
wave_3_per_point72=zx = ys*sin(angle) + zs*cos(angle);
wave_3_per_point73=xx = xs;
wave_3_per_point74=
wave_3_per_point75=//rotate y axis
wave_3_per_point76=angle2 = sin(-q1*0.03)*6.28;
wave_3_per_point77=xd = xx*cos(angle2) - zx*sin(angle2);
wave_3_per_point78=zd = xx*sin(angle2) + zx*cos(angle2);
wave_3_per_point79=yd = yx;
wave_3_per_point80=
wave_3_per_point81=//rotaye z axis
wave_3_per_point82=angle3 = sin(-q1*0.022)*6.28;
wave_3_per_point83=xn = xd*cos(angle3) - yd*sin(angle3);
wave_3_per_point84=yn = xd*sin(angle3) + yd*cos(angle3);
wave_3_per_point85=
wave_3_per_point86=zd = zd + 2;
wave_3_per_point87=
wave_3_per_point88=x = xn*zd*0.3 + 0.5;
wave_3_per_point89=y = yn*zd*0.3*1.2;
wave_3_per_point90=
wave_3_per_point91=
wave_3_per_point92=x = x + xdriftinc;
wave_3_per_point93=y = y + sin(yval*1.5) - 0.18;
wave_3_per_point94=
wave_3_per_point95=
wave_3_per_point96=r = 0.5 + 0.5*sin(q1*1.3 + x + x);
wave_3_per_point97=g = 0.5 + 0.5*sin(q1*1.1 + x + y);
wave_3_per_point98=b = 0.5 + 0.5*sin(q1*1.66 + y + y);
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=2.66718
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.45112
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=0.000
shapecode_0_a=0.150
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.050
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shape_0_per_frame1=r = 0.1 + 0.5*sin(q1);
shape_0_per_frame2=g = 0.1 + 0.5*sin(q1*0.9878);
shape_0_per_frame3=b = 0.1 + 0.5*sin(q1*0.897);
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.350
shapecode_1_y=0.000
shapecode_1_rad=0.09959
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.42497
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=r = 0.1 + 0.5*sin(q1*0.01);
shape_1_per_frame2=g = 0.1 + 0.5*sin(q1*0.09878);
shape_1_per_frame3=b = 0.1 + 0.5*sin(q1*0.0897);
shape_1_per_frame4=
shape_1_per_frame5=r2 = 0.1 + 0.5*sin(q1*0.035);
shape_1_per_frame6=g2 = 0.1 + 0.5*sin(q1*0.09878);
shape_1_per_frame7=b2 = 0.1 + 0.5*sin(q1*0.0897);
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.000
shapecode_2_rad=0.10201
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=r = 0.1 + 0.5*sin(q1*0.01);
shape_2_per_frame2=g = 0.1 + 0.5*sin(q1*0.03878);
shape_2_per_frame3=b = 0.1 + 0.5*sin(q1*0.0497);
shape_2_per_frame4=
shape_2_per_frame5=r2 = 0.1 + 0.5*sin(q1*0.065);
shape_2_per_frame6=g2 = 0.1 + 0.5*sin(q1*0.07878);
shape_2_per_frame7=b2 = 0.1 + 0.5*sin(q1*0.0597);
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.650
shapecode_3_y=0.000
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
shape_3_per_frame1=//x = 0.5 + 0.02*sin(time*0.5 + 1.68);
shape_3_per_frame2=//y = 0.5 + 0.02*cos(time*0.5 + 1.68);
shape_3_per_frame3=
shape_3_per_frame4=
shape_3_per_frame5=r = 0.1 + 0.5*sin(q1*0.0144);
shape_3_per_frame6=g = 0.1 + 0.5*sin(q1*0.05878);
shape_3_per_frame7=b = 0.1 + 0.5*sin(q1*0.0797);
shape_3_per_frame8=
shape_3_per_frame9=r2 = 0.1 + 0.5*sin(q1*0.065);
shape_3_per_frame10=g2 = 0.1 + 0.5*sin(q1*0.07878);
shape_3_per_frame11=b2 = 0.1 + 0.5*sin(q1*0.0897);
per_frame_init_1=batr=bass_att+treb_att;
per_frame_init_2=natr=batr;
per_frame_1=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1 = vvb*2;//0.5 + vb - vvb;
per_frame_12=q2 = vvm*2;//0.5 + vm - vvm;
per_frame_13=q3 = vvt*2;//0.5 + vt - vvt;
per_frame_14=v=2;
per_frame_15=bb = bb - vvb*v;
per_frame_16=mm = mm - vvm*v;
per_frame_17=tt = tt - vvt*v;
per_frame_18=q4 = -bb;
per_frame_19=q5 = -mm;
per_frame_20=q6 = -tt;
per_frame_21=q4=(q1+q2+q3)*5;
per_frame_22=q5=(q1+q2+q3)*5;
per_frame_23=q6=(q1+q2+q3)*5;
per_frame_24=q7=(q1+q2+q3)*5;
per_frame_25=q8=(q1+q2+q3)*5;
per_frame_26=q9=(q1+q2+q3)*5;
per_frame_27=q10=(q1+q2+q3)*5;
per_frame_28=q11=(q1+q2+q3)*5;
per_frame_29=q12=(q1+q2+q3)*5;
per_frame_30=q13=(q1+q2+q3)*5;
per_frame_31=q14=(q1+q2+q3)*5;
per_frame_32=q15=(q1+q2+q3)*5;
per_frame_33=q16=(q1+q2+q3)*5;
per_frame_34=q17=(q1+q2+q3)*5;
per_frame_35=q18=(q1+q2+q3)*5;
per_frame_36=q19=(q1+q2+q3)*5;
per_frame_37=q20=(q1+q2+q3)*5;
per_frame_38=q21=(q1+q2+q3)*5;
per_frame_39=q22=(q1+q2+q3)*5;
per_frame_40=q23=(q1+q2+q3)*5;
per_frame_41=q24=(q1+q2+q3)*5;
per_frame_42=q25=(q1+q2+q3)*5;
per_frame_43=q26=(q1+q2+q3)*5;
per_frame_44=q27=(q1+q2+q3)*5;
per_frame_45=q28=(q1+q2+q3)*5;
per_frame_46=q29=(q1+q2+q3)*5;
per_frame_47=q30=(q1+q2+q3)*5;
per_frame_48=q31=(q1+q2+q3)*5;
per_frame_49=q32=(q1+q2+q3)*5;
per_frame_50=
per_frame_51=
per_frame_52=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_frame_53=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_frame_54=dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_frame_55=natr=bass_att+thresh*treb_att;
per_frame_56=cha=abs(batr-natr);
per_frame_57=spik=above(abs(cha-addict),addict);
per_frame_58=addict=(addict+cha)/2;
per_frame_59=
per_frame_60=//effects here
per_frame_61=zoom=zoom+if((above(bass*2,treb)-1),-1,1)*above(cha*thresh,2)*0.1;
per_frame_62=
per_frame_63=
per_frame_64=//added the rotation effect with the same code just to offer some possibilities, activate it if you dare - goody
per_frame_65=//rot=rot+if((above(bass*2,treb)-1),-1,1)*above(cha*thresh,2)*0.1;
per_frame_66=
per_frame_67=//zoomexp=2/zoom;
per_frame_68=mv_r=log(thresh)*spik;
per_frame_69=mv_b=abs(spik*cha-1);
per_frame_70=mv_g=sin(time+thresh);
per_frame_71=mv_a=spik*.75;
per_frame_72=
per_frame_73=//end.
per_frame_74=batr=natr;
per_frame_75=monitor=log(thresh);
per_frame_76=
per_frame_77=
per_frame_78=wave_r = wave_r + 0.35*sin(3*time) + 0.15*sin(2.5*time);
per_frame_79=wave_g = wave_g + 0.35*sin(2.7*time) + 0.15*sin(2.11*time);
per_frame_80=wave_b = wave_b + 0.35*sin(2.84*time) + 0.15*sin(2.3*time);
per_frame_81=
per_frame_82=wave_mystery=wave_mystery*(addict);
per_frame_83=
per_frame_84=
per_frame_85=cog = ocog+0.005*(bass+bass_att+(bass*bass_att)-2);
per_frame_86=ocog = below(cog,30000)*cog;
per_frame_87=
per_frame_88=
per_frame_89=q1=batr;
per_frame_90=q2=spik;
per_frame_91=
per_frame_92=
per_frame_93=
per_frame_94=
per_frame_95=
per_frame_96=
per_frame_97=//Hai guiz, you found the secret message. What are you gonna do now?
per_frame_98=chng=sin(time*.5);
per_frame_99=cthr=.9999;
per_frame_100=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_101=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_102=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_103=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_104=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_105=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_106=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_107=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_108=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_109=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_110=monitor=chng;
per_frame_111=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_112=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_113=
per_frame_114=monitor=mq1;
per_frame_115=vol=bass+treb+mid;
per_frame_116=atime=atime+vol;
per_frame_117=q11=.4+sin(atime*.006        )*.4;
per_frame_118=q12=.4+cos(atime*.00613828348)*.4;
per_frame_119=q13=.4+sin(atime*.00598593455)*.4;
per_frame_120=monitor=q13;
per_frame_121=
per_pixel_1=
per_pixel_2=//Tiles- 
per_pixel_3=//movement first:
per_pixel_4=dxm=.01*sin(time*.41);
per_pixel_5=dym=.01*sin(time*.36);
per_pixel_6=
per_pixel_7=//Now the tiles themselves:
per_pixel_8=dx=dxm+.01*sin(x*80+sin(time))+.005*sin(q1*(y*sin(time*.94)));
per_pixel_9=dy=dym+.01*sin(y*80+sin(time))+.005*sin(q1*(x*sin(time*.97)));
per_pixel_10=//end tiles
per_pixel_11=
warp_1=`sampler sampler_pw_noise_lq;
warp_2=`float3 ret1;
warp_3=`shader_body {
warp_4=`float corr = texsize.xy*texsize_noise_lq.zw;
warp_5=`float2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;
warp_6=`
warp_7=`
warp_8=`float3 noiseVal = lum(tex2D(sampler_noise_lq, corr*uv*.5+ .1*rand_frame));
warp_9=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_10=`                      ((uv1.xyy*q27
warp_11=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_12=`                      ).xyz*
warp_13=`                      float3(1,1,0)*0.05 + 
warp_14=`                      time*float3(0,0,1)*q29
warp_15=`                     );
warp_16=`if(noiseVal.x> q21*q13         && noiseVal.x<= q24*q11        )noiseVal.y -= (noise9).x*.5; 
warp_17=`if(noiseVal.y> q22*q11         && noiseVal.y<= q25*q12        )noiseVal.z -= (noise9).y*.5; 
warp_18=`if(noiseVal.z> q23*q12         && noiseVal.z<= q26*q13        )noiseVal.x -= (noise9).z*.5; 
warp_19=`
warp_20=`float2 hor = float2 (.005,0.007);
warp_21=`float2 ver = float2 (-0.007,.005);
warp_22=`
warp_23=`float f0 = 1;
warp_24=`float dx = f0*lum(tex2D(sampler_main,uv+hor) 
warp_25=`         - tex2D(sampler_main,uv-hor));
warp_26=`float dy = f0*lum(tex2D(sampler_main,uv+ver) 
warp_27=`         - tex2D(sampler_main,uv-ver));
warp_28=`
warp_29=`float2 zz= float2 (dx,dy);
warp_30=`float3 blur = GetBlur1(uv) ;
warp_31=`
warp_32=`zz *= 1-blur;
warp_33=`
warp_34=`float3 crisp = tex2D(sampler_main,uv-zz*.02);
warp_35=`
warp_36=`crisp += noiseVal*(.12) -0.01*pow(1-rad,4);
warp_37=`
warp_38=`ret1 = -blur*.1+ crisp*1.1;
warp_39=`
warp_40=`ret = ret1;
warp_41=` ret *= 0.97;
warp_42=`  ret -= 0.05;
warp_43=`}
comp_1=`shader_body
comp_2=`{
comp_3=`float3 orig,nex;
comp_4=`orig=tex2D(sampler_main,uv);
comp_5=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_6=`                      ((uv.xyy*q28
comp_7=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_8=`                      ).xyz*
comp_9=`                      float3(1,1,0)*0.05 + 
comp_10=`                      time*float3(0,0,1)*q31
comp_11=`                     );
comp_12=`if(orig.x> q26*q13         && orig.x<= q23*q11        )orig.z -= (noise9).x*.5; 
comp_13=`if(orig.y> q25*q11         && orig.y<= q22*q12        )orig.x -= (noise9).y*.5; 
comp_14=`if(orig.z> q24*q12         && orig.z<= q21*q13        )orig.y -= (noise9).z*.5; 
comp_15=`nex=tex2D(sampler_main,float2(uv.x+0.001,uv.y));
comp_16=`if(abs(orig.x+orig.y+orig.z-nex.x-nex.y-nex.z)>0.1)
comp_17=`{ret=GetBlur2(uv);}else
comp_18=`{ret=GetBlur3(uv);}; 
comp_19=`ret+=GetBlur2(uv)+normalize(ret-0.1);
comp_20=`ret=1-ret;
comp_21=`}
