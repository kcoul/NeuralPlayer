MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=0.952
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=6
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.312
fWaveScale=1.229
fWaveSmoothing=0.000
fWaveParam=0.200
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.200
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.250
ib_a=1.000
nMotionVectorsX=32.000
nMotionVectorsY=24.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=0.89152
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.600
wave_0_per_point1=y = sample;
wave_0_per_point2=x = .0 + value1*.1;
wavecode_1_enabled=0
wavecode_1_samples=232
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=0.100
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=23
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=128
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.01000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=4.57482
shapecode_0_r=0.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.800
shapecode_0_border_g=0.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=k1 = instance/num_inst*6.28;
shape_0_per_frame2=
shape_0_per_frame3=oz = k1  +time*.1;
shape_0_per_frame4=oz = 1+int(oz)-oz;
shape_0_per_frame5=
shape_0_per_frame6=fov = .001;
shape_0_per_frame7=trel = time;
shape_0_per_frame8=
shape_0_per_frame9=p1 = sin(trel);
shape_0_per_frame10=p2 = sin(trel/3);
shape_0_per_frame11=p3 = sin(trel/5);
shape_0_per_frame12=p4 = sin(trel/7);
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=ang1 = 6.28*sin(k1*17);
shape_0_per_frame16=rad1 = 4*pow(cos(k1*7),2)+1;
shape_0_per_frame17=
shape_0_per_frame18=
shape_0_per_frame19=ox = rad1*cos(ang1)+ oz*oz*.0/fov*(0*p1*oz + 5*p2*(1-oz));
shape_0_per_frame20=oy = rad1*sin(ang1)+ oz*oz*.0/fov*(0*p3*oz + 5*p4*(1-oz));
shape_0_per_frame21=
shape_0_per_frame22=//oz = oz*oz;
shape_0_per_frame23=//oz = sqrt(oz);
shape_0_per_frame24=
shape_0_per_frame25=k2 = .002;
shape_0_per_frame26=x = fov*ox/(oz+k2)+.5;
shape_0_per_frame27=y = 0*fov*oy/(oz+k2)+.5;
shape_0_per_frame28=y = 0.;
shape_0_per_frame29=rad = abs(fov/oz);
shape_0_per_frame30=a = above(oz,0) *(2-oz)/2*q23;
shape_0_per_frame31=a2 = 0;
shape_0_per_frame32=
shape_0_per_frame33=
shapecode_1_enabled=0
shapecode_1_sides=24
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=1.000
shapecode_1_rad=0.08277
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.49981
shapecode_1_r=0.000
shapecode_1_g=0.400
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=0.500
shapecode_1_border_g=0.500
shapecode_1_border_b=0.500
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=32
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.73893
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.22384
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.500
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=63
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=1.000
shapecode_3_rad=0.54822
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.49981
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.500
shapecode_3_border_g=0.500
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_init_1=index2 = int(rand(8));
per_frame_init_2=px = int(rand(100));
per_frame_init_3=py = int(rand(100));
per_frame_init_4=pz = int(rand(100));
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=dec_med = pow (0.85, 30/fps);
per_frame_26=dec_slow = pow (0.95, 30/fps);
per_frame_27=beat = mid;
per_frame_28=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_29=is_beat = above(beat, 1.2*avg) * above (time, t0+.1);
per_frame_30=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_31=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_32=index = (index + is_beat) %32;
per_frame_33=index2 = (index2 + is_beat*bnot(index))%8;
per_frame_34=
per_frame_35=spb = min(t0-t0a + .01,2); t0a = t0;
per_frame_36=spb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);
per_frame_37=mindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));
per_frame_38=sdev = if(is_beat,sdev * .96 + .04*pow(mindev+.01,2),sdev);
per_frame_39=
per_frame_40=q20 = avg;
per_frame_41=q21 = beat;
per_frame_42=q22 = peak;
per_frame_43=q24 = is_beat;
per_frame_44=q27 = index;
per_frame_45=q28 = index2;
per_frame_46=puls = puls*dec_med + (1-dec_med)*q24*16*bnot(index%4);
per_frame_47=q23 = min(1,puls);
per_frame_48=
per_frame_49=test = test + above(beat,avg*1.2) * (beat-avg)/fps*30*4;
per_frame_50=tic = q27/2;
per_frame_51=
per_frame_52=l1angz = tic*0+ test*33;
per_frame_53=l1angy = (1+sin(2*test))*1.6/2;
per_frame_54=sw1 = (q28%2) * above(avg,1);
per_frame_55=l1angy = l1angy-1/q22*sw1+ (1-sw1)*q22/8;
per_frame_56=l1angy = l1angy+above(avg,1.2)*2*sin(q22);
per_frame_57=
per_frame_58=q10 = cos(l1angz)*sin(l1angy);
per_frame_59=q11 = sin(l1angz)*sin(l1angy);
per_frame_60=q12 = abs(cos(l1angy)*cos(l1angy));
per_frame_61=
per_frame_62=trig = q24 * bnot(index%2);
per_frame_63=ran1 = if (trig,int(rand(100))/100-.5, ran1);
per_frame_64=ran2 = if (trig,int(rand(100))/100-.5, ran2);
per_frame_65=q13 = ran1/2;
per_frame_66=q14 = ran2/2;
per_frame_67=
per_frame_68=pp =  4*avg*q13/fps;
per_frame_69=pp = 1/fps;
per_frame_70=crit= int(q27/8);
per_frame_71=px = px + equal(crit,0)*pp;
per_frame_72=py = py + equal(crit,1)*pp;
per_frame_73=pz = pz + equal(crit,2)*pp;
per_frame_74=
per_frame_75=trel = trel + 1/spb_/fps;
per_frame_76=jump = int(trel) * below(sdev,.004*avg);
per_frame_77=
per_frame_78=q15 = px+jump;
per_frame_79=q16 = py+jump;
per_frame_80=q17 = pz+jump;
per_frame_81=
per_frame_82=q30 = above(q28,5);
per_frame_83=monitor = avg;
per_frame_84=
per_frame_85=q29 = q22/16*(above(q22,1.5)+.8-avg)+(sin(time/5)-.8)*.1;
per_frame_86=
per_frame_87=zoom = 1;
per_frame_88=warp = 0.0; rot = 0;
per_frame_89=dx = 0;
per_frame_90=dy = -.02;
per_frame_91=
per_frame_92=bb = bb*0.99 + bass*0.02;
per_frame_93=mm = mm*0.99 + mid*0.02;
per_frame_94=tt = tt*0.99 + treb*0.02;
per_frame_95=
per_frame_96=mx = max(max(bb,mm),tt);
per_frame_97=mn = min(min(bb,mm),tt);
per_frame_98=
per_frame_99=h1 = (bb-mn)/(mx-mn);
per_frame_100=h2 = (mm-mn)/(mx-mn);
per_frame_101=h3 = (tt-mn)/(mx-mn);
per_frame_102=v = 0.2/fps;
per_frame_103=bm = bm + (h1-h2)*v;
per_frame_104=mt = mt + (h2-h3)*v;
per_frame_105=bt = bt + (h1-h3)*v;
per_frame_106=w = bm;
per_frame_107=q3 = sin(w);
per_frame_108=q4 = cos(w);
per_frame_109=q5 = mt*2;
per_frame_110=q6 = bt*2;
warp_1=`float2 uv1,uv2,uv3,uv4,uv5,rsk,dz1,Kugel1;
warp_2=`float stone, ray1, sun1, rad1, mask2, mask1, trel;
warp_3=`float3 light;
warp_4=`static float2 lpos1 = float2(q13,q14);
warp_5=`static const float iter6 =1;
warp_6=`static const float clip1 = (rand_preset.x >= .5)+1;
warp_7=` 
warp_8=` float2 cpow(float2 base, float ex) {
warp_9=`   float moduz = sqrt(base.x*base.x + base.y*base.y);
warp_10=`   float thetaz = atan2(base.y, base.x);
warp_11=`   float2 pow = float2(pow(moduz, ex)*cos(thetaz*ex), pow(moduz, ex)*sin(thetaz*ex));
warp_12=`   return pow; }
warp_13=` 
warp_14=`shader_body
warp_15=`{
warp_16=`uv1 = float2(uv.x-.5,uv.y-0.5)*aspect.xy;
warp_17=`
warp_18=`//STONE
warp_19=`float dist = 40+18*iter6;
warp_20=`uv3 = dist * (uv1) + dist*float2(0,sin(q15))*0;
warp_21=`float ky = saturate(.04-uv3.y/40);
warp_22=`float k1 = uv3.x ;;
warp_23=`k1 = k1 - sign (k1)*14; //Verdoppelung
warp_24=`k1 = k1 - sign (k1)*q28*2; //Verdoppelung
warp_25=`k1 = k1 - sign (k1)*8; //Verdoppelung
warp_26=`
warp_27=`float ff = 16 + 16*rand_preset.z;
warp_28=`int n = 1 ;
warp_29=`while (n <= 4+2*iter6) 
warp_30=`{
warp_31=`  k1 += (-ff*n*sign(k1))*ky*ky;
warp_32=`  ky = saturate (ky - .1);
warp_33=`  n++; 
warp_34=`}
warp_35=`k1 = clamp(k1,-1.57,1.57);
warp_36=`stone = saturate(cos(k1)-.02) ;
warp_37=`
warp_38=`light = 0; trel = time*.2;
warp_39=`for (int m= 1; m<= 3; m++)
warp_40=`{//Kugel1
warp_41=`  rsk = (uv1 + .3*float2 (cos(q15/m)*(m%2),cos(q16/m)*((m+1)%2))) ;
warp_42=`  dz1 = normalize(rsk);
warp_43=`  rad1 = 16*length (rsk) * (2+cos(q17*m)) ;
warp_44=`  uv4 =  tan(rad1)*dz1;
warp_45=`  mask1 = saturate(9-7*rad1);
warp_46=`  Kugel1 = uv4*mask1;
warp_47=`  light += (.1/rad1)*pow(q23,1+slow_roam_sin);;
warp_48=`  uv=  uv+Kugel1*.1;
warp_49=`}
warp_50=`
warp_51=`uv+=stone*.05;
warp_52=`//Fractal Distortion
warp_53=`float2 z = (uv.yx-.5)*(2+stone);
warp_54=`float2 uv2 = cpow(z,.5+.3*q28/8)%clip1;
warp_55=`
warp_56=`uv2 = 0.5 + (1.0 -abs(frac(uv2 * 0.5)*2 - 1.0 )-0.5)*1; // Eo.S. mirror code
warp_57=`ret = (tex2D(sampler_main, uv2.yx) + GetPixel(uv_orig))*.46;
warp_58=`//ret += .002/length(uv1);
warp_59=`
warp_60=`//LASER
warp_61=`uv4 = uv-.5-lpos1+stone;
warp_62=`uv5  = normalize(uv4)-float2(q10,q11);
warp_63=`ray1 = saturate (1-length(uv5/q12));
warp_64=`ray1 += pow(.001/length(uv5),1)/length(uv4);
warp_65=`sun1 = saturate(.002/length(uv4))/(1.05-q12);
warp_66=`
warp_67=`ret += (ray1+sun1)*.8*frac(float3(q27,q27+3,q27+6)/16);
warp_68=`ret += (.02/length(sin(uv2*2+.2*(q27%8-4))));
warp_69=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_70=`                      ((uv2.xyy*q27
warp_71=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_72=`                      ).xyz*
warp_73=`                      float3(1,1,0)*0.05 + 
warp_74=`                      time*float3(0,0,1)*q29
warp_75=`                     );
warp_76=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_77=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_78=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_79=`ret += pow(stone,3)*q29*(1+roam_sin);
warp_80=`ret += light;
warp_81=`ret *= 1-.08*30/fps;
warp_82=`}
warp_83=`
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 d = texsize.zw*8;
comp_4=`    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );
comp_5=`    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );
comp_6=`    float2 light_pos = float2(q11,q12);
comp_7=`    float3 col = float3(4,4,4);
comp_8=`    float c = 4;
comp_9=`    float dd = 16;
comp_10=`    float3 plastic;
comp_11=`    plastic.x = col.x/(1+dd*pow(length( uv - float2(dx.x,dy.x)*c - light_pos),0.5));
comp_12=`    plastic.y = col.y/(1+dd*pow(length( uv - float2(dx.y,dy.y)*c - light_pos),0.5));
comp_13=`    plastic.z = col.z/(1+dd*pow(length( uv - float2(dx.z,dy.z)*c - light_pos),0.5));
comp_14=`
comp_15=`    ret = plastic*GetPixel(uv)*3;
comp_16=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_17=`                      ((float3(dx.y,dy.x,d.y)*q28
comp_18=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_19=`                      ).xyz*
comp_20=`                      float3(1,1,0)*0.05 + 
comp_21=`                      time*float3(0,0,1)*q31
comp_22=`                     );
comp_23=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_24=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_25=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_26=`
comp_27=`}
