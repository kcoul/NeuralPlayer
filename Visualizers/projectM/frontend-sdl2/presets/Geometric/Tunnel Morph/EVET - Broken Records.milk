MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.280
fDecay=0.800
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=0.96304
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.020
ob_g=0.020
ob_b=0.020
ob_a=0.990
ib_size=0.005
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.990
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.000
wavecode_1_g=0.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.000
wavecode_2_g=1.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=0.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
shapecode_0_enabled=0
shapecode_0_sides=5
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=2
shapecode_0_x=0.490
shapecode_0_y=0.500
shapecode_0_rad=0.11589
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=4.36077
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=x = int(rand(1000))/1000;
shape_0_per_frame2=y = int(rand(1000))/1000;
shape_0_per_frame3=ang = int(rand(150))/100;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=ib_r=sin(bass*cos(frame*0.535));
per_frame_2=ib_g=sin(bass*cos(frame*0.635));
per_frame_3=ib_b=sin(bass*cos(frame*0.735));
per_frame_4=dx=sin(time*1.234)*.0125;
per_frame_5=dy=cos(time*.9666)*.0125;
per_frame_6=q1=frame%2;
per_frame_7=wave_r=q1;
per_frame_8=wave_g=q1;
per_frame_9=wave_b=q1;
per_frame_10=ff = frame/100;
per_frame_11=wave_r = sin(5*ff/bass)/2+0.5;
per_frame_12=wave_g = cos(ff/mid)/2+0.5;
per_frame_13=wave_b = cos(3*ff/treb)/2+0.5;
per_frame_14=rot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );
per_frame_15=zoom=max(0.97, min(0.15+0.7*bass_att, 1.75 ));
per_frame_16=ob_r=wave_r;
per_frame_17=ob_g=wave_g;
per_frame_18=ob_b=wave_b;
per_pixel_1=q2=above(rad,.603);
per_pixel_2=rot=rot+if(q2,0,sin(time*.7243)*.5);
per_pixel_3=zoom=zoom+if(q2,0,rad*sin(time*.734)*.8);
per_pixel_4=warp=warp+if(above(rad,.2166),sin(ang*rad),0);
per_pixel_5=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_6=dx_r = equal(thresh,2)*0.025*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_7=dy_r = equal(thresh,2)*0.025*sin(5*time)+(1-equal(thresh,2))*dy_r;
per_pixel_8=crack = 1.34*sin(3.12*thresh*time) + 0.95*sin(5*thresh*time) + 1.73*cos(1.66*thresh*time) - 0.5*sin(0.25*thresh*time);
per_pixel_9=rip = 1.92*cos(1.96*thresh*time) - 0.195*cos(3.27*thresh*time) + 0.236*sin(3.25*thresh*time) + 1.5*sin(thresh*time);
per_pixel_10=crackdown = ((crack*2)*dx_r)*sin(3.75*time);
per_pixel_11=ripdown = ((rip*2)*dy_r)*sin(5.75*time);
per_pixel_12=dx = dx + if (above(crack,rip), 2*dx_r*crackdown, -2*dx_r*ripdown)*25;
per_pixel_13=dy = dy + if (above(rip,crack), 2*dy_r*crackdown, -2*dy_r*ripdown)*25;
warp_1=`float2 complex_mul(float2 factorA, float2 factorB){
warp_2=`   return float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
warp_3=`}
warp_4=`
warp_5=`float2 complex_pow(float2 base, int exponent){
warp_6=`   float2 exponentiation = float2(1,0);
warp_7=`   for(int i = 0; i<exponent; i++){
warp_8=`      exponentiation = complex_mul(base,exponentiation);
warp_9=`   }
warp_10=`   return exponentiation;
warp_11=`}
warp_12=`
warp_13=`float2 complex_square(float2 domain){
warp_14=`   return complex_mul(domain,domain);
warp_15=`}
warp_16=`
warp_17=`float2 complex_div(float2 numerator, float2 denominator){
warp_18=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
warp_19=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
warp_20=`          (denominator.x*denominator.x + denominator.y*denominator.y);
warp_21=`}
warp_22=`
warp_23=`float2 uv_aspect(float2 uvo, float2 uvm, float2 aspectr, float2 motion_scale){
warp_24=`   return 0.5 + (lerp(uvo,uvm,motion_scale)-0.5)*aspectr;
warp_25=`}
warp_26=`
warp_27=`float2 uv_scale(float2 domain, float2 center, float2 scale){
warp_28=`   return center + (domain-center)*scale;
warp_29=`}
warp_30=`
warp_31=`float2 uv_torus_mirror(float2 domain, float cutoff){
warp_32=`   return 0.5 + (1.0 - abs( frac( domain * 0.5 ) * 2 - 1.0 )-0.5)*cutoff;
warp_33=`}
warp_34=`
warp_35=`float2 uv_polar(float2 domain, float2 center){
warp_36=`   float2 c = domain - center;
warp_37=`   float rad_hq = length(c);
warp_38=`   float ang_hq = atan2(c.x,c.y);
warp_39=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
warp_40=`}
warp_41=`
warp_42=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
warp_43=`   float2 polar = uv_polar(domain, center);
warp_44=`   return float2(polar.x*fins+coord.x, log_factor*log(1/polar.y) + coord.y);
warp_45=`}
warp_46=`
warp_47=`bool mask_rectangle(float2 domain, float2 position, float2 dimensions){
warp_48=`   return (domain.x>position.x-dimensions.x)*(domain.x<position.x+dimensions.x)*
warp_49=`          (domain.y>position.y-dimensions.y)*(domain.y<position.y+dimensions.y);
warp_50=`}
warp_51=`
warp_52=`bool mask_circle(float2 domain, float2 position, float radius){
warp_53=`   return length(domain-position)<radius;
warp_54=`}
warp_55=`
warp_56=`bool mask_spiral_logarithmic(float2 domain, float2 center, int fins, float thickness, float spiral_factor, float zoom){
warp_57=`   float2 c = domain - center;
warp_58=`   float rad_hq = length(c);
warp_59=`   float ang_hq = atan2(c.x,c.y);
warp_60=`
warp_61=`   return frac(fins*ang_hq*M_INV_PI_2 + spiral_factor*log(1/rad_hq)+zoom)<thickness;
warp_62=`}
warp_63=`
warp_64=`float figure_spiral(float2 domain, float2 center, int fins, float thickness, float spiral_factor, float zoom){
warp_65=`   float2 c = domain - center;
warp_66=`   float rad_hq = length(c);
warp_67=`   float ang_hq = atan2(c.x,c.y);
warp_68=`
warp_69=`   return frac(fins*ang_hq*M_INV_PI_2 + spiral_factor*log(1/rad_hq)+zoom)<thickness;
warp_70=`}
warp_71=`
warp_72=`float figure_circle(float2 domain, float2 position, float radius){
warp_73=`   return saturate(1-length(domain-position)/radius);
warp_74=`}
warp_75=`
warp_76=`float figure_border(float2 domain, float thickness){
warp_77=`   float2 help_uv = frac(domain-0.5);
warp_78=`   help_uv = min(help_uv,1-help_uv)*2;
warp_79=`   return saturate(max(help_uv.x,help_uv.y)-1+thickness)/(thickness);
warp_80=`}
warp_81=`
warp_82=`shader_body
warp_83=`{
warp_84=`float2 base_uv = uv_aspect(uv_orig, uv, aspect.wz, 0);
warp_85=`//ret = mask_rectangle(base_uv,0.5,0.1);
warp_86=`//ret = mask_spiral_logarithmic(base_uv, 0.5, -1, 0.5, 0.4, time);
warp_87=`float2 scaled_uv = uv_scale(base_uv, 0.5, 2);
warp_88=`float2 mirrored_uv = uv_torus_mirror(scaled_uv,10);
warp_89=`//ret = mask_circle(mirrored_uv,0.5,0.1);
warp_90=`//ret = mask_spiral_logarithmic(mirrored_uv, 0.5, -1, 0.5, 0.4, time);
warp_91=`//ret = figure_circle(mirrored_uv,float2(-0.5,0.5),1.2);
warp_92=`
warp_93=`base_uv = uv_polar_logarithmic(base_uv,0.5,4,1,float2(0,time));
warp_94=`base_uv = uv_torus_mirror(base_uv,1);
warp_95=`
warp_96=`
warp_97=`float help_border = figure_border(base_uv,0.3);
warp_98=`float2 help_uv = base_uv;
warp_99=`help_uv = uv_polar_logarithmic(base_uv,0.5,4,1,float2(0,-time));
warp_100=`ret = figure_border(help_uv,0.3);
warp_101=`ret = lerp(ret,1,help_border);
warp_102=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    
comp_4=`    //rotate texture cords
comp_5=`    float texRotU2 = (uv[0] - 0.5)*cos(-q8*0.29) + (uv[1] - 0.5)*sin(-q8*0.29);
comp_6=`    float texRotv2 = -(uv[0] - 0.5)*sin(-q8*0.29) + (uv[1] - 0.5)*cos(-q8*0.29);
comp_7=`
comp_8=`	
comp_9=`	    float2 uv2 = float2(texRotU2*0.8 +0.5, texRotv2*0.8 + 0.5);
comp_10=`
comp_11=`    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;
comp_12=`    ret = lerp( tex2D(sampler_main, uv).xyz, 
comp_13=`                tex2D(sampler_main, uv_echo).xyz, 
comp_14=`                0.50 
comp_15=`              )*0.6;
comp_16=`    
comp_17=`    ret += tex2D(sampler_main, uv2).xyz*0.4;
comp_18=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_19=`                      ((uv2.xyy*q28
comp_20=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_21=`                      ).xyz*
comp_22=`                      float3(1,1,0)*0.05 + 
comp_23=`                      time*float3(0,0,1)*q31
comp_24=`                     );
comp_25=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_26=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_27=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_28=`    ret *= 2.00; //gamma
comp_29=`    ret = (.71 - ret*(1.4-ret)*4)*0.6; //invert
comp_30=`}
