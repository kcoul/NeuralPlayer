MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=0.965
fVideoEchoZoom=1.484
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=3
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.010
fWaveSmoothing=0.000
fWaveParam=-0.200
fModWaveAlphaStart=0.390
fModWaveAlphaEnd=1.180
fWarpAnimSpeed=1.000
fWarpScale=1.503
fZoomExponent=0.13267
fShader=0.000
zoom=1.01489
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.04750
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=1.000
wave_y=1.000
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=0.200
mv_b=0.200
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));
wave_0_per_point2=y = .5 + (bass*.2)*cos(sample*2*(time*10*treb));
wave_0_per_point3=r = 1 + .5*sin(sample*.10+(time*10*bass));
wave_0_per_point4=g = 1 + .5*sin(sample*2+(time*50*treb));
wave_0_per_point5=b = 1 + .5*sin(sample*5+(time*20*mid));
wave_0_per_point6=a = r;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=256
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wave_1_per_point1=r=bass*.05;
wave_1_per_point2=cd=cd+.001;
wave_1_per_point3=
wave_1_per_point4=c=int(rand((cos(q8)+1)*20))*3.1415927*((cos(q9)+1)*7);
wave_1_per_point5=//c=rand
wave_1_per_point6=c=c+cd;
wave_1_per_point7=
wave_1_per_point8=x=.5+(cos(c)*q20*.04);
wave_1_per_point9=y=.5+(sin(c)*q20*.04);
wave_1_per_point10=
wave_1_per_point11=r=abs(sin(q10*.77));
wave_1_per_point12=g=treb*.5
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=1
wavecode_3_samples=102
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=0.100
wavecode_3_b=0.100
wavecode_3_a=1.000
wave_3_per_frame1=samples = 256 + 50*sin(time*.939493949);
wave_3_per_frame2=vol = (bass_att + mid_att + treb_att)*.333333;
wave_3_per_frame3=vol_avg = .1*(vol_avg*9 + vol);
wave_3_per_frame4=vg = vol_avg*.1;
wave_3_per_frame5=t1 = if(above(vg,1.8),1.8,vg);
wave_3_per_point1=tm = q1;
wave_3_per_point2=sp = sample*6.28*8*6*sin(time)*100;
wave_3_per_point3=
wave_3_per_point4=vol = (value1+value2)*.5;
wave_3_per_point5=it = it*above(sample,0);
wave_3_per_point6=it = it + 1;
wave_3_per_point7=//rad = .5 + vol + .01;
wave_3_per_point8=rad=1;
wave_3_per_point9=ra = rad*sin(sample*3.14);
wave_3_per_point10=ox = ra*sin(sp);
wave_3_per_point11=oy = sin(sample*3.14-1.57)*rad;
wave_3_per_point12=oz = ra*cos(sp);
wave_3_per_point13=
wave_3_per_point14=xang = q4;
wave_3_per_point15=yang = q5;
wave_3_per_point16=zang = q6;
wave_3_per_point17=fov = .5;
wave_3_per_point18=
wave_3_per_point19=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point20=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point21=ox = mx;
wave_3_per_point22=oy = my;
wave_3_per_point23=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point24=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point25=ox = mx;
wave_3_per_point26=oz = mz;
wave_3_per_point27=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point28=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point29=oy = my;
wave_3_per_point30=oz = mz;
wave_3_per_point31=
wave_3_per_point32=yang = q8;
wave_3_per_point33=oz = oz + 5;
wave_3_per_point34=
wave_3_per_point35=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point36=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point37=ox = mx;
wave_3_per_point38=oz = mz;
wave_3_per_point39=
wave_3_per_point40=oz = oz - 5;
wave_3_per_point41=
wave_3_per_point42=oz = oz - 2;
wave_3_per_point43=x = ox*fov/oz + 0.5;
wave_3_per_point44=x = (x-.5)*0.75 + 0.5;
wave_3_per_point45=y = oy*fov/oz + 0.5;
wave_3_per_point46=
shapecode_0_enabled=1
shapecode_0_sides=9
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=15
shapecode_0_x=0.150
shapecode_0_y=0.820
shapecode_0_rad=1.49760
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.48885
shapecode_0_r=1.000
shapecode_0_g=0.400
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.600
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.500
shape_0_per_frame1=ra=ra-(bass_att*.01);
shape_0_per_frame2=rad=.55;
shape_0_per_frame3=ang=ra;
shape_0_per_frame4=negswitchx=if(int(rand(2))%2,-1,1)+instance-instance;
shape_0_per_frame5=negswitchy=if(int(rand(2))%2,-1,1)+instance-instance;
shape_0_per_frame6=coff1=2.4;
shape_0_per_frame7=r=       ((cos(q8  *.1+instance*.1    )+1)*.5)*coff1;
shape_0_per_frame8=g=       ((cos(q9  *.1+instance*.1+ .8)+1)*.5)*coff1;
shape_0_per_frame9=b=       ((cos(q10 *.1+instance*.1+1.4)+1)*.5)*coff1;
shape_0_per_frame10=r2=      ((cos(q8  *.1+instance*.1    )+1)*.5)*coff1;
shape_0_per_frame11=g2=      ((cos(q9  *.1+instance*.1+ .8)+1)*.5)*coff1;
shape_0_per_frame12=b2=      ((cos(q10 *.1+instance*.1+1.4)+1)*.5)*coff1;
shape_0_per_frame13=border_r=((cos(q8  *.1+instance*.1)    +1)*.5)*coff1;
shape_0_per_frame14=border_g=((cos(q9  *.1+instance*.1+.8) +1)*.5)*coff1;
shape_0_per_frame15=border_b=((cos(q10 *.1+instance*.1+1.4)+1)*.5)*coff1;
shape_0_per_frame16=x=abs(sin( instance+q8*coff1+negswitchx*int(rand(int(bass*treb*mid)))/50))+instance-instance;
shape_0_per_frame17=y=abs(cos((instance+q9*coff1)*.3+negswitchy*int(rand(int(bass*treb*mid)))/50))+instance-instance;
shapecode_1_enabled=1
shapecode_1_sides=20
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1024
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.01000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.100
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.006
shape_1_per_frame1=pigtemp=int(pow(4,bass+treb+mid));
shape_1_per_frame2=num_inst=if(above(pigtemp,1024),1024,pigtemp);
shape_1_per_frame3=
shape_1_per_frame4=t1 = time/5;
shape_1_per_frame5=t2 = time/6;
shape_1_per_frame6=rad = 0.005+bass/100;
shape_1_per_frame7=t3 = bass_att/70;
shape_1_per_frame8=b2 = treb*0.7-bass/2;
shape_1_per_frame9=r = instance/num_inst;
shape_1_per_frame10=g = abs(treb_att/5-bass);
shape_1_per_frame11=//b = abs(treb_att/5-bass);
shape_1_per_frame12=size = 0.3+bass_att/300;
shape_1_per_frame13=
shape_1_per_frame14=nc = sqrt(num_inst);
shape_1_per_frame15=xs=sin(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);
shape_1_per_frame16=ys=cos(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);
shape_1_per_frame17=zs=cos(3.14*int(instance/nc)/nc);
shape_1_per_frame18=
shape_1_per_frame19=//modulate to allow rotation
shape_1_per_frame20=y1 = ys*cos(t1)-zs*sin(t1);
shape_1_per_frame21=z1 = ys*sin(t1)+zs*cos(t1);
shape_1_per_frame22=x1 = z1*sin(t2)+xs*cos(t2);
shape_1_per_frame23=z2 = z1*cos(t2)-xs*sin(t2);
shape_1_per_frame24=x2 = x1*cos(t3)-y1*sin(t3);
shape_1_per_frame25=y2 = y1*cos(t3)+x1*sin(t3);
shape_1_per_frame26=
shape_1_per_frame27=//translate shape
shape_1_per_frame28=x3 = x2;
shape_1_per_frame29=y3 = y2;
shape_1_per_frame30=z3 = z2;
shape_1_per_frame31=
shape_1_per_frame32=x = 0.5 + size*(x3/(1+z3*size));
shape_1_per_frame33=y = 0.5 + size*(y3/(1+z3*size));
shape_1_per_frame34=a=below(z3,0);
shapecode_2_enabled=1
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=7
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.03333
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=1.000
shape_2_per_frame1=x = int(rand(100))*.01+instance-instance;
shape_2_per_frame2=y = int(rand(100))*.01+instance-instance;
shape_2_per_frame3=
shape_2_per_frame4=a =1;
shape_2_per_frame5=a2 =1;
shape_2_per_frame6=border_a = 0;
shape_2_per_frame7=vol=bass+mid+treb;
shape_2_per_frame8=rad = int(rand(int(vol)))/7+instance-instance;
shapecode_3_enabled=1
shapecode_3_sides=20
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1024
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.26465
shapecode_3_r=0.200
shapecode_3_g=0.000
shapecode_3_b=0.700
shapecode_3_a=0.240
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=1.000
shapecode_3_a2=0.100
shapecode_3_border_r=0.500
shapecode_3_border_g=0.500
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
shape_3_init1=//samples = 256 + 50*sin(time*.939493949);
shape_3_init2=//num_inst = 256 + 50*sin(time*.939493949);
shape_3_init3=//samples = .5 + sin(time*.939493949);
shape_3_init4=num_inst = .5 + sin(time*.939493949);
shape_3_per_frame1=
shape_3_per_frame2=sample = instance/1024;
shape_3_per_frame3=//num_inst = .5 + sin(time*.939493949);
shape_3_per_frame4=tm = q1;
shape_3_per_frame5=sp = sample*6.28*8*6*sin(time)*100;
shape_3_per_frame6=
shape_3_per_frame7=vol = (value1+value2)*.5;
shape_3_per_frame8=it = it*above(sample,0);
shape_3_per_frame9=it = it + 1;
shape_3_per_frame10=//rad = .5 + vol + .01;
shape_3_per_frame11=rad2=1.3;
shape_3_per_frame12=ra = rad2*sin(sample*3.14);
shape_3_per_frame13=ox = ra*sin(sp);
shape_3_per_frame14=oy = sin(sample*3.14-1.57)*rad2;
shape_3_per_frame15=oz = ra*cos(sp);
shape_3_per_frame16=
shape_3_per_frame17=xang = q4;
shape_3_per_frame18=yang = q5;
shape_3_per_frame19=zang = q6;
shape_3_per_frame20=fov = .5;
shape_3_per_frame21=
shape_3_per_frame22=mx = ox*cos(zang) - oy*sin(zang);
shape_3_per_frame23=my = ox*sin(zang) + oy*cos(zang);
shape_3_per_frame24=ox = mx;
shape_3_per_frame25=oy = my;
shape_3_per_frame26=mx = ox*cos(yang) + oz*sin(yang);
shape_3_per_frame27=mz = - ox*sin(yang) + oz*cos(yang);
shape_3_per_frame28=ox = mx;
shape_3_per_frame29=oz = mz;
shape_3_per_frame30=my = oy*cos(xang) - oz*sin(xang);
shape_3_per_frame31=mz = oy*sin(xang) + oz*cos(xang);
shape_3_per_frame32=oy = my;
shape_3_per_frame33=oz = mz;
shape_3_per_frame34=
shape_3_per_frame35=yang = q8;
shape_3_per_frame36=oz = oz + 5;
shape_3_per_frame37=rad=rad*instance*.0041;//3d
shape_3_per_frame38=
shape_3_per_frame39=mx = ox*cos(yang) + oz*sin(yang);
shape_3_per_frame40=mz = - ox*sin(yang) + oz*cos(yang);
shape_3_per_frame41=ox = mx;
shape_3_per_frame42=oz = mz;
shape_3_per_frame43=
shape_3_per_frame44=oz = oz - 5;
shape_3_per_frame45=
shape_3_per_frame46=oz = oz - 2;
shape_3_per_frame47=x = ox*fov/oz + 0.5;
shape_3_per_frame48=x = (x-.5)*0.75 + 0.5;
shape_3_per_frame49=y = oy*fov/oz + 0.5;
shape_3_per_frame50=
per_frame_1=//per frame less reactive volume and different interference with existing q vars, for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1 = q1+vvb*2;//0.5 + vb - vvb;
per_frame_12=q2 = q2+vvm*2;//0.5 + vm - vvm;
per_frame_13=q3 = q3+vvt*2;//0.5 + vt - vvt;
per_frame_14=v=2;
per_frame_15=bb = bb - vvb*v;
per_frame_16=mm = mm - vvm*v;
per_frame_17=tt = tt - vvt*v;
per_frame_18=q4 = -bb;
per_frame_19=q5 = -mm;
per_frame_20=q6 = -tt;
per_frame_21=q4=q4+(q1+q2+q3);
per_frame_22=q5=q5+(q1+q2+q3);
per_frame_23=q6=q6+(q1+q2+q3);
per_frame_24=q7=q7+(q1+q2+q3);
per_frame_25=q8=q8+(q1+q2+q3);
per_frame_26=q9=q9+(q1+q2+q3);
per_frame_27=q10=q10+(q1+q2+q3);
per_frame_28=q11=q11+(q1+q2+q3);
per_frame_29=q12=q12+(q1+q2+q3);
per_frame_30=q13=q13+(q1+q2+q3);
per_frame_31=q14=q14+(q1+q2+q3);
per_frame_32=q15=q15+(q1+q2+q3);
per_frame_33=q16=q16+(q1+q2+q3);
per_frame_34=q17=q17+(q1+q2+q3);
per_frame_35=q18=q18+(q1+q2+q3);
per_frame_36=q19=q19+(q1+q2+q3);
per_frame_37=q20=q20+(q1+q2+q3);
per_frame_38=q21=q21+(q1+q2+q3);
per_frame_39=q22=q22+(q1+q2+q3);
per_frame_40=q23=q23+(q1+q2+q3);
per_frame_41=q24=q24+(q1+q2+q3);
per_frame_42=q25=q25+(q1+q2+q3);
per_frame_43=q26=q26+(q1+q2+q3);
per_frame_44=q27=q27+(q1+q2+q3);
per_frame_45=q28=q28+(q1+q2+q3);
per_frame_46=q29=q29+(q1+q2+q3);
per_frame_47=q30=q30+(q1+q2+q3);
per_frame_48=q31=q31+(q1+q2+q3);
per_frame_49=q32=q32+(q1+q2+q3);
per_frame_50=
per_frame_51=
per_frame_52=wave_r = 0.75 + 0.25*sin(0.437*time+1) + 0.15*sin(0.197*time+4);
per_frame_53=wave_g = 0.75 + 0.25*sin(0.544*time+2) + 0.15*sin(0.143*time+5);
per_frame_54=wave_b = 0.95 + 0.25*sin(0.751*time+3) + 0.15*sin(0.117*time+6);
per_frame_55=//wave_r = sqrt(wave_r);
per_frame_56=//wave_g = sqrt(wave_g);
per_frame_57=//wave_b = sqrt(wave_b);
per_frame_58=rot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );
per_frame_59=cx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );
per_frame_60=cy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );
per_frame_61=dx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );
per_frame_62=dy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );
per_frame_63=decay = decay - 0.01*equal(frame%6,0);
per_frame_64=dx = dx + dx_residual;
per_frame_65=dy = dy + dy_residual;
per_frame_66=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);
per_frame_67=dx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;
per_frame_68=dy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;
per_frame_69=wave_x = wave_x - dx_residual*7;
per_frame_70=wave_y = wave_y - dy_residual*7;
per_frame_71=wave_mystery = time*0.03;
per_frame_72=
per_frame_73=zoom = zoom + 0.008*(0.35*sin(0.844*time+2) + 0.55*sin(1.743*time+5));
per_frame_74=//zoom = zoom + max(0,treb-1.2)*0.1;
per_frame_75=
per_frame_76=q1 = 0.03;// + 0.09*pow( 0.5 + 0.25*sin(0.437*time+1) + 0.15*sin(0.197*time+4), 8 );
per_frame_77=
per_frame_78=q6 = dx*50;
per_frame_79=q7 = dy*50;
per_frame_80=chng=sin(time*.5);
per_frame_81=cthr=.9999;
per_frame_82=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_83=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_84=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_85=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_86=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_87=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_88=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_89=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_90=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_91=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_92=monitor=chng;
per_frame_93=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_94=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_95=
per_frame_96=monitor=mq1;
per_frame_97=vol=bass+treb+mid;
per_frame_98=atime=atime+vol;
per_frame_99=q11=.4+sin(atime*.006        )*.4;
per_frame_100=q12=.4+cos(atime*.00613828348)*.4;
per_frame_101=q13=.4+sin(atime*.00598593455)*.4;
per_frame_102=monitor=q13;
per_frame_103=
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_fc_main, uv ).xyz;
warp_5=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_6=`                      ((uv.xyy*q27
warp_7=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_8=`                      ).xyz*
warp_9=`                      float3(1,1,0)*0.05 + 
warp_10=`                      time*float3(0,0,1)*q29
warp_11=`                     );
warp_12=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_13=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_14=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_15=`    //ret = lerp(GetBlur1(uv)*1,ret,ret);
warp_16=`    // darken (decay) over time
warp_17=`    if (ret.x+ret.y+ret.z < (0+((mid+bass+treb)/3)*.3)){
warp_18=`       ret.x = ret.x+.6;
warp_19=`       ret.y = ret.y+.6;
warp_20=`       ret.z = ret.z+.6;
warp_21=`       }else{
warp_22=`       ret = (ret - .005)*0.99; //or try: ret -= 0.004;
warp_23=`    }
warp_24=`}
comp_1=`float3 ret1, neu;
comp_2=`
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uv2;
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5;
comp_8=`uv *= aspect.xy;    
comp_9=`
comp_10=`float2 tmp = uv;
comp_11=`float dist = 1;
comp_12=`float inten = 1;
comp_13=`ret1 = 0;
comp_14=`int anz = 4;
comp_15=`float n = 1;
comp_16=`while (n <= anz) {
comp_17=`    c = n%2-.5; 
comp_18=`    s = (n+1)%2-.5; 
comp_19=`    uv2.x =  uv.x*c - uv.y*s;
comp_20=`    uv2.y =  uv.x*s + uv.y*c;
comp_21=`    uv2 *= aspect.yx;
comp_22=`    dist = 1-frac(.25*n+q31); 
comp_23=`    inten =  2*sqrt(dist)*(1-dist*dist);
comp_24=`
comp_25=`    neu = tex2D(sampler_main, 2*uv2*dist + q32);
comp_26=`    ret1 = max(ret1,neu*inten);
comp_27=`n++;
comp_28=`}
comp_29=`
comp_30=`ret = ret1*1.6;// * lum(ret1) ;
comp_31=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_32=`                      ((uv.xyy*q28
comp_33=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_34=`                      ).xyz*
comp_35=`                      float3(1,1,0)*0.05 + 
comp_36=`                      time*float3(0,0,1)*q31
comp_37=`                     );
comp_38=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_39=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_40=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_41=`ret=1-ret;
comp_42=`}
