MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=3.940
fDecay=0.995
fVideoEchoZoom=1.405
fVideoEchoAlpha=0.560
nVideoEchoOrientation=0
nWaveMode=1
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.972
fWaveSmoothing=0.900
fWaveParam=0.500
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=1.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.500
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=20
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1024
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.01000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.100
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.006
shape_0_per_frame1=pigtemp=int(pow(4,bass+treb+mid));
shape_0_per_frame2=num_inst=if(above(pigtemp,1024),1024,pigtemp);
shape_0_per_frame3=
shape_0_per_frame4=t1 = time/5;
shape_0_per_frame5=t2 = time/6;
shape_0_per_frame6=rad = 0.05+bass/100;
shape_0_per_frame7=t3 = bass_att/70;
shape_0_per_frame8=b2 = treb*0.7-bass/2;
shape_0_per_frame9=r = instance/num_inst;
shape_0_per_frame10=g = abs(treb_att/5-bass);
shape_0_per_frame11=//b = abs(treb_att/5-bass);
shape_0_per_frame12=size = 0.3+bass_att/300;
shape_0_per_frame13=
shape_0_per_frame14=nc = sqrt(num_inst);
shape_0_per_frame15=xs=sin(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);
shape_0_per_frame16=ys=cos(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);
shape_0_per_frame17=zs=cos(3.14*int(instance/nc)/nc);
shape_0_per_frame18=
shape_0_per_frame19=//modulate to allow rotation
shape_0_per_frame20=y1 = ys*cos(t1)-zs*sin(t1);
shape_0_per_frame21=z1 = ys*sin(t1)+zs*cos(t1);
shape_0_per_frame22=x1 = z1*sin(t2)+xs*cos(t2);
shape_0_per_frame23=z2 = z1*cos(t2)-xs*sin(t2);
shape_0_per_frame24=x2 = x1*cos(t3)-y1*sin(t3);
shape_0_per_frame25=y2 = y1*cos(t3)+x1*sin(t3);
shape_0_per_frame26=
shape_0_per_frame27=//translate shape
shape_0_per_frame28=x3 = x2;
shape_0_per_frame29=y3 = y2;
shape_0_per_frame30=z3 = z2;
shape_0_per_frame31=
shape_0_per_frame32=x = 0.5 + size*(x3/(1+z3*size));
shape_0_per_frame33=y = 0.5 + size*(y3/(1+z3*size));
shape_0_per_frame34=a=below(z3,0);
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=7
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.03333
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = int(rand(100))*.01+instance-instance;
shape_1_per_frame2=y = int(rand(100))*.01+instance-instance;
shape_1_per_frame3=
shape_1_per_frame4=a =1;
shape_1_per_frame5=vol=bass+mid+treb;
shape_1_per_frame6=rad = int(rand(int(vol)))/7+instance-instance;
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=69
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.03333
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.100
shapecode_2_g=0.100
shapecode_2_b=0.100
shapecode_2_a=1.000
shapecode_2_r2=0.100
shapecode_2_g2=0.100
shapecode_2_b2=0.100
shapecode_2_a2=1.000
shapecode_2_border_r=0.100
shapecode_2_border_g=0.100
shapecode_2_border_b=0.100
shapecode_2_border_a=1.000
shape_2_per_frame1=//x = rand(2*int(rand(70-(instance+1)))%int(rand(70-(instance+1))))*.02+.5;
shape_2_per_frame2=xresquan=int(rand(int((q29-q30)*500)));
shape_2_per_frame3=yresquan=int(rand(int((q29-q30)*500)));
shape_2_per_frame4=x=int(rand(q31+instance-instance-xresquan))/(q31-xresquan);
shape_2_per_frame5=y=int(rand(q32+instance-instance-yresquan))/(q32-yresquan);
shape_2_per_frame6=//y = rand(2*int(rand(70-(instance+1)))%int(rand(70-(instance+1))))*.02+.5;
shape_2_per_frame7=
shape_2_per_frame8=a = 1;//if(above(frame%7,0),0,1);
shape_2_per_frame9=a2 = 1;// if(above(frame%7,0),0,1);
shape_2_per_frame10=border_a = 1;
shape_2_per_frame11=//vol=bass+mid+treb;
shape_2_per_frame12=rad = q30*.1;
shape_2_per_frame13=//r=1;
shape_2_per_frame14=//g=1;
shape_2_per_frame15=//b=1;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=batr=bass_att+treb_att;
per_frame_init_2=natr=batr;
per_frame_1=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1   = (vvb+vvm+vvt)*100;
per_frame_12=q2   = (vvb+vvm+vvt)*10;
per_frame_13=q3   = (vvb+vvm+vvt)*10;
per_frame_14=q4   = (vvb+vvm+vvt)*10;
per_frame_15=q5   = (vvb+vvm+vvt)*10;
per_frame_16=q6   = (vvb+vvm+vvt)*10;
per_frame_17=q7   = (vvb+vvm+vvt)*10;
per_frame_18=q8   = (vvb+vvm+vvt)*10;
per_frame_19=q9   = (vvb+vvm+vvt)*10;
per_frame_20=q10  = (vvb+vvm+vvt)*10;
per_frame_21=q11  = (vvb+vvm+vvt)*10;
per_frame_22=q12  = (vvb+vvm+vvt)*10;
per_frame_23=q13  = (vvb+vvm+vvt)*10;
per_frame_24=q14  = (vvb+vvm+vvt)*10;
per_frame_25=q15  = (vvb+vvm+vvt)*10;
per_frame_26=q16  = (vvb+vvm+vvt)*10;
per_frame_27=q17  = (vvb+vvm+vvt)*10;
per_frame_28=q18  = (vvb+vvm+vvt)*10;
per_frame_29=q19  = (vvb+vvm+vvt)*10;
per_frame_30=q20  = (vvb+vvm+vvt)*10;
per_frame_31=q21  = (vvb+vvm+vvt)*10;
per_frame_32=q22  = (vvb+vvm+vvt)*10;
per_frame_33=q23  = (vvb+vvm+vvt)*10;
per_frame_34=q24  = (vvb+vvm+vvt)*10;
per_frame_35=q25  = (vvb+vvm+vvt)*10;
per_frame_36=q26  = (vvb+vvm+vvt)*10;
per_frame_37=q27  = (vvb+vvm+vvt)*10;
per_frame_38=q28  = (vvb+vvm+vvt)*10;
per_frame_39=q29  = (vvb+vvm+vvt)*10;
per_frame_40=q30  = (vvb+vvm+vvt)*10;
per_frame_41=q31  = (vvb+vvm+vvt)*10;
per_frame_42=q32  = (vvb+vvm+vvt)*10;
per_frame_43=
per_frame_44=
per_frame_45=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_frame_46=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_frame_47=dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_frame_48=natr=bass_att+thresh*treb_att;
per_frame_49=cha=abs(batr-natr);
per_frame_50=spik=above(abs(cha-addict),addict);
per_frame_51=addict=(addict+cha)/2;
per_frame_52=
per_frame_53=//effects here
per_frame_54=zoom=zoom+if((above(bass*2,treb)-1),-1,1)*above(cha*thresh,2)*0.1;
per_frame_55=
per_frame_56=
per_frame_57=//added the rotation effect with the same code just to offer some possibilities, activate it if you dare - goody
per_frame_58=//rot=rot+if((above(bass*2,treb)-1),-1,1)*above(cha*thresh,2)*0.1;
per_frame_59=
per_frame_60=//zoomexp=2/zoom;
per_frame_61=mv_r=log(thresh)*spik;
per_frame_62=mv_b=abs(spik*cha-1);
per_frame_63=mv_g=sin(time+thresh);
per_frame_64=//mv_a=spik*.75;
per_frame_65=
per_frame_66=//end.
per_frame_67=batr=natr;
per_frame_68=monitor=log(thresh);
per_frame_69=
per_frame_70=
per_frame_71=wave_r = wave_r + 0.35*sin(3*time) + 0.15*sin(2.5*time);
per_frame_72=wave_g = wave_g + 0.35*sin(2.7*time) + 0.15*sin(2.11*time);
per_frame_73=wave_b = wave_b + 0.35*sin(2.84*time) + 0.15*sin(2.3*time);
per_frame_74=
per_frame_75=wave_mystery=wave_mystery*(addict);
per_frame_76=
per_frame_77=
per_frame_78=cog = ocog+0.005*(bass+bass_att+(bass*bass_att)-2);
per_frame_79=ocog = below(cog,30000)*cog;
per_frame_80=
per_frame_81=
per_frame_82=q1=batr*.1;
per_frame_83=q2=spik;
per_frame_84=q3=sin(time+q1)*.1;
per_frame_85=q26=(bass+treb+mid)*.3;
per_frame_86=
per_frame_87=
per_frame_88=
per_frame_89=
per_frame_90=
per_frame_91=//Hai guiz, you found the secret message. What are you gonna do now?
per_frame_92=//suicide
per_pixel_1=
per_pixel_2=w= -time*0.3; // direction (0: left; asin(1): top; (+/-)2*asin(1): right; -asin(1): bottom)
per_pixel_3=
per_pixel_4=X2 = x-0.5;
per_pixel_5=Y2 = y-0.5;
per_pixel_6=
per_pixel_7=X1 = sin(w)*X2 -cos(w)*Y2; // these 2 lines first rotate the x/y pane
per_pixel_8=Y1 = cos(w)*X2 +sin(w)*Y2;
per_pixel_9=
per_pixel_10=x = X1; // so you can use x and y as usually below
per_pixel_11=y = Y1;
per_pixel_12=
per_pixel_13=
per_pixel_14=  //Tiles- 
per_pixel_15=  //movement first:
per_pixel_16=  dxm=.01*sin(time*.41);
per_pixel_17=  dym=.01*sin(time*.36);
per_pixel_18=
per_pixel_19=  //Now the tiles themselves:
per_pixel_20=  dx1=dxm+.01*sin(x*80+sin(time))+.005*sin(q1*(y*sin(time*.94)));
per_pixel_21=  dy1=dym+.01*sin(y*80+sin(time))+.005*sin(q1*(x*sin(time*.97)));
per_pixel_22=  //end tiles
per_pixel_23=
per_pixel_24=
per_pixel_25=dx = sin(-w)*dx1 - cos(-w)*dy1; // and finally the dx/dy pane is rotated back to match the x/y pane
per_pixel_26=dy = cos(-w)*dx1 + sin(-w)*dy1;
per_pixel_27=
per_pixel_28=
warp_1=`shader_body
warp_2=`{
warp_3=`float2 pixelsize = texsize.zw;
warp_4=`
warp_5=`float zm = q5;
warp_6=`float2 cen = float2(q11,q12);
warp_7=`float2 uvo = (uv_orig-cen)*zm + cen;
warp_8=`
warp_9=`float2 uvm = uv_orig;
warp_10=`
warp_11=`float2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
warp_12=`float4 noiseVal = tex2D(sampler_noise_lq, noise_uv);
warp_13=`
warp_14=`ret.xy = tex2D( sampler_pw_main,uvo).xy;
warp_15=`ret.xy = (ret.xy-cen)/zm+cen;
warp_16=`
warp_17=`float2 uv2 = uv_orig  + (noiseVal.xy-.5)*12*pixelsize;
warp_18=`float3 rsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;
warp_19=`
warp_20=`rsamp.xy = (rsamp.xy-cen)/zm+cen;
warp_21=`
warp_22=`float4 len = (float4(ret.xy,rsamp.xy) - uvm.xyxy);
warp_23=`float l1 = length(len.xy);
warp_24=`if (l1 > length(len.zw)) ret.xy = rsamp.xy;
warp_25=`
warp_26=`uv2 = uv_orig  + (noiseVal.zw-.5)*48*pixelsize;
warp_27=`rsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;
warp_28=`rsamp-=roam_sin.wzy*roam_cos.zxy;
warp_29=`rsamp.xy = (rsamp.xy-cen)/zm+cen;
warp_30=`len.zw = rsamp.xy - uvm.xy;
warp_31=`if (l1 > length(len.zw)) ret.xy = rsamp.xy;
warp_32=`
warp_33=`//uv2 = uv_orig  + (noiseVal.zw-.5)*6*pixelsize;
warp_34=`//rsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;
warp_35=`//len = abs(float4(ret.xy,rsamp.xy) - uvm.xyxy);
warp_36=`//if (length(len.xy) > length(len.zw)) ret.xy = rsamp.xy;
warp_37=`
warp_38=`//float2 uvo = (uv_orig-cen)*zm + cen;
warp_39=`//if (q5) {
warp_40=`//ret.xy = tex2D( sampler_pw_main,uvo).xy;
warp_41=`//}
warp_42=`
warp_43=`ret.z = 0;
warp_44=`
warp_45=`}
comp_1=`float3 reta;
comp_2=`float3 retb;
comp_3=`float3 retc;
comp_4=`
comp_5=`shader_body
comp_6=`{
comp_7=`
comp_8=`
comp_9=`
comp_10=`uv = 0.5 + (uv-0.5)*0.98;
comp_11=`    float2 d = texsize.zw*4;
comp_12=`    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_13=`    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_14=`
comp_15=`float4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05
comp_16=`                                        + time*float3(0,0,1)*0.2 );
comp_17=`uv -= float2(lum(dx),lum(dy))*0.04;
comp_18=`ret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));
comp_19=`ret-=roam_sin.zyx*roam_cos.ywx;
comp_20=`ret *= lum(noise)*3; 
comp_21=`ret = pow(ret,0.5);
comp_22=`
comp_23=`
comp_24=`
comp_25=`float2 uv2 = uv*0.25;
comp_26=`float3 col = 0;
comp_27=`float2 uv3 = uv2;
comp_28=`for(int i = 0; i<16; i++){
comp_29=`    uv3 += i*float2(0.25,0) - (0==(i)%4)*float2(0,0.25);
comp_30=`    col = lerp(col,i/16.0,saturate(-GetPixel(uv3).y+tex2d(sampler_pw_main,frac(uv3)).y));
comp_31=`
comp_32=`
comp_33=`}
comp_34=`
comp_35=`
comp_36=`reta = lerp(GetPixel(uv).z*float3(0.6,0.2,1),float3(1,1,1),col*saturate(1-GetBlur1(uv).x*2));
comp_37=`retb = lerp(GetPixel(uv).z*float3(0.6,0.2,1),float3(1,1,1),col*saturate(1-GetBlur1(uv).x*2));
comp_38=`    float gx = GetPixel(uv+float2(1,0)*texsize.zw) - GetPixel(uv-float2(1,0)*texsize.zw);
comp_39=`    float gy = GetPixel(uv+float2(0,1)*texsize.zw) - GetPixel(uv-float2(0,1)*texsize.zw);
comp_40=`    float3 g = normalize(float3(gx, gy, .04));
comp_41=`
comp_42=`    reta = lerp(ret,float3(1.1,0.8,0.5),(dot(g.xyz,float3(frac(uv)-0.5,0.6))*0.5+0.5)*GetPixel(frac(uv)).x);
comp_43=`    retb = lerp(ret,float3(1.1,0.8,0.5),(dot(g.xyz,float3(frac(uv)-0.5,0.6))*0.5+0.5)*GetPixel(frac(uv)).x);
comp_44=`
comp_45=`//retc = lerp(ret,retb,(sin(time)*100));
comp_46=`ret = lerp(ret,reta,q20);
comp_47=`retc = lerp(ret,retb,(sin(time)*100));
comp_48=`ret = lerp(ret,retc,q20);
comp_49=`
comp_50=`ret = 1 - ret;
comp_51=`ret *= treb_att * .5;
comp_52=`}
