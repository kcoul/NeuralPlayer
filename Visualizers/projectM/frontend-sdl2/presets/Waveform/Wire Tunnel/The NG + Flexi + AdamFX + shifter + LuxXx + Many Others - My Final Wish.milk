MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.009
fWaveScale=2.713
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=1.200
fModWaveAlphaEnd=1.200
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.26000
cx=0.320
cy=0.290
dx=0.00000
dy=0.00000
warp=0.01105
sx=1.00000
sy=1.00000
wave_r=0.440
wave_g=0.400
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=495
wavecode_0_sep=4
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=100.00000
wavecode_0_smoothing=1.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.210
wave_0_init1=t2 = 0;
wave_0_init2=t3 = 0;
wave_0_init3=t4 = 0;
wave_0_init4=ab = 1;
wave_0_per_point1=// lorenz-attractor calc
wave_0_per_point2=xx1 = if(equal(sample,0),q11,xx1);
wave_0_per_point3=yy1 = if(equal(sample,0),q12,yy1);
wave_0_per_point4=zz1 = if(equal(sample,0),q13,zz1);
wave_0_per_point5=dx1 = q14*(yy1-xx1);
wave_0_per_point6=dy1 = xx1*(q15-zz1)-yy1;
wave_0_per_point7=dz1 = xx1*yy1-q16*zz1;
wave_0_per_point8=xx1 = xx1 + q17*dx1;
wave_0_per_point9=yy1 = yy1 + q17*dy1;
wave_0_per_point10=zz1 = zz1 + q17*dz1;
wave_0_per_point11=
wave_0_per_point12=// 3D model coordinates
wave_0_per_point13=my_x = xx1*0.1;
wave_0_per_point14=my_y = yy1*0.1;
wave_0_per_point15=my_z = zz1*0.1 - 3;
wave_0_per_point16=
wave_0_per_point17=
wave_0_per_point18=d = 5; // distance of the camera (on the z-axis) to the origin
wave_0_per_point19=zoom = 0.4;
wave_0_per_point20=
wave_0_per_point21=// solid angles
wave_0_per_point22=w1 = q2;
wave_0_per_point23=w2 = q3;
wave_0_per_point24=w3 = q4;
wave_0_per_point25=
wave_0_per_point26=// rotations
wave_0_per_point27=x1 = cos(w1)*my_x + sin(w1)*my_y;
wave_0_per_point28=y1 = -sin(w1)*my_x + cos(w1)*my_y;
wave_0_per_point29=z1 = my_z;
wave_0_per_point30=
wave_0_per_point31=x2 = cos(w2)*x1 + sin(w2)*z1;
wave_0_per_point32=z2 = -sin(w2)*x1 + cos(w2)*z1;
wave_0_per_point33=y2 = y1;
wave_0_per_point34=
wave_0_per_point35=y3 = cos(w3)*y2 + sin(w3)*z2;
wave_0_per_point36=z3 = -sin(w3)*y2 + cos(w3)*z2;
wave_0_per_point37=x3 = x2;
wave_0_per_point38=
wave_0_per_point39=// perspective calculation
wave_0_per_point40=
wave_0_per_point41=l = sqrt(x3*x3 + y3*y3);
wave_0_per_point42=w = atan2(x3,y3);
wave_0_per_point43=p = tan(asin(1) + atan2(d+z3,l));
wave_0_per_point44=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
wave_0_per_point45=
wave_0_per_point46=my_x = zoom*sin(w)*p;
wave_0_per_point47=my_y = zoom*cos(w)*p;
wave_0_per_point48=
wave_0_per_point49=x = 0.5 + my_x;
wave_0_per_point50=y = 0.5 + my_y;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=xx1 = if(equal(sample,0),q11,xx1);
wave_1_per_point2=yy1 = if(equal(sample,0),q12,yy1);
wave_1_per_point3=zz1 = if(equal(sample,0),q13,zz1);
wave_1_per_point4=
wave_1_per_point5=dx1 = q14*(yy1-xx1);
wave_1_per_point6=dy1 = xx1*(q15-zz1)-yy1;
wave_1_per_point7=dz1 = xx1*yy1-q16*zz1;
wave_1_per_point8=xx1 = xx1 + q17*dx1;
wave_1_per_point9=yy1 = yy1 + q17*dy1;
wave_1_per_point10=zz1 = zz1 + q17*dz1;
wave_1_per_point11=
wave_1_per_point12=my_x = xx1*0.02;
wave_1_per_point13=my_y = yy1*0.02;
wave_1_per_point14=my_z = zz1*0.02;
wave_1_per_point15=
wave_1_per_point16=x = 0.5 + my_x;
wave_1_per_point17=y = 0.5 + my_y;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=3
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=179
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.20065
shapecode_0_ang=0.75398
shapecode_0_tex_ang=3.14159
shapecode_0_tex_zoom=0.99979
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.500
shapecode_0_border_b=0.150
shapecode_0_border_a=1.000
shape_0_per_frame1=//lorenz-attractor calc
shape_0_per_frame2=xx1 = if(equal(instance,0),q11,xx1);
shape_0_per_frame3=yy1 = if(equal(instance,0),q12,yy1);
shape_0_per_frame4=zz1 = if(equal(instance,0),q13,zz1);
shape_0_per_frame5=
shape_0_per_frame6=dx1 = q14*(yy1-xx1);
shape_0_per_frame7=dy1 = xx1*(q15-zz1)-yy1;
shape_0_per_frame8=dz1 = xx1*yy1-q16*zz1;
shape_0_per_frame9=dd = sqrt(dx1*dx1+dy1*dy1+dz1*dz1);
shape_0_per_frame10=xx1 = xx1 + q17*dx1/dd;
shape_0_per_frame11=yy1 = yy1 + q17*dy1/dd;
shape_0_per_frame12=zz1 = zz1 + q17*dz1/dd;
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=// 3D object model coordinates
shape_0_per_frame16=my_x = xx1*0.1;
shape_0_per_frame17=my_y = yy1*0.1;
shape_0_per_frame18=my_z = zz1*0.1 - 3;
shape_0_per_frame19=
shape_0_per_frame20=
shape_0_per_frame21=d = 5; // camera distance
shape_0_per_frame22=zoom = 0.66;
shape_0_per_frame23=
shape_0_per_frame24=// solid angles
shape_0_per_frame25=w1 = q3;
shape_0_per_frame26=w2 = q4;
shape_0_per_frame27=w3 = q5;
shape_0_per_frame28=
shape_0_per_frame29=// 3D rotation
shape_0_per_frame30=x1 = cos(w1)*my_x + sin(w1)*my_y;
shape_0_per_frame31=y1 = -sin(w1)*my_x + cos(w1)*my_y;
shape_0_per_frame32=z1 = my_z;
shape_0_per_frame33=
shape_0_per_frame34=x2 = cos(w2)*x1 + sin(w2)*z1;
shape_0_per_frame35=z2 = -sin(w2)*x1 + cos(w2)*z1;
shape_0_per_frame36=y2 = y1;
shape_0_per_frame37=
shape_0_per_frame38=y3 = cos(w3)*y2 + sin(w3)*z2;
shape_0_per_frame39=z3 = -sin(w3)*y2 + cos(w3)*z2;
shape_0_per_frame40=x3 = x2;
shape_0_per_frame41=
shape_0_per_frame42=// perspective calculation
shape_0_per_frame43=
shape_0_per_frame44=l = sqrt(x3*x3 + y3*y3);
shape_0_per_frame45=w = atan2(x3,y3);
shape_0_per_frame46=p = tan(asin(1) + atan2(d+z3,l));
shape_0_per_frame47=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
shape_0_per_frame48=
shape_0_per_frame49=my_x = zoom*sin(w)*p;
shape_0_per_frame50=my_y = zoom*cos(w)*p;
shape_0_per_frame51=
shape_0_per_frame52=x = 0.5 + my_x;
shape_0_per_frame53=y = 0.5 + my_y;
shape_0_per_frame54=
shape_0_per_frame55=rad = rad/d;
shape_0_per_frame56=ang = ang-instance/num_inst*asin(1)*8;
shapecode_1_enabled=0
shapecode_1_sides=12
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=512
shapecode_1_x=0.500
shapecode_1_y=0.550
shapecode_1_rad=0.09860
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.78740
shapecode_1_r=0.200
shapecode_1_g=0.030
shapecode_1_b=0.550
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_init1=started = 0;
shape_1_init2=t1 = 0.412; //seeds for pseudo random generator
shape_1_init3=t2 = 0.4563;
shape_1_init4=t3 = 0.6452;
shape_1_init5=t4 = 0.2565;
shape_1_per_frame1=rnd1 = if(equal(instance,0),t1,rnd1);
shape_1_per_frame2=rnd2 = if(equal(instance,0),t2,rnd2);
shape_1_per_frame3=rnd3 = if(equal(instance,0),t3,rnd3);
shape_1_per_frame4=rnd4 = if(equal(instance,0),t4,rnd4);
shape_1_per_frame5=rnd1 = 4*rnd1*(1-rnd1);
shape_1_per_frame6=rnd2 = 4*rnd2*(1-rnd2);
shape_1_per_frame7=rnd3 = 4*rnd3*(1-rnd3);
shape_1_per_frame8=rnd4 = 4*rnd4*(1-rnd4);
shape_1_per_frame9=t = .6;
shape_1_per_frame10=t =  (rnd1+time*t) - int(rnd1+time*t);
shape_1_per_frame11=t = t + rnd2*0.1;
shape_1_per_frame12=wh = rnd4*asin(1)*4;
shape_1_per_frame13=wv = 0.25 + rnd3*0.1;
shape_1_per_frame14=
shape_1_per_frame15=d = 6; // makes the perspective impact
shape_1_per_frame16=zoom = 1;
shape_1_per_frame17=l = 1;
shape_1_per_frame18=
shape_1_per_frame19=// Kardan angles
shape_1_per_frame20=
shape_1_per_frame21=w1 = q3; // first rotation: clockwise in the desktop pane
shape_1_per_frame22=w2 = q4; // rotation around vertical axis
shape_1_per_frame23=w3 = q5; // rotation around horizontal axis
shape_1_per_frame24=
shape_1_per_frame25=
shape_1_per_frame26=// definition of the 3D shape
shape_1_per_frame27=
shape_1_per_frame28=i = instance;
shape_1_per_frame29=
shape_1_per_frame30=my_x = t *(cos(wh)*sin(wv)*l)*2;
shape_1_per_frame31=my_z = -(-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l*2;
shape_1_per_frame32=my_y = t*(sin(wh)*sin(wv)*l)*2;
shape_1_per_frame33=
shape_1_per_frame34=
shape_1_per_frame35=
shape_1_per_frame36=// 3D rotations
shape_1_per_frame37=
shape_1_per_frame38=x1 = cos(w1)*my_x + sin(w1)*my_y;
shape_1_per_frame39=y1 = -sin(w1)*my_x + cos(w1)*my_y;
shape_1_per_frame40=z1 = my_z;
shape_1_per_frame41=
shape_1_per_frame42=x2 = cos(w2)*x1 + sin(w2)*z1;
shape_1_per_frame43=z2 = -sin(w2)*x1 + cos(w2)*z1;
shape_1_per_frame44=y2 = y1;
shape_1_per_frame45=
shape_1_per_frame46=y3 = cos(w3)*y2 + sin(w3)*z2;
shape_1_per_frame47=z3 = -sin(w3)*y2 + cos(w3)*z2;
shape_1_per_frame48=x3 = x2;
shape_1_per_frame49=
shape_1_per_frame50=// perspective calculation
shape_1_per_frame51=
shape_1_per_frame52=p = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));
shape_1_per_frame53=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
shape_1_per_frame54=
shape_1_per_frame55=rad = rad/d;
shape_1_per_frame56=my_x = zoom*sin(atan2(x3,y3))*p;
shape_1_per_frame57=my_y = zoom*cos(atan2(x3,y3))*p;
shape_1_per_frame58=
shape_1_per_frame59=x = 0.5 + my_x;
shape_1_per_frame60=y = 0.5 + my_y;
shape_1_per_frame61=
shape_1_per_frame62=x = 0.5 + (x-0.5)/q2;
shape_1_per_frame63=y = 0.5 + (y-0.5)/q1;
shapecode_2_enabled=0
shapecode_2_sides=12
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=512
shapecode_2_x=0.500
shapecode_2_y=0.550
shapecode_2_rad=0.26670
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.78740
shapecode_2_r=0.000
shapecode_2_g=0.100
shapecode_2_b=0.550
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_init1=started = 0;
shape_2_init2=t1 = 0.412; //seeds for pseudo random generator
shape_2_init3=t2 = 0.4563;
shape_2_init4=t3 = 0.6452;
shape_2_init5=t4 = 0.2565;
shape_2_per_frame1=rnd1 = if(equal(instance,0),t1,rnd1);
shape_2_per_frame2=rnd2 = if(equal(instance,0),t2,rnd2);
shape_2_per_frame3=rnd3 = if(equal(instance,0),t3,rnd3);
shape_2_per_frame4=rnd4 = if(equal(instance,0),t4,rnd4);
shape_2_per_frame5=rnd1 = 4*rnd1*(1-rnd1);
shape_2_per_frame6=rnd2 = 4*rnd2*(1-rnd2);
shape_2_per_frame7=rnd3 = 4*rnd3*(1-rnd3);
shape_2_per_frame8=rnd4 = 4*rnd4*(1-rnd4);
shape_2_per_frame9=t = .6;
shape_2_per_frame10=t =  (rnd1+time*t) - int(rnd1+time*t);
shape_2_per_frame11=t = t + rnd2*0.1;
shape_2_per_frame12=wh = rnd4*asin(1)*4;
shape_2_per_frame13=wv = 0.25 + rnd3*0.1;
shape_2_per_frame14=
shape_2_per_frame15=d = 6; // makes the perspective impact
shape_2_per_frame16=zoom = 1;
shape_2_per_frame17=l = 1;
shape_2_per_frame18=
shape_2_per_frame19=// Kardan angles
shape_2_per_frame20=
shape_2_per_frame21=w1 = q3; // first rotation: clockwise in the desktop pane
shape_2_per_frame22=w2 = q4; // rotation around vertical axis
shape_2_per_frame23=w3 = q5; // rotation around horizontal axis
shape_2_per_frame24=
shape_2_per_frame25=
shape_2_per_frame26=// definition of the 3D shape
shape_2_per_frame27=
shape_2_per_frame28=i = instance;
shape_2_per_frame29=
shape_2_per_frame30=my_x = t *(cos(wh)*sin(wv)*l)*4;
shape_2_per_frame31=my_z = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l*4;
shape_2_per_frame32=my_y = t*(sin(wh)*sin(wv)*l)*4;
shape_2_per_frame33=
shape_2_per_frame34=
shape_2_per_frame35=// 3D rotations
shape_2_per_frame36=
shape_2_per_frame37=x1 = cos(w1)*my_x + sin(w1)*my_y;
shape_2_per_frame38=y1 = -sin(w1)*my_x + cos(w1)*my_y;
shape_2_per_frame39=z1 = my_z;
shape_2_per_frame40=
shape_2_per_frame41=x2 = cos(w2)*x1 + sin(w2)*z1;
shape_2_per_frame42=z2 = -sin(w2)*x1 + cos(w2)*z1;
shape_2_per_frame43=y2 = y1;
shape_2_per_frame44=
shape_2_per_frame45=y3 = cos(w3)*y2 + sin(w3)*z2;
shape_2_per_frame46=z3 = -sin(w3)*y2 + cos(w3)*z2;
shape_2_per_frame47=x3 = x2;
shape_2_per_frame48=
shape_2_per_frame49=// perspective calculation
shape_2_per_frame50=
shape_2_per_frame51=p = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));
shape_2_per_frame52=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
shape_2_per_frame53=
shape_2_per_frame54=rad = rad/d;
shape_2_per_frame55=my_x = zoom*sin(atan2(x3,y3))*p;
shape_2_per_frame56=my_y = zoom*cos(atan2(x3,y3))*p;
shape_2_per_frame57=
shape_2_per_frame58=x = 0.5 + my_x;
shape_2_per_frame59=y = 0.5 + my_y;
shape_2_per_frame60=
shape_2_per_frame61=x = 0.5 + (x-0.5)/q2;
shape_2_per_frame62=y = 0.5 + (y-0.5)/q1;
shapecode_3_enabled=0
shapecode_3_sides=12
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=512
shapecode_3_x=0.500
shapecode_3_y=0.550
shapecode_3_rad=0.05012
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.78740
shapecode_3_r=0.000
shapecode_3_g=0.020
shapecode_3_b=0.110
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_init1=started = 0;
shape_3_init2=t1 = 0.412; //seeds for pseudo random generator
shape_3_init3=t2 = 0.4563;
shape_3_init4=t3 = 0.6452;
shape_3_init5=t4 = 0.2565;
shape_3_per_frame1=rnd1 = if(equal(instance,0),t1,rnd1);
shape_3_per_frame2=rnd2 = if(equal(instance,0),t2,rnd2);
shape_3_per_frame3=rnd3 = if(equal(instance,0),t3,rnd3);
shape_3_per_frame4=rnd4 = if(equal(instance,0),t4,rnd4);
shape_3_per_frame5=rnd1 = 4*rnd1*(1-rnd1);
shape_3_per_frame6=rnd2 = 4*rnd2*(1-rnd2);
shape_3_per_frame7=rnd3 = 4*rnd3*(1-rnd3);
shape_3_per_frame8=rnd4 = 4*rnd4*(1-rnd4);
shape_3_per_frame9=t = .6;
shape_3_per_frame10=t =  (rnd1+time*t) - int(rnd1+time*t);
shape_3_per_frame11=t = t + rnd2*0.1;
shape_3_per_frame12=wh = rnd4*asin(1)*4;
shape_3_per_frame13=wv = 0.25 + rnd3*0.1;
shape_3_per_frame14=
shape_3_per_frame15=d = 1.4; // makes the perspective impact
shape_3_per_frame16=zoom = 1;
shape_3_per_frame17=l = 1;
shape_3_per_frame18=
shape_3_per_frame19=// Kardan angles
shape_3_per_frame20=
shape_3_per_frame21=w1 = q3; // first rotation: clockwise in the desktop pane
shape_3_per_frame22=w2 = q4; // rotation around vertical axis
shape_3_per_frame23=w3 = q5; // rotation around horizontal axis
shape_3_per_frame24=
shape_3_per_frame25=
shape_3_per_frame26=// definition of the 3D shape
shape_3_per_frame27=
shape_3_per_frame28=i = instance;
shape_3_per_frame29=
shape_3_per_frame30=my_x = t *(cos(wh)*sin(wv)*l);
shape_3_per_frame31=my_y = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l;
shape_3_per_frame32=my_z = t*(sin(wh)*sin(wv)*l);
shape_3_per_frame33=
shape_3_per_frame34=
shape_3_per_frame35=// 3D rotations
shape_3_per_frame36=
shape_3_per_frame37=x1 = cos(w1)*my_x + sin(w1)*my_y;
shape_3_per_frame38=y1 = -sin(w1)*my_x + cos(w1)*my_y;
shape_3_per_frame39=z1 = my_z;
shape_3_per_frame40=
shape_3_per_frame41=x2 = cos(w2)*x1 + sin(w2)*z1;
shape_3_per_frame42=z2 = -sin(w2)*x1 + cos(w2)*z1;
shape_3_per_frame43=y2 = y1;
shape_3_per_frame44=
shape_3_per_frame45=y3 = cos(w3)*y2 + sin(w3)*z2;
shape_3_per_frame46=z3 = -sin(w3)*y2 + cos(w3)*z2;
shape_3_per_frame47=x3 = x2;
shape_3_per_frame48=
shape_3_per_frame49=// perspective calculation
shape_3_per_frame50=
shape_3_per_frame51=p = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));
shape_3_per_frame52=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
shape_3_per_frame53=
shape_3_per_frame54=rad = rad/d;
shape_3_per_frame55=my_x = zoom*sin(atan2(x3,y3))*p;
shape_3_per_frame56=my_y = zoom*cos(atan2(x3,y3))*p;
shape_3_per_frame57=
shape_3_per_frame58=x = 0.5 + my_x;
shape_3_per_frame59=y = 0.5 + my_y;
shape_3_per_frame60=
shape_3_per_frame61=x = 0.5 + (x-0.5)/q2;
shape_3_per_frame62=y = 0.5 + (y-0.5)/q1;
per_frame_1=warp = 0;
per_frame_2=//zoom = 1;
per_frame_3=
per_frame_4=tic = min(time-tin,.1);
per_frame_5=tin = time;
per_frame_6=
per_frame_7=vol = (bass_att + treb_att + mid_att)*.333333;
per_frame_8=
per_frame_9=ra = 1/tic*.25;
per_frame_10=
per_frame_11=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_12=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_13=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_14=vav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);
per_frame_15=
per_frame_16=tt = tt + tic*treb;
per_frame_17=mt = mt + tic*mid;
per_frame_18=bt = bt + tic*bass;
per_frame_19=vt = vt + tic*vav;
per_frame_20=
per_frame_21=q1 = tt*3;// wave morph speeds
per_frame_22=q2 = mt*3;
per_frame_23=q3 = bt*3;
per_frame_24=
per_frame_25=q4 = vt; // wave colour cycle
per_frame_26=
per_frame_27=rb = if(rb,rb,.2 + rand(1001)*.001*.6);
per_frame_28=rc = if(rc,rc,.2 + rand(1001)*.001*.6);
per_frame_29=rd = if(rd,rd,.2 + rand(1001)*.001*.6);
per_frame_30=re = if(re,re,.2 + rand(1001)*.001*.6);
per_frame_31=
per_frame_32=//rot = .26;
per_frame_33=
per_frame_34=ti = vt*2;
per_frame_35=cx = .3 + .1*sin(ti*re) + .1*cos(ti*rc);
per_frame_36=cy = .5 + .2*sin(ti*rb) + .1*cos(ti*rd);
per_frame_37=
per_pixel_1=num = 8;
per_pixel_2=pi = 3.141592654;
per_pixel_3=radi = (y-.5)*.75;
per_pixel_4=radi = (y-.5);
per_pixel_5=radi = pow(radi*radi + (x-.5)*(x-.5),.5);
per_pixel_6=
per_pixel_7=an = ang + pi + time;
per_pixel_8=an = an - pi*2*int(an/(pi*2));
per_pixel_9=
per_pixel_10=mod = .1;
per_pixel_11=
per_pixel_12=seg = ang + pi;
per_pixel_13=seg = seg/(pi*2)*num;
per_pixel_14=seg = int(seg);
per_pixel_15=seg = seg - equal(seg,num);
per_pixel_16=
per_pixel_17=anga = (ang + pi) - (pi*2/num)*seg;
per_pixel_18=anga = if(equal(seg%2,0),(pi*2/num) - anga,anga);
per_pixel_19=//anga = anga + pi/6; // num = 6
per_pixel_20=anga = anga + pi/4; // num = 8
per_pixel_21=//anga = anga + .85; // num = 10
per_pixel_22=
per_pixel_23=
per_pixel_24=ox = .5 - radi*sin(anga);
per_pixel_25=oy = .5 + radi*cos(anga);
per_pixel_26=
per_pixel_27=rot = if(equal(seg,0),rot,0);
per_pixel_28=
per_pixel_29=dx = equal(seg,3)*(x-ox);
per_pixel_30=dy = equal(seg,3)*(y-oy);
per_pixel_31=
per_pixel_32=dx = above(seg,0)*(x-ox);
per_pixel_33=dy = above(seg,0)*(y-oy);
per_pixel_34=
per_pixel_35=//dx = equal(seg,1)*(x - .5)*2;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_main, uv ).xyz;
warp_5=`    
warp_6=`    // darken (decay) over time
warp_7=`ret-=roam_sin.wzy*roam_cos.zxy;
warp_8=`    ret = ret- (ret*.5);
warp_9=`    ret = ret*(abs(GetBlur2(uv)-.5))*5;
warp_10=`    ret = ret - .01;
warp_11=`}
comp_1=`shader_body
comp_2=`{
comp_3=`float2 uv1 = (uv-0.5)*aspect.xy;
comp_4=`
comp_5=`float rad2 = length(uv1) + .05;
comp_6=`float rad1 = .1/rad2 ;
comp_7=`
comp_8=`float2 uv2 = float2 (ang/3.14, rad1*1.5);
comp_9=`uv2.y = uv2.y  +0.1*time;
comp_10=`uv2.x = uv2.x  +.02*time;
comp_11=`
comp_12=`float2 uv3 = float2 (ang/3.14, rad1);
comp_13=`uv3.y = uv3.y  + q30 ;
comp_14=`uv3.x = uv3.x  + time/32;
comp_15=`
comp_16=`
comp_17=`float3 crisp = GetPixel(uv2) + 2*GetPixel(uv3);
comp_18=`crisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));
comp_19=`
comp_20=`float3 lay1 = float3 (1,0,1)*uv.y*pow(1-rad,8);
comp_21=`
comp_22=`crisp = 3*crisp * pow(rad,1);
comp_23=`
comp_24=`float mask = saturate(1-4*rad);
comp_25=`
comp_26=`ret = crisp + lay1*mask + mask * GetPixel(uv);
comp_27=`
comp_28=`}
