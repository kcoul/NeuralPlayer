MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=-1.000
cy=0.500
dx=0.00000
dy=0.00000
warp=0.72142
sx=1.00000
sy=0.98030
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=1.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.500
ib_r=1.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.000
wavecode_0_g=0.000
wavecode_0_b=1.000
wavecode_0_a=0.050
wave_0_init1=t1 = .2 + .6*int(rand(1001))*.001;
wave_0_init2=t2 = .2 + .6*int(rand(1001))*.001;
wave_0_init3=t3 = .2 + .6*int(rand(1001))*.001;
wave_0_init4=t4 = .2 + .6*int(rand(1001))*.001;
wave_0_init5=t5 = .2 + .6*int(rand(1001))*.001;
wave_0_init6=t6 = .2 + .6*int(rand(1001))*.001;
wave_0_init7=t7 = .2 + .6*int(rand(1001))*.001;
wave_0_init8=t8 = .2 + .6*int(rand(1001))*.001;
wave_0_per_point1=ti = q1;
wave_0_per_point2=
wave_0_per_point3=xa = .25 + .25*sin(ti*t1);
wave_0_per_point4=xb = .25 + .25*sin(ti*t2);
wave_0_per_point5=xc = .25 + .25*sin(ti*t3);
wave_0_per_point6=xd = .25 + .25*sin(ti*t4);
wave_0_per_point7=
wave_0_per_point8=ya = .25 + .25*sin(ti*t5);
wave_0_per_point9=yb = .25 + .25*sin(ti*t6);
wave_0_per_point10=yc = .25 + .25*sin(ti*t7);
wave_0_per_point11=yd = .25 + .25*sin(ti*t8);
wave_0_per_point12=
wave_0_per_point13=
wave_0_per_point14=it = (it + 1)*above(sample,0);
wave_0_per_point15=sw = (1-sw)*above(sample,0);
wave_0_per_point16=
wave_0_per_point17=sa = 1-sample;
wave_0_per_point18=x = if(sw,xa*sample + sa*xb,xc*sample + xd*sa);
wave_0_per_point19=y = if(sw,ya*sample + sa*yb,yc*sample + yd*sa);
wave_0_per_point20=
wave_0_per_point21=y = .5 - y*(.5-x)*2;
wave_0_per_point22=
wave_0_per_point23=
wave_0_per_point24=ti = q4;
wave_0_per_point25=r = .5 + .5*sin(ti);
wave_0_per_point26=g = .5 + .5*sin(ti + 2.0944);
wave_0_per_point27=b = .5 + .5*sin(ti + 4.1888);
wave_0_per_point28=
wave_0_per_point29=a = q5;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.000
wavecode_1_g=1.000
wavecode_1_b=0.000
wavecode_1_a=0.050
wave_1_init1=t1 = .2 + .6*int(rand(1001))*.001;
wave_1_init2=t2 = .2 + .6*int(rand(1001))*.001;
wave_1_init3=t3 = .2 + .6*int(rand(1001))*.001;
wave_1_init4=t4 = .2 + .6*int(rand(1001))*.001;
wave_1_init5=t5 = .2 + .6*int(rand(1001))*.001;
wave_1_init6=t6 = .2 + .6*int(rand(1001))*.001;
wave_1_init7=t7 = .2 + .6*int(rand(1001))*.001;
wave_1_init8=t8 = .2 + .6*int(rand(1001))*.001;
wave_1_per_point1=ti = q2;
wave_1_per_point2=
wave_1_per_point3=xa = .25 + .25*sin(ti*t1);
wave_1_per_point4=xb = .25 + .25*sin(ti*t2);
wave_1_per_point5=xc = .25 + .25*sin(ti*t3);
wave_1_per_point6=xd = .25 + .25*sin(ti*t4);
wave_1_per_point7=
wave_1_per_point8=ya = .25 + .25*sin(ti*t5);
wave_1_per_point9=yb = .25 + .25*sin(ti*t6);
wave_1_per_point10=yc = .25 + .25*sin(ti*t7);
wave_1_per_point11=yd = .25 + .25*sin(ti*t8);
wave_1_per_point12=
wave_1_per_point13=
wave_1_per_point14=it = (it + 1)*above(sample,0);
wave_1_per_point15=sw = (1-sw)*above(sample,0);
wave_1_per_point16=
wave_1_per_point17=sa = 1-sample;
wave_1_per_point18=x = if(sw,xa*sample + sa*xb,xc*sample + xd*sa);
wave_1_per_point19=y = if(sw,ya*sample + sa*yb,yc*sample + yd*sa);
wave_1_per_point20=
wave_1_per_point21=y = .5 - y*(.5-x)*2;
wave_1_per_point22=
wave_1_per_point23=ti = q4 + 2.0944;
wave_1_per_point24=r = .5 + .5*sin(ti);
wave_1_per_point25=g = .5 + .5*sin(ti + 2.0944);
wave_1_per_point26=b = .5 + .5*sin(ti + 4.1888);
wave_1_per_point27=
wave_1_per_point28=a = q6;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=0.000
wavecode_2_b=0.000
wavecode_2_a=0.050
wave_2_init1=t1 = .2 + .6*int(rand(1001))*.001;
wave_2_init2=t2 = .2 + .6*int(rand(1001))*.001;
wave_2_init3=t3 = .2 + .6*int(rand(1001))*.001;
wave_2_init4=t4 = .2 + .6*int(rand(1001))*.001;
wave_2_init5=t5 = .2 + .6*int(rand(1001))*.001;
wave_2_init6=t6 = .2 + .6*int(rand(1001))*.001;
wave_2_init7=t7 = .2 + .6*int(rand(1001))*.001;
wave_2_init8=t8 = .2 + .6*int(rand(1001))*.001;
wave_2_per_point1=ti = q3;
wave_2_per_point2=
wave_2_per_point3=xa = .25 + .25*sin(ti*t1);
wave_2_per_point4=xb = .25 + .25*sin(ti*t2);
wave_2_per_point5=xc = .25 + .25*sin(ti*t3);
wave_2_per_point6=xd = .25 + .25*sin(ti*t4);
wave_2_per_point7=
wave_2_per_point8=ya = .25 + .25*sin(ti*t5);
wave_2_per_point9=yb = .25 + .25*sin(ti*t6);
wave_2_per_point10=yc = .25 + .25*sin(ti*t7);
wave_2_per_point11=yd = .25 + .25*sin(ti*t8);
wave_2_per_point12=
wave_2_per_point13=
wave_2_per_point14=it = (it + 1)*above(sample,0);
wave_2_per_point15=sw = (1-sw)*above(sample,0);
wave_2_per_point16=
wave_2_per_point17=sa = 1-sample;
wave_2_per_point18=x = if(sw,xa*sample + sa*xb,xc*sample + xd*sa);
wave_2_per_point19=y = if(sw,ya*sample + sa*yb,yc*sample + yd*sa);
wave_2_per_point20=
wave_2_per_point21=y = .5 - y*(.5-x)*2;
wave_2_per_point22=
wave_2_per_point23=ti = q4 + 4.1888;
wave_2_per_point24=r = .5 + .5*sin(ti);
wave_2_per_point25=g = .5 + .5*sin(ti + 2.0944);
wave_2_per_point26=b = .5 + .5*sin(ti + 4.1888);
wave_2_per_point27=a = q7;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.97883
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=tex_zoom = 1/rad;
shape_0_per_frame2=
shape_0_per_frame3=a = .7;
shape_0_per_frame4=a2 = a;
shapecode_1_enabled=0
shapecode_1_sides=54
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.150
shapecode_1_y=0.390
shapecode_1_rad=0.04084
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=bl = 3.8;
per_frame_26=ul = 7.9;
per_frame_27=rate = 11.9;
per_frame_28=cha = .01;
per_frame_29=
per_frame_30=gv = if(above(gv,bl),  if(below(gv,ul),  if(above(fps,rate),gv + cha,gv - cha),  ul-.1),bl+.1);
per_frame_31=
per_frame_32=
per_frame_33=
per_frame_34=monitor = gv;
per_frame_35=
per_frame_36=wave_a = 0;
per_frame_37=
per_frame_38=tic = min(time - tin,1);
per_frame_39=tin = time;
per_frame_40=
per_frame_41=ra = 10;
per_frame_42=
per_frame_43=
per_frame_44=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_45=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_46=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_47=
per_frame_48=rb = 1;
per_frame_49=vav = tic*(vav*(1/tic - rb) + rb*(bass+treb+mid)*.33333);
per_frame_50=q1 = treb_avg;
per_frame_51=q2 = mid_avg;
per_frame_52=q3 = bass_avg;
per_frame_53=
per_frame_54=db = bass - bass_avg;
per_frame_55=
per_frame_56=it = (it + tic)*below(it,1);
per_frame_57=
per_frame_58=rb = .5*(1/tic);
per_frame_59=bvb = tic*(bass*rb + (1/tic-rb)*bvb);
per_frame_60=bd = bass - bvb;
per_frame_61=
per_frame_62=vm = vm - tic + swi;
per_frame_63=swi = above(bd - vm,0);
per_frame_64=
per_frame_65=q4 = 1-swi;
per_frame_66=
per_frame_67=cm = if(above(iter,30) + equal(time,0),int(rand(3)) + 1,cm);
per_frame_68=iter = (iter + tic)*(1-above(iter,30));
per_frame_69=q5 = if(equal(cm,0),3,cm);
per_frame_70=
per_frame_71=cma = if(above(itar,5) + equal(time,0),int(vav*5),cma);
per_frame_72=itar = (itar + tic)*(1-above(itar,5));
per_frame_73=
per_frame_74=q6 = int(vav*5);
per_frame_75=
per_frame_76=
per_frame_77=decay=0.97;
per_frame_78=zoom=1.01;
per_frame_79=sx=1;sy=1;
per_pixel_1=warp = bass;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret.xyz = tex2D( sampler_main, uv ).xyz;
warp_5=`
warp_6=`      // take the difference between the crisp and blurred images,
warp_7=`      // then add it back into the image.  Creates spots and stripes over time.
warp_8=`      ret.xyz += (ret.xyz - GetBlur2(uv))*0.3;
warp_9=`      ret.xyz *= 0.9;
warp_10=`
warp_11=`      // add noise:
warp_12=`      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;
warp_13=`      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 * saturate(treb_att-1);
warp_14=`
warp_15=`      // desaturate over time, to keep the globs white
warp_16=`      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);
warp_17=`
warp_18=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_19=`                      ((uv.xyy*q27
warp_20=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_21=`                      ).xyz*
warp_22=`                      float3(1,1,0)*0.05 + 
warp_23=`                      time*float3(0,0,1)*q29
warp_24=`                     );
warp_25=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_26=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_27=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_28=`}
comp_1=`float3 ret1, neu, blur;
comp_2=`
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uv2;
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5;
comp_8=`uv *= aspect.xy;    
comp_9=`
comp_10=`float2 tmp = uv;
comp_11=`ret1 = 0;
comp_12=`int anz = 5;
comp_13=`int n = 0;
comp_14=`while (n <= anz) {
comp_15=`    ang2 = 6.28*n/anz;
comp_16=`    c = cos(ang2);
comp_17=`    s = sin(ang2);
comp_18=`    uv2.x =  uv.x*c - uv.y*s;
comp_19=`    uv2.y =  uv.x*s + uv.y*c;
comp_20=`    neu = GetPixel (uv2 + 0.4 + .02*q27 );
comp_21=`    blur= GetBlur1 (uv2 + 0.4 + .02*q27 );
comp_22=`    ret1 = max(ret1, neu+blur*2);
comp_23=`n++;
comp_24=`}
comp_25=`
comp_26=`
comp_27=`// I think this bit's from ORB
comp_28=`ret = (ret1-0.0125)*0.7;
comp_29=`    float3 retish = 1 - ret*(1-ret)*4; //solarize
comp_30=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_31=`                      ((uv.xyy*q28
comp_32=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_33=`                      ).xyz*
comp_34=`                      float3(1,1,0)*0.05 + 
comp_35=`                      time*float3(0,0,1)*q31
comp_36=`                     );
comp_37=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_38=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_39=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_40=`    ret = float3(retish[0]*0.5,retish[1]*0.5,retish[2]);
comp_41=`    ret *= 0.5;
comp_42=`
comp_43=`
comp_44=`}
