MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.280
fDecay=0.980
fVideoEchoZoom=1.228
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=2.89992
fShader=1.000
zoom=1.10356
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.02001
sx=1.01000
sy=1.01000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=ps = if(above(time-tin,tr),1,0);
wave_0_per_frame2=tin = if(ps,time,tin);
wave_0_per_frame3=
wave_0_per_frame4=sz = 3.5;
wave_0_per_frame5=
wave_0_per_frame6=xr = if(ps,int(rand(sz*10*2 + 1))*.1 - sz,xr);
wave_0_per_frame7=yr = if(ps,int(rand(sz*10*2*.75 + 1))*.1 - sz*.75,yr);
wave_0_per_frame8=tr = if(ps,int(rand(11))*.1*.1,tr);
wave_0_per_frame9=
wave_0_per_frame10=sr = if(ps,(int(rand(8))+3)*.1*.6,sr);
wave_0_per_frame11=
wave_0_per_frame12=bob = if(ps,int(rand(q5))*100,bob);
wave_0_per_frame13=
wave_0_per_frame14=t1 = xr + bob;
wave_0_per_frame15=t2 = yr + bob;
wave_0_per_frame16=t3 = sr;
wave_0_per_point1=sp = sample*6.28*8*8*4;
wave_0_per_point2=it = it+1;
wave_0_per_point3=it = it*above(sample,0);
wave_0_per_point4=sz = t3;
wave_0_per_point5=ss = sample*6;
wave_0_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_0_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_0_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_0_per_point9=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_0_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_0_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_0_per_point12=
wave_0_per_point13=fov = .3;
wave_0_per_point14=
wave_0_per_point15=a = .05;
wave_0_per_point16=mod = (oz+1)*.5;
wave_0_per_point17=a = a*max(min(mod,1),0);
wave_0_per_point18=oz = oz - 2;
wave_0_per_point19=
wave_0_per_point20=ox = ox + t1;
wave_0_per_point21=oy = oy + t2;
wave_0_per_point22=
wave_0_per_point23=x = ox*fov/oz + 0.5;
wave_0_per_point24=x = (x-.5)*0.75 + 0.5;
wave_0_per_point25=y = oy*fov/oz + 0.5;
wave_0_per_point26=
wave_0_per_point27=r = 1;
wave_0_per_point28=g = .25+.25*sin(sp);
wave_0_per_point29=b = 0;
wave_0_per_point30=
wave_0_per_point31=minrgb = min(r,min(g,b));
wave_0_per_point32=maxrgb = max(r,max(g,b));
wave_0_per_point33=l = (maxrgb-minrgb)*.5;
wave_0_per_point34=diff = maxrgb-minrgb;
wave_0_per_point35=sum = maxrgb+minrgb;
wave_0_per_point36=s = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));
wave_0_per_point37=h = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));
wave_0_per_point38=h = h*0.1666666;
wave_0_per_point39=h = if(below(h,0),0,if(above(h,1),1,h));
wave_0_per_point40=
wave_0_per_point41=h = h + time*0.05*1.324;
wave_0_per_point42=h = h - int(h);
wave_0_per_point43=
wave_0_per_point44=tmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));
wave_0_per_point45=tmpa = 2*l - tmpb;
wave_0_per_point46=hvr = h + .333333;
wave_0_per_point47=hvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));
wave_0_per_point48=hvg = h;
wave_0_per_point49=hvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));
wave_0_per_point50=hvb = h - .333333;
wave_0_per_point51=hvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));
wave_0_per_point52=
wave_0_per_point53=r = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));
wave_0_per_point54=g = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));
wave_0_per_point55=b = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=ps = if(above(time-tin,tr),1,0);
wave_1_per_frame2=tin = if(ps,time,tin);
wave_1_per_frame3=
wave_1_per_frame4=sz = 3.5;
wave_1_per_frame5=
wave_1_per_frame6=xr = if(ps,int(rand(sz*10*2 + 1))*.1 - sz,xr);
wave_1_per_frame7=yr = if(ps,int(rand(sz*10*2*.75 + 1))*.1 - sz*.75,yr);
wave_1_per_frame8=tr = if(ps,int(rand(11))*.1*.1,tr);
wave_1_per_frame9=
wave_1_per_frame10=sr = if(ps,(int(rand(8))+3)*.1*.6,sr);
wave_1_per_frame11=
wave_1_per_frame12=bob = if(ps,int(rand(q5))*100,bob);
wave_1_per_frame13=
wave_1_per_frame14=t1 = xr + bob;
wave_1_per_frame15=t2 = yr + bob;
wave_1_per_frame16=t3 = sr;
wave_1_per_point1=sp = sample*6.28*8*8*4;
wave_1_per_point2=it = it+1;
wave_1_per_point3=it = it*above(sample,0);
wave_1_per_point4=sz = t3;
wave_1_per_point5=ss = sample*6;
wave_1_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_1_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_1_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_1_per_point9=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_1_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_1_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_1_per_point12=
wave_1_per_point13=fov = .3;
wave_1_per_point14=
wave_1_per_point15=a = .05;
wave_1_per_point16=mod = (oz+1)*.5;
wave_1_per_point17=a = a*max(min(mod,1),0);
wave_1_per_point18=oz = oz - 2;
wave_1_per_point19=
wave_1_per_point20=ox = ox + t1;
wave_1_per_point21=oy = oy + t2;
wave_1_per_point22=
wave_1_per_point23=x = ox*fov/oz + 0.5;
wave_1_per_point24=x = (x-.5)*0.75 + 0.5;
wave_1_per_point25=y = oy*fov/oz + 0.5;
wave_1_per_point26=
wave_1_per_point27=r = 1+sin(sp);
wave_1_per_point28=g = 0.5 + 0.5*sin(sample*1.57);
wave_1_per_point29=b = 0.5 + 0.5*cos(sample*1.57);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=ps = if(above(time-tin,tr),1,0);
wave_2_per_frame2=tin = if(ps,time,tin);
wave_2_per_frame3=
wave_2_per_frame4=sz = 3.5;
wave_2_per_frame5=
wave_2_per_frame6=xr = if(ps,int(rand(sz*10*2 + 1))*.1 - sz,xr);
wave_2_per_frame7=yr = if(ps,int(rand(sz*10*2*.75 + 1))*.1 - sz*.75,yr);
wave_2_per_frame8=tr = if(ps,int(rand(11))*.1*.1,tr);
wave_2_per_frame9=
wave_2_per_frame10=sr = if(ps,(int(rand(8))+3)*.1*.6,sr);
wave_2_per_frame11=
wave_2_per_frame12=bob = if(ps,int(rand(q5))*100,bob);
wave_2_per_frame13=
wave_2_per_frame14=t1 = xr + bob;
wave_2_per_frame15=t2 = yr + bob;
wave_2_per_frame16=t3 = sr;
wave_2_per_point1=sp = sample*6.28*8*8*4;
wave_2_per_point2=it = it+1;
wave_2_per_point3=it = it*above(sample,0);
wave_2_per_point4=sz = t3;
wave_2_per_point5=ss = sample*6;
wave_2_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_2_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_2_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_2_per_point9=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_2_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_2_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_2_per_point12=
wave_2_per_point13=fov = .3;
wave_2_per_point14=
wave_2_per_point15=a = .05;
wave_2_per_point16=mod = (oz+1)*.5;
wave_2_per_point17=a = a*max(min(mod,1),0);
wave_2_per_point18=oz = oz - 2;
wave_2_per_point19=
wave_2_per_point20=ox = ox + t1;
wave_2_per_point21=oy = oy + t2;
wave_2_per_point22=
wave_2_per_point23=x = ox*fov/oz + 0.5;
wave_2_per_point24=x = (x-.5)*0.75 + 0.5;
wave_2_per_point25=y = oy*fov/oz + 0.5;
wave_2_per_point26=
wave_2_per_point27=r = 1+sin(sp);
wave_2_per_point28=g = 0.5 + 0.5*sin(sample*1.57);
wave_2_per_point29=b = 0.5 + 0.5*cos(sample*1.57);
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=ps = if(above(time-tin,tr),1,0);
wave_3_per_frame2=tin = if(ps,time,tin);
wave_3_per_frame3=
wave_3_per_frame4=sz = 3.5;
wave_3_per_frame5=
wave_3_per_frame6=xr = if(ps,int(rand(sz*10*2 + 1))*.1 - sz,xr);
wave_3_per_frame7=yr = if(ps,int(rand(sz*10*2*.75 + 1))*.1 - sz*.75,yr);
wave_3_per_frame8=tr = if(ps,int(rand(11))*.1*.1,tr);
wave_3_per_frame9=
wave_3_per_frame10=sr = if(ps,(int(rand(8))+3)*.1*.6,sr);
wave_3_per_frame11=
wave_3_per_frame12=bob = if(ps,int(rand(q5))*100,bob);
wave_3_per_frame13=
wave_3_per_frame14=t1 = xr + bob;
wave_3_per_frame15=t2 = yr + bob;
wave_3_per_frame16=t3 = sr;
wave_3_per_point1=sp = sample*6.28*8*8*4;
wave_3_per_point2=it = it+1;
wave_3_per_point3=it = it*above(sample,0);
wave_3_per_point4=sz = t3;
wave_3_per_point5=ss = sample*6;
wave_3_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_3_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_3_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_3_per_point9=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_3_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_3_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_3_per_point12=
wave_3_per_point13=fov = .3;
wave_3_per_point14=
wave_3_per_point15=a = .05;
wave_3_per_point16=mod = (oz+1)*.5;
wave_3_per_point17=a = a*max(min(mod,1),0);
wave_3_per_point18=oz = oz - 2;
wave_3_per_point19=
wave_3_per_point20=ox = ox + t1;
wave_3_per_point21=oy = oy + t2;
wave_3_per_point22=
wave_3_per_point23=x = ox*fov/oz + 0.5;
wave_3_per_point24=x = (x-.5)*0.75 + 0.5;
wave_3_per_point25=y = oy*fov/oz + 0.5;
wave_3_per_point26=
wave_3_per_point27=r = 1+sin(sp);
wave_3_per_point28=g = 0.5 + 0.5*sin(sample*1.57);
wave_3_per_point29=b = 0.5 + 0.5*cos(sample*1.57);
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.200
shapecode_0_y=0.300
shapecode_0_rad=0.27048
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=3.99914
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=wave_r = wave_r + 0.200*( 0.60*sin(1.517*time) + 0.40*sin(1.580*time) );
per_frame_26=wave_g = wave_g + 0.200*( 0.60*sin(1.088*time) + 0.40*sin(1.076*time) );
per_frame_27=wave_b = wave_b + 0.200*( 0.60*sin(1.037*time) + 0.40*sin(0.922*time) );
per_frame_28=rot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );
per_frame_29=cx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );
per_frame_30=cy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );
per_frame_31=q1=cos(1.41*time);
per_frame_32=q2=time + 0.3*sin(time*1.47);
per_frame_33=
per_frame_34=// this is a great way to respond to beats:
per_frame_35=// once you get one, let it decay at a constant rate!!
per_frame_36=rg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));
per_frame_37=q9 = rg * above(rg,rg2*2);
per_frame_38=rg2 = max(rg, rg2*0.8);
per_frame_39=
per_frame_40=//zoom = zoom + q9*0.1;
per_frame_41=monitor = q9;
per_frame_42=
per_frame_43=// for custom shape 1:
per_frame_44=q11 = aspectx;
per_frame_45=q12 = aspecty;
per_frame_46=q13 = wave_r;
per_frame_47=q14 = wave_g;
per_frame_48=q15 = wave_b;
per_frame_49=q16 = int(rand(100))*0.01;
per_frame_50=
per_frame_51=// custom beat detection code: (fps-independent; quiet songs don't freak out)
per_frame_52=decay_rate = pow(0.993, fps);  // lower # = more hasty to declare a beat
per_frame_53=min_att    = 2.5;               // lower # = quieter songs can declare beats
per_frame_54=decay_to   = 1.0;               // lower # = more hasty to declare a beat
per_frame_55=beat =           bass/max(min_att,bass_att);
per_frame_56=beat = max(beat, mid /max(min_att,mid_att ));
per_frame_57=beat = max(beat, treb/max(min_att,treb_att));
per_frame_58=beat = max( beat, (prev_beat-decay_to)*decay_rate + decay_to );
per_frame_59=beat_level     = (beat - prev_beat - 0.0)*24;
per_frame_60=is_beat = above(beat_level, 0.5);
per_frame_61=prev_beat = beat;
per_frame_62=  // put your beat responses HERE:
per_frame_63=  //wave_a = beat_level + 1.95;
per_frame_64=  q1 = is_beat;   //drives shape #1
per_pixel_1=//rot=rot+0.05*sin(rad*13.5 + q2*1.3 + q*1.31);
per_pixel_2=//zoom=zoom+0.05*sin(ang*10.0 + rad*7.5 + q2*1.63 + q);
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_main, uv ).xyz;
warp_5=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_6=`                      ((uv.xyy*q27
warp_7=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_8=`                      ).xyz*
warp_9=`                      float3(1,1,0)*0.05 + 
warp_10=`                      time*float3(0,0,1)*q29
warp_11=`                     );
warp_12=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_13=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_14=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_15=`    // feather pen
warp_16=`    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1-8*length(texsize.zw)) + 0.5 ).xyz);
warp_17=`    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1+8*length(texsize.zw)) + 0.5 ).xyz);
warp_18=`
warp_19=`    // darken over time
warp_20=`    ret -= 0.034;
warp_21=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 uv2, uv3;
comp_4=`    float ang2, c, s;
comp_5=`
comp_6=`    uv -= 0.5;
comp_7=`    uv *= aspect.xy;    
comp_8=`
comp_9=`    ang2 = 6.28*0.333;
comp_10=`    c = cos(ang2);
comp_11=`    s = sin(ang2);
comp_12=`    uv2.x =  uv.x*c - uv.y*s;
comp_13=`    uv2.y =  uv.x*s + uv.y*c;
comp_14=`
comp_15=`    ang2 = 6.28*0.667;
comp_16=`    c = cos(ang2);
comp_17=`    s = sin(ang2);
comp_18=`    uv3.x =  uv.x*c - uv.y*s;
comp_19=`    uv3.y =  uv.x*s + uv.y*c;
comp_20=`
comp_21=`    ret = tex2D(sampler_main, uv + 0.5).xyz;
comp_22=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_23=`                      ((uv3.xyy*q28
comp_24=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_25=`                      ).xyz*
comp_26=`                      float3(1,1,0)*0.05 + 
comp_27=`                      time*float3(0,0,1)*q31
comp_28=`                     );
comp_29=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_30=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_31=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_32=`    ret = max(ret, tex2D(sampler_main,uv2 + 0.5).xyz);
comp_33=`    ret = max(ret, tex2D(sampler_main,uv3 + 0.5).xyz);
comp_34=`
comp_35=`    //ret *= 1.3; // a little bit of overbright
comp_36=`}
comp_37=`
comp_38=`
