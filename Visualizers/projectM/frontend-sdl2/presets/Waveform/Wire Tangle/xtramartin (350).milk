MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=1.000
fWaveScale=0.821
fWaveSmoothing=0.100
fWaveParam=-0.240
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=0.442
fWarpScale=0.498
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.050
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=1.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=dirx = 1;
per_frame_1=dec_med = pow (0.9, 30/fps);
per_frame_2=dec_slow = pow (0.9, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_5=is_beat = above(beat, .2+avg+peak) * above (time, t0+.1);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_8=index = (index + is_beat) %8;
per_frame_9=index2 = (index2 + is_beat*bnot(index))%8;
per_frame_10=
per_frame_11=
per_frame_12=q20 = avg;
per_frame_13=q21 = beat;
per_frame_14=q22 = peak;
per_frame_15=q23 = index;
per_frame_16=q24 = is_beat;
per_frame_17=q26 = bass + mid + treb;
per_frame_18=ava = ava*dec_slow + q26*(1-dec_slow);
per_frame_19=
per_frame_20=k1 =  is_beat*equal(index%4,0);
per_frame_21=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_22=p2 = dec_med * p2+ (1-dec_med)*p1;
per_frame_23=rott = p2 * 3.1416/4;
per_frame_24=q1 = cos(rott);
per_frame_25=q2 = sin(rott);
per_frame_26=
per_frame_27=q27 = 8-index;
per_frame_28=q28 = index2/6;
per_frame_29=q29 = .1*q27+time*.1;
per_frame_30=
per_frame_31=trig = bnot(index%4)*q24;
per_frame_32=mov = trig*(int(rand(100))-50) + (1-trig)*mov ;
per_frame_33=movez = movez + .02/fps*mov;
per_frame_34=q30 = movez;
per_frame_35=
per_frame_36=
per_frame_37=trig = q24 * bnot(index);
per_frame_38=kmov = bnot(trig)* (kmov + .1/fps); 
per_frame_39=q31 = kmov*82*kmov;
per_frame_40=
per_frame_41=cont = cont + q1*.2/fps*below(index,2);
per_frame_42=q31 = cont;
per_frame_43=q32=q31-q30;
per_frame_44=
per_frame_45=
per_frame_46=
per_frame_47=
per_frame_48=//**************************
per_frame_49=
warp_1=`sampler sampler_fc_wrenches;
warp_2=`float2 factorA, factorB, product;
warp_3=`float2 numerator, denominator, fraction;
warp_4=`
warp_5=`shader_body
warp_6=`{
warp_7=`uv = lerp(uv_orig,uv,0); // this is scaling the input motion from the per-vertex-calc
warp_8=`uv = (uv-0.5)*aspect.xy;
warp_9=`
warp_10=`factorA = uv;
warp_11=`factorB = float2(q1,q2);
warp_12=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
warp_13=`                  factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
warp_14=`
warp_15=`numerator = product + float2(q3,q4);
warp_16=`
warp_17=`factorA = uv;
warp_18=`factorB = float2(q5,q6);
warp_19=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
warp_20=`                  factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
warp_21=`
warp_22=`
warp_23=`denominator = product + float2(q7,q8);
warp_24=`
warp_25=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
warp_26=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
warp_27=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
warp_28=`
warp_29=`uv = fraction*0.2;
warp_30=`
warp_31=`//uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.99; // Eo.S. mirror code with cutted borders
warp_32=`uv = frac(uv);
warp_33=`ret = tex2D( sampler_fc_wrenches, uv );
warp_34=`
warp_35=` float2 bg = (uv-0.5)*texsize.xy;
warp_36=` float bg1 = saturate((abs(bg.x)+abs(bg.y)+time*200)%128-64);
warp_37=` float bg2 = saturate((-abs(bg.x)-abs(bg.y)+time*200)%128-64);
warp_38=` float fnord;
warp_39=` if(length(bg)> 0.25*texsize.y){
warp_40=`  fnord = bg2;
warp_41=` }else{
warp_42=`  fnord = bg1;
warp_43=` }
warp_44=`ret = fnord;
warp_45=`}
comp_1=`float3 ret1, neu;
comp_2=`float2 rs,rs2,uv1,rsk;
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uv2;
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5 ;
comp_8=`uv *= aspect.xy;    
comp_9=`float dist = 1;
comp_10=`float inten = 1;
comp_11=`ret1 = 0;
comp_12=`int anz = 3;
comp_13=`float n = 0;
comp_14=`while (n <= anz) {
comp_15=`    uv2 =  abs(frac(uv+.5)-.5) ;
comp_16=`    if      (n%3==0) dist = 1-frac(1.0/anz*n+q30);
comp_17=`    else if (n%3==1) dist = 1-frac(1.0/anz*n+q31);
comp_18=`    else             dist = 1-frac(1.0/anz*n+q32);
comp_19=`
comp_20=`    inten =  sqrt(dist)*(1-dist)*4;
comp_21=`    float2 uv3 = 0;
comp_22=`    if      (n%3==0) uv3 =  frac(3*uv2*dist+q29+float2(q31+dist/3,0));
comp_23=`    else if (n%3==1) uv3 =  frac(3*uv2*dist+q29+float2(q29+dist/3,0));
comp_24=`    else             uv3 =  frac(3*uv2*dist+q31+float2(q29+dist/3,0));
comp_25=`    neu = 1*GetPixel(uv3) +GetBlur3(uv3*1.1)*0;
comp_26=`    neu *= (neu >= 0);
comp_27=`    ret1 = max(ret1,neu*inten);
comp_28=`n++;
comp_29=`}
comp_30=`rs2 = .3*cos(uv*16+0*time) -  (ret1);
comp_31=`float dots = saturate(.05/length(rs2))*(1+q22/4) ;
comp_32=`ret = -0.1*ret1 + 2*dots*(.4+4*ret1)*(1+roam_cos)/2 ;
comp_33=`}
