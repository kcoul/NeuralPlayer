MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.010
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.681
fWarpScale=2.953
fZoomExponent=0.01000
fShader=0.000
zoom=0.99010
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=1.24699
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.000
wave_y=0.000
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=1.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=32
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=33
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.500
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.500
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=trans = int(rand(int(q30)))/15+instance-instance;
shape_0_per_frame2=trans2 = int(rand(int(q30)))/15+instance-instance;
shape_0_per_frame3=trans3 = int(rand(int(q30)))/15+instance-instance;
shape_0_per_frame4=a = trans;
shape_0_per_frame5=//a2 = trans2;
shape_0_per_frame6=//border_a = trans3;
shape_0_per_frame7=
shape_0_per_frame8=x = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_0_per_frame9=y = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_0_per_frame10=rad = .09 + int(rand(int(q30)))/15+instance-instance;
shape_0_per_frame11=r=int(rand(q30))*.1+instance-instance;
shape_0_per_frame12=g=int(rand(q30))*.1+instance-instance;
shape_0_per_frame13=b=int(rand(q30))*.1+instance-instance;
shape_0_per_frame14=r2=int(rand(q30))*.1+instance-instance;
shape_0_per_frame15=g2=int(rand(q30))*.1+instance-instance;
shape_0_per_frame16=b2=int(rand(q30))*.1+instance-instance;
shape_0_per_frame17=border_r=int(rand(q30))*.1+instance-instance;
shape_0_per_frame18=border_g=int(rand(q30))*.1+instance-instance;
shape_0_per_frame19=border_b=int(rand(q30))*.1+instance-instance;
shapecode_1_enabled=1
shapecode_1_sides=32
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=7
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.500
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.500
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=trans = int(rand(int(q30)))/15+instance-instance;
shape_1_per_frame2=trans2 = int(rand(int(q30)))/15+instance-instance;
shape_1_per_frame3=trans3 = int(rand(int(q30)))/15+instance-instance;
shape_1_per_frame4=a = trans;
shape_1_per_frame5=//a2 = trans2;
shape_1_per_frame6=//border_a = trans3;
shape_1_per_frame7=
shape_1_per_frame8=x = .5 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_1_per_frame9=y = .5 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_1_per_frame10=rad = .09 + int(rand(int(q30)))/15+instance-instance;
shape_1_per_frame11=r=int(rand(q30))*.1+instance-instance;
shape_1_per_frame12=g=int(rand(q30))*.1+instance-instance;
shape_1_per_frame13=b=int(rand(q30))*.1+instance-instance;
shape_1_per_frame14=r2=int(rand(q30))*.1+instance-instance;
shape_1_per_frame15=g2=int(rand(q30))*.1+instance-instance;
shape_1_per_frame16=b2=int(rand(q30))*.1+instance-instance;
shape_1_per_frame17=border_r=int(rand(q30))*.1+instance-instance;
shape_1_per_frame18=border_g=int(rand(q30))*.1+instance-instance;
shape_1_per_frame19=border_b=int(rand(q30))*.1+instance-instance;
shape_1_per_frame20=
shapecode_2_enabled=0
shapecode_2_sides=32
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=33
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.500
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.500
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=trans = int(rand(int(q30)))/5+instance-instance;
shape_2_per_frame2=trans2 = int(rand(int(q30)))/5+instance-instance;
shape_2_per_frame3=trans3 = int(rand(int(q30)))/5+instance-instance;
shape_2_per_frame4=a = trans;
shape_2_per_frame5=//a2 = trans2;
shape_2_per_frame6=//border_a = trans3;
shape_2_per_frame7=
shape_2_per_frame8=x = q1 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_2_per_frame9=y = q2 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_2_per_frame10=rad = .09 + int(rand(int(q30)))/15+instance-instance;
shape_2_per_frame11=r=int(rand(q3))*.1+instance-instance;
shape_2_per_frame12=g=int(rand(q3))*.1+instance-instance;
shape_2_per_frame13=b=int(rand(q3))*.1+instance-instance;
shape_2_per_frame14=r2=int(rand(q3))*.1+instance-instance;
shape_2_per_frame15=g2=int(rand(q3))*.1+instance-instance;
shape_2_per_frame16=b2=int(rand(q3))*.1+instance-instance;
shape_2_per_frame17=border_r=int(rand(q3))*.1+instance-instance;
shape_2_per_frame18=border_g=int(rand(q3))*.1+instance-instance;
shape_2_per_frame19=border_b=int(rand(q3))*.1+instance-instance;
shape_2_per_frame20=
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=meter=4;//assumed since most common
per_frame_init_2=btimer=1;//timer for slow decaying events
per_frame_init_3=mtimer=1;
per_frame_init_4=ttimer=1;
per_frame_init_5=bfp=fps/10;
per_frame_init_6=mfp=fps/10;
per_frame_init_7=tfp=fps/10;
per_frame_1=tempo16=480;//16th note res base
per_frame_2=
per_frame_3=//quick transients
per_frame_4=sharpnew= (treb);
per_frame_5=heartnew= (mid );
per_frame_6=bluntnew= (bass);
per_frame_7=
per_frame_8=volnew=sharpnew+heartnew+bluntnew;
per_frame_9=
per_frame_10=//re= rising edge, b=bass,etc  adjust sens = sensitivity lower for greater sensitivity, higher for greater tolerance of vol change
per_frame_11=sens2 = 10;//maybe think about dynamically adjusting this according to the current milkdrop built in annoying volume sensitivity, lower during long durations of loudness where milkdrop is less sensitive, and vice versa
per_frame_12=sens  = 1/(bass+treb+mid)*5.5;
per_frame_13=
per_frame_14=bre=if(below(blunt*sens,bluntnew),2,0);//if the previous blunt was much lower than the current, we hit the rising edge, theoretically
per_frame_15=mre=if(below(heart*sens,heartnew),2,0);
per_frame_16=tre=if(below(sharp*sens,sharpnew),2,0);
per_frame_17=bfp=if(below(bfp,0),fps/10,bfp-1);//number of Frames to let Pass after each rising edge is detected, failure to use this will probably result in several coccurrent rising edges, should be a function of fps
per_frame_18=mfp=if(below(mfp,0),fps/10,mfp-1);
per_frame_19=tfp=if(below(tfp,0),fps/10,tfp-1);
per_frame_20=monitor=bre+mre+tre;
per_frame_21=//timers for slow decayers
per_frame_22=//btimer=btimer-.03;
per_frame_23=//btimer=if(below(btimer,0),1,btimer);//if timer < 0, reset to 1
per_frame_24=//mtimer=mtimer-.03;
per_frame_25=//mtimer=if(below(mtimer,0),1,mtimer);
per_frame_26=//ttimer=ttimer-.03;
per_frame_27=//ttimer=if(below(ttimer,0),1,ttimer);
per_frame_28=
per_frame_29=//conceptual idealisms
per_frame_30=//snare = heart+sharp;
per_frame_31=//kick  = blunt+sharp;
per_frame_32=//cymbal= sharp;
per_frame_33=//tom   = blunt+heart;
per_frame_34=
per_frame_35=//guit  = heartS+sharpS;//S = slow decay
per_frame_36=
per_frame_37=
per_frame_38=
per_frame_39=
per_frame_40=zoom = 0.999;
per_frame_41=q30=(bass+treb+mid*1.5)*(bre+mre+tre);
per_frame_42=q3=q30*2;
per_frame_43=
per_frame_44=//set these at the end of each frame to detect rising edges
per_frame_45=sharp= (treb);
per_frame_46=heart= (mid );
per_frame_47=blunt= (bass);
per_frame_48=//vol  = sharp+heart+blunt;
warp_1=`  
warp_2=` shader_body    
warp_3=`{   
warp_4=`     
warp_5=`       ret = tex2D( sampler_main, uv ).xyz;
warp_6=`float4 noise2 = tex3D(sampler_noisevol_hq, 
warp_7=`                      ((uv.xyy
warp_8=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_9=`                      ).xyz*
warp_10=`                      float3(1,1,0)*0.05 + 
warp_11=`                      time*float3(0,0,1)*0.4 
warp_12=`                     );
warp_13=`ret -= (noise2)*.2; 
warp_14=`      // take the difference between the crisp and blurred images,
warp_15=`      // then add it back into the image.  Creates spots and stripes over time.
warp_16=`      ret += (ret - GetBlur2(uv))*0.3;
warp_17=`      ret *= 0.9;
warp_18=`      
warp_19=`      // add noise:
warp_20=`      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;
warp_21=`      ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/956.0 * 112;
warp_22=`      
warp_23=`      
warp_24=`      //ret = lerp(ret, lum(ret), 0.2);
warp_25=`}     
comp_1=`    
comp_2=`shader_body
comp_3=`{    
comp_4=`    //ret = tex2D(sampler_main, (uv-0.5)*0.6+0.5).zzz;
comp_5=`    float crisp, blur;
comp_6=`    float2 uv2;
comp_7=`    ret = tex2d(sampler_main, uv);
comp_8=`    float shadow_offset = 0.0;
comp_9=`    float shadow_str = 1.15;
comp_10=`   
comp_11=`    uv2 = (uv-0.5)*0.8+0.5;
comp_12=`float4 noise2 = tex3D(sampler_noisevol_hq, 
comp_13=`                      ((uv2.xyy
comp_14=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_15=`                      ).xyz*
comp_16=`                      float3(1,1,0)*0.05 + 
comp_17=`                      time*float3(0,0,1)*0.4 
comp_18=`                     );
comp_19=`ret *= (noise2)*2.5; 
comp_20=`    crisp = tex2D(sampler_main, uv2).y;
comp_21=`      // add drop shadow:
comp_22=`      blur  = GetBlur1(uv2 + shadow_offset).y;
comp_23=`      ret *= (1-blur*shadow_str);
comp_24=`    ret = max(ret, crisp.xxx);
comp_25=`    
comp_26=`    uv2 = uv;
comp_27=`    //crisp = tex2D(sampler_main, uv2).x;
comp_28=`      // add drop shadow:
comp_29=`     // blur  = GetBlur1(uv2 + shadow_offset).x;
comp_30=`     // ret *= (1-blur*shadow_str);
comp_31=`    //ret = max(ret, crisp.xxx);    
comp_32=`}
