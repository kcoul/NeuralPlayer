MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_comp=3
[preset00]
fRating=5.000000
fGammaAdj=1.000000
fDecay=1.0
fVideoEchoZoom=1
fVideoEchoAlpha=0.80000
nVideoEchoOrientation=3
nWaveMode=3
bAdditiveWaves=0
bWaveDots=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=1
bMotionVectorsOn=0
bRedBlueStereo=1
nMotionVectorsX=12
nMotionVectorsY=9
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=5.099998
fWaveScale=2.985751
fWaveSmoothing=0.990000
fWaveParam=0.000000
fModWaveAlphaStart=0.710000
fModWaveAlphaEnd=1.300000
fwarpAnimSpeed=0.500000
fwarpScale=2.331000
fZoomExponent=1.000000
fShader=0.000000
zoom=0.999514
wave_thick=1
rot=0.000000
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.0000000
sx=1.000000
sy=1.000000
wave_r=0.650000
wave_g=0
wave_b=0.650000
wave_x=0.500000
wave_y=0.500000
ob_size=0.900000
ob_r=0.010000
ob_g=0.000000
ob_b=0.000000
ob_a=0.000000
ib_size=0.260000
ib_r=0.250000
ib_g=0.250000
ib_b=0.250000
ib_a=0.000000
wrap=1
per_frame_init_1=attenfactor = 0.001;
per_frame_init_2=mybass = 0;
per_frame_init_3=mymid = 0;
per_frame_init_4=mytreb = 0;
per_frame_1=wave_r=1 - (1 / (1 + pow(2.718, 0 - (mid - ((bass + treb) / 2)) * 100)));
per_frame_2=wave_g=1 - (1 / (1 + pow(2.718, 0 - (treb - ((mid_att + bass_att)/ 2)) * 100)));
per_frame_3=wave_b=1 - (1 / (1 + pow(2.718, 0 - (bass - ((treb + mid) / 2)) * 100)));
per_frame_4=zoom = 1;
per_frame_5=rot= 0;
per_frame_6=mybass = (mybass * attenfactor + bass_att) / (1 + attenfactor);
per_frame_7=mymid = (mymid * attenfactor + mid_att) / (1 + attenfactor);
per_frame_8=mytreb = (mytreb * attenfactor + treb_att) / (1 + attenfactor);
per_frame_9=q1=mybass;
per_frame_10=q2=mymid;
per_frame_11=q3=mytreb;
per_frame_12=monitor = mybass;
per_pixel_1=q5=(rad+sin(time * 0.1 + rad * 5)) * rad;
per_pixel_1=zoom=zoom + q5 * q5 * q5 * q5*(bass + (mymid + mid) * 0.5 + mytreb );
per_pixel_1=zoom=zoom + sin(q5 * (100 * q5) + time) * 0.006 - q5 * 0.001;
warp_1=`shader_body
warp_2=`{
warp_3=`float3 ret1 = GetPixel(uv);
warp_4=`float3 neighbourhood;
warp_5=`neighbourhood.x = 0;
warp_6=`neighbourhood.y = 0;
warp_7=`neighbourhood.z= 0;
warp_8=`float2 temp;
warp_9=`temp.x = uv.x - texsize.z;
warp_10=`temp.y = uv.y - texsize.w;
warp_11=`neighbourhood = neighbourhood + GetPixel(temp);
warp_12=`temp.x = temp.x + texsize.z;
warp_13=`neighbourhood = neighbourhood+ GetPixel(temp);
warp_14=`temp.x = temp.x + texsize.z;
warp_15=`neighbourhood = neighbourhood + GetPixel(temp);
warp_16=`
warp_17=`
warp_18=`temp.x = temp.x - 2 * texsize.z;
warp_19=`temp.y = temp.y + texsize.w;
warp_20=`neighbourhood = neighbourhood + GetPixel(temp);
warp_21=`temp.x = temp.x +  2 * texsize.z;
warp_22=`neighbourhood = neighbourhood+ GetPixel(temp);
warp_23=`
warp_24=`
warp_25=`
warp_26=`
warp_27=`temp.x = temp.x - 2 * texsize.z;
warp_28=`temp.y = temp.y + texsize.w;
warp_29=`neighbourhood = neighbourhood + GetPixel(temp);
warp_30=`temp.x = temp.x + texsize.z;
warp_31=`neighbourhood = neighbourhood+ GetPixel(temp);
warp_32=`temp. x = temp.x + texsize.z;
warp_33=`neighbourhood = neighbourhood + GetPixel(temp);
warp_34=`float3 org = ret1;
warp_35=`float state;
warp_36=`state = ((neighbourhood.x >= 2) * (neighbourhood.x <= 3)) * (ret1.x == 0.0) * (neighbourhood.y + q1 - q3) * 0.5 + ret1.x;
warp_37=`state = state - ((neighbourhood.x < 2) + (neighbourhood.x > 4)) * 0.001;
warp_38=`ret1.x = state;
warp_39=`
warp_40=`
warp_41=`
warp_42=`
warp_43=`
warp_44=`state = ((neighbourhood.z >= 2) * (neighbourhood.z <= 3)) * (ret1.z == 0.0) * (ret1.y + ret1.x + neighbourhood.x + q3 - q1) + ret1.z;
warp_45=`state = state - ((neighbourhood.z < 2) + (neighbourhood.z > 4)) * 0.0001;
warp_46=`ret1.z = state;
warp_47=`ret.x = ret1.x - ret1.x * (ret1.z > 0) + ret1.x * ret1.y * 0.2;
warp_48=`ret.y = ret1.y - ret1.y  * (ret1.x > 0) * 0.9 - ret1.y * (ret1.z > 0)  + neighbourhood.y * 0.2;
warp_49=`ret.z = ret1.z + ((ret1.x * 1) + (ret1.y * 0.4)) * (ret1.z > 0) - 0.8 + (sin(time + rad * 10) * 0.1 - 0.08) + sin(0 - time + rad * 5) - rad * 0.1 * bass;
warp_50=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 uv2;
comp_4=`
comp_5=`    float4 c = float4(1,0.4,0.15,0.1);
comp_6=`
comp_7=`    uv2 = uv + float2(1,0)*texsize.zw;
comp_8=`    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_9=`    uv2 = uv + float2(-1,0)*texsize.zw;
comp_10=`    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_11=`
comp_12=`    uv2 = uv + float2(0,1)*texsize.zw;
comp_13=`    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_14=`    uv2 = uv + float2(0,-1)*texsize.zw;
comp_15=`    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_16=`
comp_17=`    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));
comp_18=`
comp_19=`    ret = 0.5 + 0.5*g;
comp_20=`    ret *= saturate(length(ret.xy-0.5)*5);
comp_21=`    ret = ret.xxy;
comp_22=`    ret += 1;
comp_23=`    float3 what = lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader,ret));
comp_24=`    ret *=what;
comp_25=`    ret *= hue_shader;
comp_26=`
comp_27=`    //ret *= 1.5; //old gamma effect    
comp_28=`}


