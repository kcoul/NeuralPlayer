MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=2.000
fDecay=0.960
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=1.000
zoom=0.96000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00052
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=3.000
nMotionVectorsY=2.000
mv_dx=0.020
mv_dy=-0.020
mv_l=0.150
mv_r=0.490
mv_g=0.480
mv_b=0.300
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.000
wavecode_0_g=0.500
wavecode_0_b=0.100
wavecode_0_a=1.000
wave_0_per_frame1=t1=bass_att*(sin(time)*0.5+0.5);
wave_0_per_frame2=t2=bass_att*(sin(time+2.1)*0.5+0.5);
wave_0_per_frame3=t3=treb_att*(sin(time+4.2)*0.5+0.5);
wave_0_per_frame4=
wave_0_per_frame5=t4=treb_att*(sin(-time+1.1)*0.5+0.5);
wave_0_per_frame6=t5=mid_att*(sin(-time+3.1)*0.5+0.5);
wave_0_per_frame7=t6=mid_att*(sin(-time+5.2)*0.5+0.5);
wave_0_per_point1=n=sample*6.283;
wave_0_per_point2=phs=-sample * 0.2;
wave_0_per_point3=tm=q1 + phs;
wave_0_per_point4=
wave_0_per_point5=flip=(flip+1)*below(flip,1);
wave_0_per_point6=
wave_0_per_point7=xp=0;
wave_0_per_point8=yp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;
wave_0_per_point9=zp=0;
wave_0_per_point10=
wave_0_per_point11=//wrist movement;
wave_0_per_point12=ang=sin(tm*2)*0.5 +0.5;
wave_0_per_point13=
wave_0_per_point14=xq=xp;
wave_0_per_point15=sinang=sin(ang);cosang=cos(ang);
wave_0_per_point16=yq=yp*sinang + zp*cosang;
wave_0_per_point17=zq=yp*cosang - zp*sinang;
wave_0_per_point18=yq=yp;
wave_0_per_point19=zq=zp;
wave_0_per_point20=
wave_0_per_point21=ang=tm*8;
wave_0_per_point22=sinang=sin(ang);cosang=cos(ang);
wave_0_per_point23=xp=xq*sinang + yq*cosang;
wave_0_per_point24=yp=xq*cosang - yq*sinang;
wave_0_per_point25=zp=zq;
wave_0_per_point26=
wave_0_per_point27=//forearm movement;
wave_0_per_point28=zp=zp-0.3;
wave_0_per_point29=ang=3.14 + sin(tm*2 - 0.5)*1.5;
wave_0_per_point30=sinang=sin(ang);cosang=cos(ang);
wave_0_per_point31=xq=xp;
wave_0_per_point32=yq=yp*sinang + zp*cosang;
wave_0_per_point33=zq=yp*cosang - zp*sinang;
wave_0_per_point34=
wave_0_per_point35=//upper arm twist
wave_0_per_point36=ang=-1.0 + cos(tm*3.1 + 0.5);
wave_0_per_point37=sinang=sin(ang);cosang=cos(ang);
wave_0_per_point38=xp=xq*sinang + yq*cosang;
wave_0_per_point39=yp=xq*cosang - yq*sinang;
wave_0_per_point40=zp=zq;
wave_0_per_point41=
wave_0_per_point42=//upper arm outward;
wave_0_per_point43=zp=zp-0.35;
wave_0_per_point44=ang=cos(tm*2.3)*1.75 - 1.05;
wave_0_per_point45=sinang=sin(ang);cosang=cos(ang);
wave_0_per_point46=xq=xp*sinang + zp*cosang;
wave_0_per_point47=yq=yp;
wave_0_per_point48=zq=xp*cosang - zp*sinang;
wave_0_per_point49=
wave_0_per_point50=//upper arm up down;
wave_0_per_point51=ang=cos(tm)*0.5 - 0.5;
wave_0_per_point52=sinang=sin(ang);cosang=cos(ang);
wave_0_per_point53=xp=xq;
wave_0_per_point54=yp=yq*cosang - zq*sinang;
wave_0_per_point55=zp=yq*sinang + zq*cosang;
wave_0_per_point56=
wave_0_per_point57=//xp=xq;yp=yq;zp=zq;
wave_0_per_point58=
wave_0_per_point59=
wave_0_per_point60=//project into screenspace and draw on screen
wave_0_per_point61=zp=zp+2;
wave_0_per_point62=xs=xp/zp;
wave_0_per_point63=ys=yp/zp;
wave_0_per_point64=
wave_0_per_point65=x=xs+0.5;
wave_0_per_point66=y=ys*1.3+0.5;
wave_0_per_point67=
wave_0_per_point68=
wave_0_per_point69=dx = if(flip,x,dx-x);
wave_0_per_point70=dy = if(flip,y,dy-y);
wave_0_per_point71=dz = pow(dx*dx+dy*dy,.5);
wave_0_per_point72=ang = abs(asin(dx/dz));
wave_0_per_point73=cang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));
wave_0_per_point74=r = .5 + .5*sin(cang);
wave_0_per_point75=g = .5 + .5*sin(cang + 1.047197);
wave_0_per_point76=b = .5 + .5*sin(cang + 2.094395);
wave_0_per_point77=
wave_0_per_point78=a=(1-sample)*above(sample,0);
wave_0_per_point79=
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.200
wavecode_1_g=1.000
wavecode_1_b=0.600
wavecode_1_a=1.000
wave_1_per_frame1=t1=mid_att*(sin(1.57+time)*0.5+0.5);
wave_1_per_frame2=t2=treb_att*(sin(1.57+time+2.1)*0.5+0.5);
wave_1_per_frame3=t3=mid_att*(sin(1.57+time+4.2)*0.5+0.5);
wave_1_per_frame4=
wave_1_per_frame5=t4=bass_att*(sin(-time+1.1)*0.5+0.5);
wave_1_per_frame6=t5=bass_att*(sin(-time+3.1)*0.5+0.5);
wave_1_per_frame7=t6=treb_att*(sin(-time+5.2)*0.5+0.5);
wave_1_per_point1=n=sample*6.283;
wave_1_per_point2=phs=-sample * 0.2;
wave_1_per_point3=tm=q1 + phs;
wave_1_per_point4=
wave_1_per_point5=flip=flip+1;
wave_1_per_point6=flip=flip*below(flip,2);
wave_1_per_point7=
wave_1_per_point8=xp=0;
wave_1_per_point9=yp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;
wave_1_per_point10=yp=-yp;
wave_1_per_point11=zp=0;
wave_1_per_point12=
wave_1_per_point13=//wrist movement;
wave_1_per_point14=ang=sin(tm*2)*0.5 +0.5;
wave_1_per_point15=
wave_1_per_point16=sinang=sin(ang);cosang=cos(ang);
wave_1_per_point17=xq=xp;
wave_1_per_point18=yq=yp*sinang + zp*cosang;
wave_1_per_point19=zq=yp*cosang - zp*sinang;
wave_1_per_point20=yq=yp;
wave_1_per_point21=zq=zp;
wave_1_per_point22=
wave_1_per_point23=ang=tm*8;
wave_1_per_point24=sinang=sin(ang);cosang=cos(ang);
wave_1_per_point25=xp=xq*sinang + yq*cosang;
wave_1_per_point26=yp=xq*cosang - yq*sinang;
wave_1_per_point27=zp=zq;
wave_1_per_point28=
wave_1_per_point29=//forearm movement;
wave_1_per_point30=zp=zp-0.3;
wave_1_per_point31=ang=3.14 + sin(tm*2 - 0.5)*1.5;
wave_1_per_point32=sinang=sin(ang);cosang=cos(ang);
wave_1_per_point33=xq=xp;
wave_1_per_point34=yq=yp*sinang + zp*cosang;
wave_1_per_point35=zq=yp*cosang - zp*sinang;
wave_1_per_point36=
wave_1_per_point37=//upper arm twist
wave_1_per_point38=ang=-1.0 + cos(tm*3.1 + 0.5);
wave_1_per_point39=sinang=sin(ang);cosang=cos(ang);
wave_1_per_point40=xp=xq*sinang + yq*cosang;
wave_1_per_point41=yp=xq*cosang - yq*sinang;
wave_1_per_point42=zp=zq;
wave_1_per_point43=
wave_1_per_point44=//upper arm outward;
wave_1_per_point45=zp=zp-0.35;
wave_1_per_point46=ang=cos(tm*2.3)*1.75 - 1.05;
wave_1_per_point47=sinang=sin(ang);cosang=cos(ang);
wave_1_per_point48=xq=xp*sinang + zp*cosang;
wave_1_per_point49=yq=yp;
wave_1_per_point50=zq=xp*cosang - zp*sinang;
wave_1_per_point51=
wave_1_per_point52=//upper arm up down;
wave_1_per_point53=ang=cos(tm)*0.5 - 0.5;
wave_1_per_point54=sinang=sin(ang);cosang=cos(ang);
wave_1_per_point55=xp=xq;
wave_1_per_point56=yp=yq*cosang - zq*sinang;
wave_1_per_point57=zp=yq*sinang + zq*cosang;
wave_1_per_point58=
wave_1_per_point59=//xp=xq;yp=yq;zp=zq;
wave_1_per_point60=
wave_1_per_point61=
wave_1_per_point62=//project into screenspace and draw on screen
wave_1_per_point63=zp=zp+2;
wave_1_per_point64=xs=xp/zp;
wave_1_per_point65=ys=yp/zp;
wave_1_per_point66=
wave_1_per_point67=x=xs+0.5;
wave_1_per_point68=y=ys*1.3+0.5;
wave_1_per_point69=
wave_1_per_point70=
wave_1_per_point71=dx = if(flip,x,dx-x);
wave_1_per_point72=dy = if(flip,y,dy-y);
wave_1_per_point73=dz = pow(dx*dx+dy*dy,.5);
wave_1_per_point74=ang = abs(asin(dx/dz));
wave_1_per_point75=cang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));
wave_1_per_point76=r = .5 + .5*sin(cang);
wave_1_per_point77=g = .5 + .5*sin(cang + 1.047197);
wave_1_per_point78=b = .5 + .5*sin(cang + 2.094395);
wave_1_per_point79=
wave_1_per_point80=a=(1-sample)*above(sample,0);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.000
wavecode_2_g=0.500
wavecode_2_b=0.100
wavecode_2_a=1.000
wave_2_per_frame1=t1=treb_att*(sin(time+3.14)*0.5+0.5);
wave_2_per_frame2=t2=mid_att*(sin(time+2.1+3.14)*0.5+0.5);
wave_2_per_frame3=t3=bass_att*(sin(time+4.2+3.14)*0.5+0.5);
wave_2_per_frame4=
wave_2_per_frame5=t4=bass_att*(sin(-time+1.1+3.14)*0.5+0.5);
wave_2_per_frame6=t5=treb_att*(sin(-time+3.1+3.14)*0.5+0.5);
wave_2_per_frame7=t6=mid_att*(sin(-time+5.2+3.14)*0.5+0.5);
wave_2_per_point1=n=sample*6.283;
wave_2_per_point2=phs=-sample * 0.2;
wave_2_per_point3=tm=q1 + phs;
wave_2_per_point4=
wave_2_per_point5=flip=(flip+1)*below(flip,1);
wave_2_per_point6=
wave_2_per_point7=xp=0;
wave_2_per_point8=yp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;
wave_2_per_point9=zp=0;
wave_2_per_point10=
wave_2_per_point11=//wrist movement;
wave_2_per_point12=ang=sin(tm*2)*0.5 +0.5;
wave_2_per_point13=
wave_2_per_point14=xq=xp;
wave_2_per_point15=sinang=sin(ang);cosang=cos(ang);
wave_2_per_point16=yq=yp*sinang + zp*cosang;
wave_2_per_point17=zq=yp*cosang - zp*sinang;
wave_2_per_point18=yq=yp;
wave_2_per_point19=zq=zp;
wave_2_per_point20=
wave_2_per_point21=ang=tm*8;
wave_2_per_point22=sinang=sin(ang);cosang=cos(ang);
wave_2_per_point23=xp=xq*sinang + yq*cosang;
wave_2_per_point24=yp=xq*cosang - yq*sinang;
wave_2_per_point25=zp=zq;
wave_2_per_point26=
wave_2_per_point27=//forearm movement;
wave_2_per_point28=zp=zp-0.3;
wave_2_per_point29=ang=3.14 + sin(tm*2 - 0.5)*1.5;
wave_2_per_point30=sinang=sin(ang);cosang=cos(ang);
wave_2_per_point31=xq=xp;
wave_2_per_point32=yq=yp*sinang + zp*cosang;
wave_2_per_point33=zq=yp*cosang - zp*sinang;
wave_2_per_point34=
wave_2_per_point35=//upper arm twist
wave_2_per_point36=ang=-1.0 + cos(tm*3.1 + 0.5);
wave_2_per_point37=sinang=sin(ang);cosang=cos(ang);
wave_2_per_point38=xp=xq*sinang + yq*cosang;
wave_2_per_point39=yp=xq*cosang - yq*sinang;
wave_2_per_point40=zp=zq;
wave_2_per_point41=
wave_2_per_point42=//upper arm outward;
wave_2_per_point43=zp=zp-0.35;
wave_2_per_point44=ang=cos(tm*2.3)*1.75 - 1.05;
wave_2_per_point45=sinang=sin(ang);cosang=cos(ang);
wave_2_per_point46=xq=xp*sinang + zp*cosang;
wave_2_per_point47=yq=yp;
wave_2_per_point48=zq=xp*cosang - zp*sinang;
wave_2_per_point49=
wave_2_per_point50=//upper arm up down;
wave_2_per_point51=ang=cos(tm)*0.5 - 0.5;
wave_2_per_point52=sinang=sin(ang);cosang=cos(ang);
wave_2_per_point53=xp=xq;
wave_2_per_point54=yp=yq*cosang - zq*sinang;
wave_2_per_point55=zp=yq*sinang + zq*cosang;
wave_2_per_point56=
wave_2_per_point57=//xp=xq;yp=yq;zp=zq;
wave_2_per_point58=
wave_2_per_point59=
wave_2_per_point60=//project into screenspace and draw on screen
wave_2_per_point61=zp=zp+2;
wave_2_per_point62=xs=xp/zp;
wave_2_per_point63=ys=yp/zp;
wave_2_per_point64=
wave_2_per_point65=x=xs+0.5;
wave_2_per_point66=y=ys*1.3+0.5;
wave_2_per_point67=
wave_2_per_point68=
wave_2_per_point69=dx = if(flip,x,dx-x);
wave_2_per_point70=dy = if(flip,y,dy-y);
wave_2_per_point71=dz = pow(dx*dx+dy*dy,.5);
wave_2_per_point72=ang = abs(asin(dx/dz));
wave_2_per_point73=cang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));
wave_2_per_point74=g = .5 + .5*sin(cang);
wave_2_per_point75=b = .5 + .5*sin(cang + 1.047197);
wave_2_per_point76=r = .5 + .5*sin(cang + 2.094395);
wave_2_per_point77=
wave_2_per_point78=a=(1-sample)*above(sample,0);
wave_2_per_point79=
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=0.300
wavecode_3_b=0.100
wavecode_3_a=1.000
wave_3_per_point1=n=sample*6.283;
wave_3_per_point2=tm=q1 ;
wave_3_per_point3=phs=-sample*0.5;
wave_3_per_point4=
wave_3_per_point5=flip=flip+1;
wave_3_per_point6=flip=flip*below(flip,2);
wave_3_per_point7=
wave_3_per_point8=xp=0;
wave_3_per_point9=yp=flip*0.1;
wave_3_per_point10=zp=0;
wave_3_per_point11=
wave_3_per_point12=//wrist movement;
wave_3_per_point13=ang=sin(tm*2+phs-2)*0.5 +0.5 + 2;
wave_3_per_point14=
wave_3_per_point15=xq=xp;
wave_3_per_point16=yq=yp*sin(ang) + zp*cos(ang);
wave_3_per_point17=zq=yp*cos(ang) - zp*sin(ang);
wave_3_per_point18=
wave_3_per_point19=ang=cos(tm*2+phs-2)*1.5;
wave_3_per_point20=xp=xq*sin(ang) + yq*cos(ang);
wave_3_per_point21=yp=xq*cos(ang) - yq*sin(ang);
wave_3_per_point22=zp=zq;
wave_3_per_point23=
wave_3_per_point24=//forearm movement;
wave_3_per_point25=zp=zp-0.3;
wave_3_per_point26=ang=3.14 + sin(tm*2+phs-0.5)*1.5;
wave_3_per_point27=xq=xp;
wave_3_per_point28=yq=yp*sin(ang) + zp*cos(ang);
wave_3_per_point29=zq=yp*cos(ang) - zp*sin(ang);
wave_3_per_point30=
wave_3_per_point31=//upper arm twist
wave_3_per_point32=ang=-1.0 + cos(tm*3 + 0.5 +phs);
wave_3_per_point33=xp=xq*sin(ang) + yq*cos(ang);
wave_3_per_point34=yp=xq*cos(ang) - yq*sin(ang);
wave_3_per_point35=zp=zq;
wave_3_per_point36=
wave_3_per_point37=//upper arm outward;
wave_3_per_point38=zp=zp-0.35;
wave_3_per_point39=ang=cos(tm*2+phs)*0.75 - 1.05;
wave_3_per_point40=xq=xp*sin(ang) + zp*cos(ang);
wave_3_per_point41=yq=yp;
wave_3_per_point42=zq=xp*cos(ang) - zp*sin(ang);
wave_3_per_point43=
wave_3_per_point44=//upper arm up down;
wave_3_per_point45=ang=cos(tm+phs)*0.5 - 0.5;
wave_3_per_point46=xp=xq;
wave_3_per_point47=yp=yq*cos(ang) - zq*sin(ang);
wave_3_per_point48=zp=yq*sin(ang) + zq*cos(ang);
wave_3_per_point49=
wave_3_per_point50=//xp=xq;yp=yq;zp=zq;
wave_3_per_point51=
wave_3_per_point52=
wave_3_per_point53=//project into screenspace and draw on screen
wave_3_per_point54=zp=zp+2;
wave_3_per_point55=xs=xp/zp;
wave_3_per_point56=ys=yp/zp;
wave_3_per_point57=
wave_3_per_point58=x=-xs+0.5;
wave_3_per_point59=y=ys*1.3+0.5;
wave_3_per_point60=
wave_3_per_point61=
wave_3_per_point62=a=(1-sample)*0.05;
wave_3_per_point63=
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.38615
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.14605
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.100
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.050
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ang = .25*time;
shapecode_1_enabled=1
shapecode_1_sides=5
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=1.06770
shapecode_1_ang=0.75390
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.77970
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.600
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.010
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ang=sin(q1*0.15);
shape_1_per_frame2=x=sin(q1*0.5+3.14) * 0.05 + 0.6;
shape_1_per_frame3=y=cos(q1*0.63+3.14)* 0.05 + 0.6
shapecode_2_enabled=1
shapecode_2_sides=5
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=1.06770
shapecode_2_ang=0.75390
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.77970
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=0.600
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.010
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ang=sin(q1*0.15);
shape_2_per_frame2=x=sin(q1*0.5) * 0.05 + 0.4;
shape_2_per_frame3=y=cos(q1*0.63)* 0.05 + 0.4;
shapecode_3_enabled=0
shapecode_3_sides=5
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=1.06770
shapecode_3_ang=0.75398
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.77977
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ang=sin(q1*0.15);
shape_3_per_frame2=x=sin(q1*0.5) * 0.05 + 0.5;
shape_3_per_frame3=y=cos(q1*0.63)* 0.05 + 0.5
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=
per_frame_25=basstime = basstime + bass*0.03;
per_frame_26=basstime2 = basstime + bass*0.03;
per_frame_27=q1 = basstime2;
per_frame_28=
per_frame_29=//start in most active range
per_frame_30=basstime = if(below(basstime,1000),1000,basstime);
per_frame_31=//basstime = if(above(basstime,495),450,basstime);
per_frame_32=
per_frame_33=basstime = basstime + bass_att*0.03;
per_frame_34=vol = pow(bass+mid+treb,2);
per_frame_35=basssum = vol;
per_frame_36=
per_frame_37=stickybit = time%2;
per_frame_38=
per_frame_39=//avg vol
per_frame_40=//buffer 1
per_frame_41=volAvg = volAvg + vol*equal(stickybit,1);
per_frame_42=//number of samples 1 or framerate
per_frame_43=sample1 = sample1 + equal(stickybit,1);
per_frame_44=//buffer 2
per_frame_45=volAvg2 = volAvg2 + vol*equal(stickybit,0);
per_frame_46=//number of samples 2
per_frame_47=sample2 = sample2 + equal(stickybit,0);
per_frame_48=
per_frame_49=//transision
per_frame_50=edge = bnot(equal(bit2,stickybit));
per_frame_51=
per_frame_52=volAvg = volAvg - volAvg*edge*stickybit;
per_frame_53=volAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);
per_frame_54=
per_frame_55=sample1 = sample1  - sample1*edge*stickybit;
per_frame_56=sample2 = sample2  - sample2*edge*equal(stickybit,0);
per_frame_57=
per_frame_58=//test vol against avg buffer lvl
per_frame_59=diff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);
per_frame_60=diff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);
per_frame_61=
per_frame_62=q3 = diff;
per_frame_63=
per_frame_64=bit2 = time%2;
per_frame_65=
per_frame_66=difftime = difftime + diff*0.03;
per_frame_67=q2 = difftime;
per_frame_68=
per_frame_69=//fix a strange error
per_frame_70=difftime = if(above(difftime,2000),0, difftime);
per_frame_71=
per_frame_72=monitor = abs(cos(time))*3.14;
per_frame_73=
per_frame_74=rarr = rand(100)*0.01;
per_frame_75=
per_frame_76=decay_r = 0.5 + 0.25*(abs(sin(diff+rarr)));
per_frame_77=decay_g = 0.5 + 0.25*(abs(cos(diff+rarr)));
per_frame_78=decay_b = 0.5 + 0.30*(abs(atan(diff+rarr)));
per_frame_79=
per_frame_80=
per_frame_81=//compute unit vec to scale on
per_frame_82=xxx = sin(difftime*0.99);
per_frame_83=yyy = sin(difftime*0.99);
per_frame_84=zzz = sin(difftime*0.99);
per_frame_85=
per_frame_86=//normalise
per_frame_87=norm = 1/sqrt(xxx*xxx + yyy*yyy + zzz*zzz);
per_frame_88=xxx = xxx*norm;
per_frame_89=yyy = yyy*norm;
per_frame_90=zzz = zzz*norm;
per_frame_91=
per_frame_92=monitor = ZZZ;
per_frame_93=
per_frame_94=q5 = xxx;
per_frame_95=q6 = yyy;
per_frame_96=q7 = zzz;
per_frame_97=q26=bass;
per_pixel_1=zoom = 1 + 0.01*q3;
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`float2 uv1 = (uv-.5) * aspect.xy;
warp_6=`
warp_7=`
warp_8=`float2 uv6 = uv1;
warp_9=`float z = q29*2*length(uv1)+rand_frame * 64;
warp_10=`float2 d = normalize(uv1);
warp_11=`float2 rs = clamp(tan(z)*d,-8,8);
warp_12=`uv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;
warp_13=`
warp_14=`
warp_15=`uv6 = .4*sin(uv1*18*rand_frame);
warp_16=`mus = .051/(length(uv6));
warp_17=`mus *= float3 (treb*.5,bass*.5,mid*.5);
warp_18=`
warp_19=`float3 blur = GetBlur2(frac(uv));
warp_20=`
warp_21=`float3 crisp= tex2D(sampler_main,uv);
warp_22=`
warp_23=`float3 ret1 = crisp - blur*.03 + .15*mus;
warp_24=`float2 uv2 = (uv_orig-.5)-float3(bass*.1,treb*.1+0.1*q25,mid*.1);
warp_25=`
warp_26=`q25 = 1;
warp_27=`ret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);
warp_28=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_29=`                      ((uv6.xyy*q27
warp_30=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_31=`                      ).xyz*
warp_32=`                      float3(1,1,0)*0.05 + 
warp_33=`                      time*float3(0,0,1)*q29
warp_34=`                     );
warp_35=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_36=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_37=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_38=`
warp_39=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    uv = 0.05 + 0.9*uv;
comp_4=`
comp_5=`ret = GetPixel(uv);
comp_6=`    uv += -.05*tan(3*(ret.zz+ret.yx));
comp_7=`    
comp_8=`
comp_9=`    // equivalent of a laplacian: [center*4 - each of the 4 neighbors*1]
comp_10=`    ret = 0;
comp_11=`    ret += tex2D(sampler_main, uv ).xyz*4;
comp_12=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_13=`                      ((uv.xyy*q28
comp_14=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_15=`                      ).xyz*
comp_16=`                      float3(1,1,0)*0.05 + 
comp_17=`                      time*float3(0,0,1)*q31
comp_18=`                     );
comp_19=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_20=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_21=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_22=`    ret -= GetBlur1(uv)*3;
comp_23=`ret-=slow_roam_sin.wzy*slow_roam_cos*.5;
comp_24=`
comp_25=`    // little bit of noise:
comp_26=`    ret *= 1 + 0.12*(tex2D(sampler_noise_lq, rand_frame.xy 
comp_27=`           + uv*texsize.xy*texsize_noise_lq.zw).xxx*2-1);
comp_28=` 
comp_29=`    // palettize:
comp_30=`    ret = pow(ret, float3(0.5, 0.5, 0.7));
comp_31=`
comp_32=`    ret = (ret-0.1)*1.1;
comp_33=`   
comp_34=`    //ret.xyz *= 2; // a little bit of overbright
comp_35=`ret=.8-ret;
comp_36=`}
comp_37=`
comp_38=`
