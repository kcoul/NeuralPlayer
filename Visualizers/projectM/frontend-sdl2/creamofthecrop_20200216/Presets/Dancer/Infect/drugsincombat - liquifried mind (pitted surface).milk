MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=0.960
fVideoEchoZoom=2.723
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=0.96000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00052
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=20.160
mv_dx=0.000
mv_dy=0.000
mv_l=0.400
mv_r=1.000
mv_g=0.400
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=ma=.5;
wave_0_init2=my=.5;
wave_0_init3=md=0; //direction 0 1 2 3
wave_0_per_point1=oldmd=md;
wave_0_per_point2=md=(md+rand(4))%4;
wave_0_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_0_per_point4=
wave_0_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_0_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_0_per_point7=my=my+(equal(md,2)*.002*treb);
wave_0_per_point8=my=my-(equal(md,3)*.002*treb);
wave_0_per_point9=
wave_0_per_point10=mx=if(above(mx,.9),.5,mx);
wave_0_per_point11=mx=if(below(mx,.1),.5,mx);
wave_0_per_point12=my=if(above(my,.9),.5,my);
wave_0_per_point13=my=if(below(my,.1),.5,my);
wave_0_per_point14=
wave_0_per_point15=x=mx;
wave_0_per_point16=y=my;
wave_0_per_point17=a=bass*.1;
wave_0_per_point18=
wave_0_per_point19=r=bass*.5;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=mx=.5;
wave_1_init2=my=.5;
wave_1_init3=md=1;
wave_1_per_point1=oldmd=md;
wave_1_per_point2=md=(md+rand(4))%4;
wave_1_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_1_per_point4=
wave_1_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_1_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_1_per_point7=my=my+(equal(md,2)*.002*treb);
wave_1_per_point8=my=my-(equal(md,3)*.002*treb);
wave_1_per_point9=
wave_1_per_point10=mx=if(above(mx,.9),.5,mx);
wave_1_per_point11=mx=if(below(mx,.1),.5,mx);
wave_1_per_point12=my=if(above(my,.9),.5,my);
wave_1_per_point13=my=if(below(my,.1),.5,my);
wave_1_per_point14=
wave_1_per_point15=x=mx;
wave_1_per_point16=y=my;
wave_1_per_point17=a=bass*.1;
wave_1_per_point18=
wave_1_per_point19=g=treb*.5;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=mx=.5;
wave_2_init2=my=.5;
wave_2_init3=md=2;
wave_2_per_point1=oldmd=md;
wave_2_per_point2=md=(md+rand(4))%4;
wave_2_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_2_per_point4=
wave_2_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_2_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_2_per_point7=my=my+(equal(md,2)*.002*treb);
wave_2_per_point8=my=my-(equal(md,3)*.002*treb);
wave_2_per_point9=
wave_2_per_point10=mx=if(above(mx,.9),.5,mx);
wave_2_per_point11=mx=if(below(mx,.1),.5,mx);
wave_2_per_point12=my=if(above(my,.9),.5,my);
wave_2_per_point13=my=if(below(my,.1),.5,my);
wave_2_per_point14=
wave_2_per_point15=x=mx;
wave_2_per_point16=y=my;
wave_2_per_point17=a=bass*.1;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=mx=.5;
wave_3_init2=my=.4;
wave_3_init3=md=3;
wave_3_per_point1=oldmd=md;
wave_3_per_point2=md=(md+rand(4))%4;
wave_3_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_3_per_point4=
wave_3_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_3_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_3_per_point7=my=my+(equal(md,2)*.002*treb);
wave_3_per_point8=my=my-(equal(md,3)*.002*treb);
wave_3_per_point9=
wave_3_per_point10=mx=if(above(mx,.9),.5,mx);
wave_3_per_point11=mx=if(below(mx,.1),.5,mx);
wave_3_per_point12=my=if(above(my,.9),.5,my);
wave_3_per_point13=my=if(below(my,.1),.5,my);
wave_3_per_point14=
wave_3_per_point15=x=mx;
wave_3_per_point16=y=my;
wave_3_per_point17=a=bass*.1;
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.20321
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.22019
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.500
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=basstime = basstime + bass*0.03;
per_frame_2=basstime2 = basstime + bass*0.03;
per_frame_3=q1 = basstime2;
per_frame_4=
per_frame_5=//start in most active range
per_frame_6=basstime = if(below(basstime,450),450,basstime);
per_frame_7=basstime = if(above(basstime,495),450,basstime);
per_frame_8=
per_frame_9=basstime = basstime + bass_att*0.03;
per_frame_10=vol = pow(bass+mid+treb,2);
per_frame_11=basssum = vol;
per_frame_12=
per_frame_13=stickybit = time%2;
per_frame_14=
per_frame_15=//avg vol
per_frame_16=//buffer 1
per_frame_17=volAvg = volAvg + vol*equal(stickybit,1);
per_frame_18=//number of samples 1 or framerate
per_frame_19=sample1 = sample1 + equal(stickybit,1);
per_frame_20=//buffer 2
per_frame_21=volAvg2 = volAvg2 + vol*equal(stickybit,0);
per_frame_22=//number of samples 2
per_frame_23=sample2 = sample2 + equal(stickybit,0);
per_frame_24=
per_frame_25=//transision
per_frame_26=edge = bnot(equal(bit2,stickybit));
per_frame_27=
per_frame_28=volAvg = volAvg - volAvg*edge*stickybit;
per_frame_29=volAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);
per_frame_30=
per_frame_31=sample1 = sample1  - sample1*edge*stickybit;
per_frame_32=sample2 = sample2  - sample2*edge*equal(stickybit,0);
per_frame_33=
per_frame_34=//test vol against avg buffer lvl
per_frame_35=diff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);
per_frame_36=diff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);
per_frame_37=
per_frame_38=q3 = diff;
per_frame_39=
per_frame_40=bit2 = time%2;
per_frame_41=
per_frame_42=state = if(above(state,5),0,state);
per_frame_43=state =  state + above(diff,3);
per_frame_44=q4 = state;
per_frame_45=
per_frame_46=difftime = difftime + diff*0.03;
per_frame_47=q2 = difftime;
per_frame_48=
per_frame_49=//fix a strange error
per_frame_50=difftime = if(above(difftime,2000),0, difftime);
per_frame_51=
per_frame_52=monitor = state;
per_pixel_1=zoom = 1 + q3*0.05;
per_pixel_2=rot = (rad-q3)*q3*0.1;
per_pixel_3=//cx = 0.5 + 0.5*sin(q2);
per_pixel_4=//cy = cx;
warp_1=`shader_body
warp_2=`{
warp_3=`  float2 uv2 = lerp(uv_orig, uv, 0.2);
warp_4=`
warp_5=`  // diffused version:
warp_6=`  float ss = 0.3;
warp_7=`  float3 blur = 0.25*(
warp_8=`    tex2D(sampler_main, uv2+ss*texsize.zw*float2( 1, 1)).xyz +
warp_9=`    tex2D(sampler_main, uv2+ss*texsize.zw*float2(-1, 1)).xyz +
warp_10=`    tex2D(sampler_main, uv2+ss*texsize.zw*float2( 1,-1)).xyz +
warp_11=`    tex2D(sampler_main, uv2+ss*texsize.zw*float2(-1,-1)).xyz
warp_12=`  );
warp_13=`
warp_14=`  // diffusion:  
warp_15=`  ret = tex2D(sampler_main,uv2);//blur;
warp_16=`
warp_17=`  float F2 = 0.035;
warp_18=`  float k2 = 0.060;
warp_19=`  float s = 0.025;
warp_20=`  float scale = 9;
warp_21=`
warp_22=`  // reaction:
warp_23=`  float3 z = ret;
warp_24=`  float uvv = ret.x*ret.y*ret.y;
warp_25=`  z.x += (-uvv + F2*(1-ret.x) + 0.0007)*scale;
warp_26=`  z.y += (uvv - (F2+k2)*ret.y)*scale;
warp_27=`  //z.x += s*(16-ret.x*ret.y);
warp_28=`  //z.y += s*(ret.x*ret.y - ret.y - ret.z);
warp_29=`  z.z -= 0.02;
warp_30=`
warp_31=`  // apply laplacian:
warp_32=`  z.x += (blur - GetPixel(uv2))*0.2*scale;
warp_33=`
warp_34=`  ret = z;  
warp_35=`  //ret *= 0.98 + 0.02*saturate( (0.75 - rad )*10 );
warp_36=`  //ret *= 0.99;
warp_37=`
warp_38=`  // add noise:
warp_39=`  ret.x += 0.09*(tex2d(sampler_noise_lq, uv*texsize.xy*texsize_noise_lq.zw + rand_frame.xy).xyz*2-1);
warp_40=`
warp_41=`  // darken (decay) over time
warp_42=`  //ret = (ret - 0.002)*0.99;
warp_43=`}
comp_1=`// tribute to suksma!
comp_2=`
comp_3=`shader_body
comp_4=`{
comp_5=`    float2 uv2;
comp_6=`
comp_7=`    float4 c = float4(1,0.4,0.15,0.1);
comp_8=`
comp_9=`    uv2 = uv + float2(1,0)*texsize.zw;
comp_10=`    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_11=`    uv2 = uv + float2(-1,0)*texsize.zw;
comp_12=`    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_13=`
comp_14=`    uv2 = uv + float2(0,1)*texsize.zw;
comp_15=`    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_16=`    uv2 = uv + float2(0,-1)*texsize.zw;
comp_17=`    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_18=`
comp_19=`    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));
comp_20=`
comp_21=`    ret = 0.5 + 0.5*g;
comp_22=`    ret *= saturate(length(ret.xy-0.5)*5);
comp_23=`    ret = ret.xxy;
comp_24=`    ret += 1.15;
comp_25=`    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)*treb_att),pow(hue_shader.xzy,bass_att));
comp_26=`    ret *= ret;
comp_27=`
comp_28=`    //ret *= 1.5; //old gamma effect    
comp_29=`}
