MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.900
fDecay=0.980
fVideoEchoZoom=1.169
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.79142
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=n = -10000; loop (20000, megabuf(n)=0; gmegabuf(n)=0; n +=1; );
per_frame_init_2=
per_frame_init_3=MINBPM = 60; MAXBPM = 320; num_res = 200; 
per_frame_init_4=index = 0;
per_frame_init_5=loop (num_res,
per_frame_init_6=  n = index*8;
per_frame_init_7=  BPM      = minbpm * pow(maxbpm/minbpm,index/(num_res-1));
per_frame_init_8=  megabuf(n) = BPM;
per_frame_init_9=  index += 1;
per_frame_init_10=);
per_frame_init_11=
per_frame_init_12=
per_frame_init_13=//structure of resonator data, starting at megabuf (0)
per_frame_init_14=//size = 8
per_frame_init_15=//0: BPM
per_frame_init_16=//1: v
per_frame_init_17=//2: y
per_frame_init_18=//3: amplitude
per_frame_init_19=//4: amplitude after harmonics post processing
per_frame_init_20=
per_frame_init_21=
per_frame_init_22=//structure of shapes data, starting at gmegabuf (0)
per_frame_init_23=//0: x
per_frame_init_24=//1: y
per_frame_init_25=//2:
per_frame_init_26=//3: rad
per_frame_init_27=//4: brightness
per_frame_init_28=
per_frame_init_29=pi = 3.1416;
per_frame_init_30=ran1 = rand(1);
per_frame_init_31=ran2 = rand(1);
per_frame_init_32=ran3 = rand(1);
per_frame_init_33=ran4 = rand(1);
per_frame_init_34=
per_frame_init_35=num_shapes = 80; reg00 = num_shapes;
per_frame_init_36=recsize    = 8;   reg01 = recsize;
per_frame_init_37=
per_frame_init_38=n = 0;
per_frame_init_39=loop (num_shapes, 
per_frame_init_40=  z3 = rand (80)/100+0.2;
per_frame_init_41=  gmegabuf (1000+n+2) = z3;
per_frame_init_42=  gmegabuf (1000+n) =   (rand (100)/100-0.5)*z3;
per_frame_init_43=  gmegabuf (1000+n+1) = (rand (100)/100-0.5)*z3;
per_frame_init_44=  n += recsize;
per_frame_init_45=);
per_frame_1=//Martins resonant beat detection - use as it is
per_frame_2=//NOTE: uses megabuf (0) - megabuf (1600)
per_frame_3=//output: is_beat1 and is_beat2; 2:1 or 1:2
per_frame_4=
per_frame_5=//-------------- Start ----------------------------
per_frame_6=dt = min (1/fps,0.1) ; //Stability !
per_frame_7=dec_m = 1 - 4*dt; dec_s = 1 - 1.25*dt;
per_frame_8=vol =  max(0.5,bass+mid); 
per_frame_9=vol_ = vol_*dec_m + (1-dec_m)*vol; excite = (vol-vol_)/vol_;
per_frame_10=index=0; ratio = log(maxbpm/minbpm); sum_res = 0.01;
per_frame_11=loop (num_res,
per_frame_12=  n = index*8;
per_frame_13=  omega      =   megabuf(n) * 6.2832/60;
per_frame_14=  megabuf (n+1) *= 1-0.25*dt; //damping
per_frame_15=  EC_Steps = int (10*omega*dt)+1; 
per_frame_16=  loop (EC_Steps, // Euler-Cauchy steps
per_frame_17=    megabuf (n+1) += (excite - sqr(omega)*megabuf(n + 2)) * dt/EC_Steps;
per_frame_18=    megabuf (n+2) += megabuf(n+1) * dt/EC_Steps);
per_frame_19=  beatcos  = megabuf(n+1);  beatsin = megabuf(n+2)*omega; //2pi/60
per_frame_20=  quad     = sqrt (pow(beatsin,2) + pow(beatcos,2)) ;
per_frame_21=  megabuf (n+3) = megabuf(n+3) *dec_s +  quad* (1-dec_s);
per_frame_22=  megabuf (n+4) = megabuf(n+3);
per_frame_23=  stage = 2; //Addition d. Harmonischen
per_frame_24=  loop (2,
per_frame_25=    ind2     = int (0.5 + index + (num_res-1)/ratio*log(stage));
per_frame_26=    if ((ind2 <= num_res),
per_frame_27=       n2 = ind2*8;
per_frame_28=       A2     = max(max(megabuf(n2+3),megabuf(n2-8+3)),megabuf(n2+8+3));
per_frame_29=      megabuf(n+4) *= 1 + 2/(stage*stage)*A2/(A2+megabuf(n+3)),0);
per_frame_30=    stage *= 2;
per_frame_31=  );
per_frame_32=  Hyst = 1 + min (0.25, abs (index-maxind)*0.02);
per_frame_33=  if (megabuf(n+4) > megabuf (maxind*8+4)*Hyst, maxind = index,0);
per_frame_34=  sum_res += megabuf (n+3);
per_frame_35=  index += 1;
per_frame_36=);
per_frame_37=certain = megabuf(maxind*8+3)/(sum_res/num_res);
per_frame_38=//Doppelten oder, falls nicht moeglich, halben beat indizieren
per_frame_39=maxind2     = int (0.5 + maxind + (num_res-1)/ratio*log(2));
per_frame_40=if (maxind2 > num_res, maxind2 = int (0.5 + maxind + (num_res-1)/ratio*log(0.5)),0);
per_frame_41=sig1 = (sig1 + megabuf(maxind*8+1))/2 + excite * 0; //check ######
per_frame_42=is_beat1  = (sig1 > 0) && (sig1_ <= 0); 
per_frame_43=sig2 = (sig2 + megabuf(maxind2*8+1))/2 + excite * 0; //check ######
per_frame_44=is_beat2  = (sig2 > 0) && (sig2_ <= 0); 
per_frame_45=fastpace = if (maxind > maxind2, sig1 * sig1_ < 0, sig2 * sig2_ < 0);
per_frame_46=sig1_ = sig1;
per_frame_47=sig2_ = sig2;
per_frame_48=//-------------- End ----------------------------
per_frame_49=tog1 = sig1 > 0;
per_frame_50=tog2 = sig2 > 0;
per_frame_51=sbeat1 = (sbeat1 + is_beat1)/2;
per_frame_52=sbeat2 = (sbeat2 + is_beat2)/2;
per_frame_53=//fastpace = if (maxind > ind2, is_beat1,is_beat2);
per_frame_54=prog1 = (prog1 + is_beat1) %512;
per_frame_55=prog2 = (prog2 + is_beat2) %512;
per_frame_56=prog3 = (prog3 + fastpace) %512;
per_frame_57=
per_frame_58=maxi = min (maxind, maxind2);
per_frame_59=//maxi = maxind; //#####???
per_frame_60=trunner = trunner + dt*megabuf (maxi*8)/60*2*pi;
per_frame_61=corr = if (push, 0.5*corr + 0.5*cos (trunner), corr*dec_s);
per_frame_62=trunner -= corr * dt;
per_frame_63=trunner_ = dec_s * trunner_ + (1-dec_s)*trunner/2;
per_frame_64=
per_frame_65=q14 = trunner_;
per_frame_66=q15 = cos(trunner_);
per_frame_67=q16 = sin(trunner_);
per_frame_68=
per_frame_69=q32 = aspecty;
per_frame_70=//--------------------------------------------------------
per_frame_71=change  = is_beat1 && (prog1%20 == 0);
per_frame_72=schange = bnot (oldind == maxind) * (t1 > 10) || (t1>20);
per_frame_73=t1 = if (schange, 0, t1+dt);
per_frame_74=oldind = maxind;
per_frame_75=
per_frame_76=ran1 = if (change, rand (100)/100, ran1);
per_frame_77=ran2 = if (change, rand (100)/100, ran2);
per_frame_78=ran3 = if (change, rand (100)/100, ran3);
per_frame_79=ran4 = if (change, rand (100)/100, ran4);
per_frame_80=ran1_ = ran1_ + max(min(ran1-ran1_,0.02),-0.02)*dt*16;
per_frame_81=ran2_ = ran2_ + max(min(ran2-ran2_,0.02),-0.02)*dt*16;
per_frame_82=ran3_ = ran3_ + max(min(ran3-ran3_,0.02),-0.02)*dt*16;
per_frame_83=ran4_ = ran4_ + max(min(ran4-ran4_,0.1),-0.1)*dt*8;
per_frame_84=
per_frame_85=scale = sqrt (certain/4);
per_frame_86=
per_frame_87=scheme = if (schange, int (rand(1)), scheme) ;
per_frame_88=p1 = p1*dec_m+(1-dec_m)*prog1;
per_frame_89=
per_frame_90=speed = speed *dec_s + (1-dec_s)*(maxind/num_res+0.2);
per_frame_91=
per_frame_92=ang = ang + dt * (ran4_-0.5) * speed *2;
per_frame_93=sa = sin (ang); ca = cos(ang);
per_frame_94=m = 0; scheme = 0;
per_frame_95=loop (num_shapes * (vol_> 0.5),
per_frame_96=  n = m*recsize;
per_frame_97=  if (scheme ==0,
per_frame_98=
per_frame_99=  // modify 3D points here only
per_frame_100=  // ---------------------------------
per_frame_101=     x3 = gmegabuf (1000+n);
per_frame_102=     y3 = gmegabuf (1001+n);
per_frame_103=     z3 = max (0.01, abs (gmegabuf (1002+n)));
per_frame_104=     mx = (ran1_-0.5); my = (ran2_-0.5); mz = -ran3_; 
per_frame_105=     x3 += dt*mx*speed;
per_frame_106=     y3 += dt*my*speed;
per_frame_107=     z3 += dt*mz*speed;
per_frame_108=
per_frame_109=     bri = 1;
per_frame_110=     if ((mx > 0) && (x3/z3 >  .6), z3 = rand (100)/100+0.1; x3 = -z3*0.8; bri = 0,0);
per_frame_111=     if ((mx < 0) && (x3/z3 < -.6), z3 = rand (100)/100+0.1; x3 =  z3*0.8; bri = 0,0);
per_frame_112=     if ((my > 0) && (y3/z3 >  .6), z3 = rand (100)/100+0.1; y3 = -z3*0.8; bri = 0,0);
per_frame_113=     if ((my < 0) && (y3/z3 < -.6), z3 = rand (100)/100+0.1; y3 =  z3*0.8; bri = 0,0);
per_frame_114=
per_frame_115=     zenfac = 1;
per_frame_116=     if (z3 < 0.05,z3 = 1;
per_frame_117=         x3 = (rand (100)/100-0.5)/zenfac;
per_frame_118=         y3=(rand (100)/100-0.5)/zenfac; bri = 0,0);
per_frame_119=
per_frame_120=     gmegabuf (1000+n) = x3;
per_frame_121=     gmegabuf (1001+n) = y3;
per_frame_122=     gmegabuf (1002+n) = z3;
per_frame_123=
per_frame_124=  // ---------------------------------
per_frame_125=
per_frame_126=    k1 = m/num_shapes-0.5;
per_frame_127=    x0 = x3 / z3;
per_frame_128=    y0 = y3 / z3;
per_frame_129=
per_frame_130=    x = ca * x0 + sa*y0;
per_frame_131=    y = -sa *x0 + ca*y0;
per_frame_132=    gmegabuf (n) = x + 0.5;
per_frame_133=    gmegabuf (n+1) = y + 0.5;
per_frame_134=    gmegabuf (n+3) = 0.01 / z3 * q32 * bri;;
per_frame_135=    gmegabuf (n+4) = bnot(schange) * max(min(3*z3 * (1-z3),1),-1);
per_frame_136=  ,0); //end if scheme ==1
per_frame_137=m += 1);
per_frame_138=
per_frame_139=
per_frame_140=
per_frame_141=monitor = ran1;
per_pixel_1=zoom = .99; rot = 0; warp = 0; dy = -0.00;  dx = 0.00;
per_pixel_2=
per_pixel_3=zoom = 1; dx = 0; dy = 0; 
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_fc_main, uv ).xyz;
warp_5=`ret.x=1-ret.x;
warp_6=`    ret.x = tex2D( sampler_main, (uv-0.5)*1+0.5 ).x;
warp_7=`    ret.y = tex2D( sampler_main, (uv-0.5)*1+0.5 ).y;
warp_8=`    ret.z = tex2D( sampler_main, (uv-0.5)*1+0.5 ).z;   
warp_9=`ret.z=1-ret.z;
warp_10=`
warp_11=`    // darken (decay) over time
warp_12=`    ret *= 0.80; //or try: ret -= 0.004;
warp_13=`float4 noise2 = tex3D(sampler_noisevol_hq, 
warp_14=`                      ((uv.xyy
warp_15=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_16=`                      ).xyz*
warp_17=`                      float3(1,1,0)*0.05 + 
warp_18=`                      time*float3(0,0,1)*0.4 
warp_19=`                     );
warp_20=`ret *= (noise2)*2.5; 
warp_21=`ret.y=1-ret.y;
warp_22=`
warp_23=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`float2 uva = uv;
comp_5=`float2 uvb = -(uv - .5) + .5;
comp_6=`
comp_7=`ret = tex2D(sampler_main, uva).x + tex2D(sampler_main, uvb).x;
comp_8=`
comp_9=`float3 blurs = GetBlur1(uva).x + GetBlur3(uva).x;
comp_10=`blurs += GetBlur1(uvb).x + GetBlur3(uvb).x;
comp_11=`
comp_12=`ret = lerp (
comp_13=`blurs,
comp_14=`ret,
comp_15=`pow(ret,1));
comp_16=`
comp_17=`
comp_18=`
comp_19=`  
comp_20=`//  ret = tex2D(sampler_main, uv).x - GetBlur1(uv).x;
comp_21=`//    ret = pow(ret,float3(.3,.9,8))*1.25 - .25;
comp_22=`    ret = pow(ret,float3(5,1,.5));
comp_23=`    ret *= 1.0; //gamma
comp_24=` 
comp_25=`}
