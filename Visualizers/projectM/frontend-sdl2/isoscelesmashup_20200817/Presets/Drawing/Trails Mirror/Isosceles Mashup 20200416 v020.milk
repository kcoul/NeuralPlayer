MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.900
fDecay=0.980
fVideoEchoZoom=1.169
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.269
fWarpScale=1.615
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.05013
sx=0.99990
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.015
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.79142
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=index = 0;
per_frame_init_2=loop (70000,
per_frame_init_3=  megabuf(index) = 0;
per_frame_init_4=  gmegabuf(index) = 0;
per_frame_init_5=  index = index + 1;
per_frame_init_6=);
per_frame_init_7=
per_frame_init_8=zang = 1;
per_frame_init_9=
per_frame_init_10=yang = 0;
per_frame_init_11=zang = 2;
per_frame_1=
per_frame_2=xlen = 45; ylen = 45; flen = 20; reg00 = xlen*ylen/4; reg01=reg00/4;
per_frame_3=dec_med = 1-0.06*30/fps; dec_slow = 1-0.02*30/fps; dec_f = pow (0.8, 30/fps);
per_frame_4=q30 = dec_slow;
per_frame_5=smooth = max(1,pow(6,fps/30)-2); // >= 0; Ausbreitungsgeschwindigkeit
per_frame_6=
per_frame_7=//"Classic" beat reaction
per_frame_8=cbeat = bass+mid+treb;
per_frame_9=decc = if (vol>cbeat,0.8,dec_med);
per_frame_10=vol  = vol * decc + (1-decc)*cbeat;
per_frame_11=avg = avg*dec_slow + cbeat*(1-dec_slow);
per_frame_12=is_beat = above(cbeat, 1.5*avg) * above (time, tc0+.2);
per_frame_13=tc0 = if (bor(is_beat, bd_bt),time,tc0);
per_frame_14=peak = if (is_beat,cbeat,peak*dec_med);
per_frame_15=
per_frame_16=
per_frame_17=//Gleichanteil entfernen und normalisieren
per_frame_18=ind = 0; sum = 0; amp = 0.01;
per_frame_19=loop (reg01,
per_frame_20=  sum = sum + gmegabuf(ind+30000)/(reg01);
per_frame_21=  amp = amp + pow(gmegabuf(ind+30000),2);
per_frame_22=  ind = ind+1;
per_frame_23=); 
per_frame_24=ind = 0; amp_= amp_*dec_med + (1-dec_med)*sqrt(amp)/reg01*600;
per_frame_25=loop (reg01,
per_frame_26=  megabuf(ind+30000)= (gmegabuf(ind+30000)-sum)/amp_;
per_frame_27=  ind = ind+1;
per_frame_28=);
per_frame_29= 
per_frame_30=// Spectrum of spectrum  !
per_frame_31=index2 = 0;
per_frame_32=loop(flen, //Frequency step
per_frame_33=  index=0; real= 0; imag = 0;
per_frame_34=  loop (flen,
per_frame_35=    real = real + cos(index/flen*6.28*index2)*megabuf(index*reg01/8+30002);
per_frame_36=    imag = imag + sin(index/flen*6.28*index2)*megabuf(index*reg01/8+30002);
per_frame_37=    index=index+1;
per_frame_38=  );
per_frame_39=  megabuf(10000+index2)= megabuf(10000+index2) * dec_f + real;
per_frame_40=  megabuf(15000+index2)= megabuf(15000+index2) * dec_f + imag;
per_frame_41=  index2 = index2+1;
per_frame_42= );
per_frame_43=
per_frame_44=//Anregung
per_frame_45=ind = 1;
per_frame_46=loop (flen/2,
per_frame_47=  cx = megabuf(10000+ind);
per_frame_48=  cy = megabuf(15000+ind);
per_frame_49=  yind = -1;
per_frame_50=  loop (3,
per_frame_51=    xind = -1;
per_frame_52=    loop (3,
per_frame_53=      ox = ((cx+.5)*xlen+xind)%xlen;
per_frame_54=      oy = ((cy+.5)*ylen+yind)%ylen;
per_frame_55=      amp = (cx*cx+cy*cy)*3;
per_frame_56=      megabuf (oy*ylen+ox) = megabuf (oy*ylen+ox) 
per_frame_57=                           - 2*30/fps*sqrt(amp)*above(amp,.02)/(1+xind*xind+yind*yind);
per_frame_58=      xind = xind+1;
per_frame_59=    );
per_frame_60=    yind = yind+1;
per_frame_61=  );
per_frame_62=  ind = ind+1;
per_frame_63=);
per_frame_64=
per_frame_65=//Simulation
per_frame_66=yind = 0;
per_frame_67=loop (ylen,
per_frame_68=  xind = 0;
per_frame_69=  loop (xlen,
per_frame_70=    megabuf(yind*ylen+xind+5000) = //megabuf ab 5000 ist nur Zwischenspeicher
per_frame_71=    dec_med*((gmegabuf(yind*ylen+(xind+1)%xlen) +
per_frame_72=    gmegabuf(yind*ylen+(xlen+xind-1)%xlen) + 
per_frame_73=    gmegabuf(((yind+1)%ylen)*ylen+xind) + 
per_frame_74=    gmegabuf(((yind+ylen-1)%ylen)*ylen+xind)
per_frame_75=    +gmegabuf(yind*ylen+xind)*smooth*4)/(2+2*smooth) - megabuf(yind*ylen+xind)); 
per_frame_76=    xind = xind+1;
per_frame_77=  );
per_frame_78=  yind = yind+1;
per_frame_79=);
per_frame_80=
per_frame_81=//Projektionsparameter
per_frame_82=
per_frame_83=bindex += is_beat;
per_frame_84=
per_frame_85=if (is_beat && (bindex%4==0), ran2 = (rand(100)-50)/50,0 );
per_frame_86=if (is_beat && (bindex%4==2), ran3 = (rand(100)-50)/50,0 );
per_frame_87=if (is_beat && (bindex%6==5), ran4 = (rand(100)-50)/50,0 );
per_frame_88=
per_frame_89=trelx += ran2/fps/18;
per_frame_90=trely += ran3/fps/2;
per_frame_91=trelz += ran4/fps/6;
per_frame_92=zang = 6*sin(trelz);
per_frame_93=xang = 6*sin(zang/5+trelx);
per_frame_94=yang = 6*sin(zang/3*0+trely);
per_frame_95=
per_frame_96=q1 = cos(xang);q2 = sin(xang);q3 = cos(yang);
per_frame_97=q4 = sin(yang);q5 = cos(zang);q6 = sin(zang);
per_frame_98=fov = 1;
per_frame_99=
per_frame_100=//Umkopieren und Projektion
per_frame_101=yind = 0;
per_frame_102=loop (ylen,
per_frame_103=  xind = 0;
per_frame_104=  loop (xlen,
per_frame_105=    ind = yind*ylen+xind;
per_frame_106=    megabuf(ind) = gmegabuf(ind); 
per_frame_107=    gmegabuf(ind) = megabuf(ind+5000); 
per_frame_108=    oz = yind - ylen/2; //#
per_frame_109=    ox = if(bnot(yind%2),xind,xlen-xind-1);
per_frame_110=    oy0a = (oy0+oy0a)/2.5;
per_frame_111=    oy = gmegabuf(yind*ylen+ox); oy0 = oy;
per_frame_112=    ox = ox - xlen/2;  
per_frame_113=    mx = ox*q5 - oy*q6;  my = ox*q6 + oy*q5;
per_frame_114=    ox = mx; oy = my;  
per_frame_115=    mx = ox*q3 + oz*q4;  mz = - ox*q4 + oz*q3;
per_frame_116=    ox = mx; oz = mz;  
per_frame_117=    my = oy*q1 - oz*q2;  mz = oy*q2 + oz*q1;
per_frame_118=    z0 = (10*sin(trelz*14));
per_frame_119=    oy = my; oz = mz+z0;
per_frame_120=    gmegabuf(10000+ind) = fov*ox/(oz+60*fov)+.5;
per_frame_121=    gmegabuf(15000+ind) = fov*oy/(oz+60*fov)+.5;
per_frame_122=    hell= max(min(.5+oy0/4,1),0.2); //Helligkeit
per_frame_123=    gmegabuf(20000+ind) = max(min(hell* (.5+ (oy0a-oy0)*0.1),1),0.1);
per_frame_124=    gmegabuf(25000+ind) = oy0/16+.5;;
per_frame_125=    xind = xind+1;
per_frame_126=  );
per_frame_127=  yind = yind+1;
per_frame_128=);
per_frame_129=
per_frame_130=q29 = 10/(z0+15);
per_frame_131=q32 = aspecty;
per_frame_132=q28 = min (vol/3-0.25,1);
per_frame_133=monitor = q28;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_fc_main, uv ).xyz;
warp_5=`ret.x=1-ret.x;
warp_6=`    ret.x = tex2D( sampler_main, (uv-0.5)*1+0.5 ).x;
warp_7=`    ret.y = tex2D( sampler_main, (uv-0.5)*1+0.5 ).y;
warp_8=`    ret.z = tex2D( sampler_main, (uv-0.5)*1+0.5 ).z;   
warp_9=`ret.z=1-ret.z;
warp_10=`
warp_11=`    // darken (decay) over time
warp_12=`    ret *= 0.80; //or try: ret -= 0.004;
warp_13=`float4 noise2 = tex3D(sampler_noisevol_hq, 
warp_14=`                      ((uv.xyy
warp_15=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_16=`                      ).xyz*
warp_17=`                      float3(1,1,0)*0.05 + 
warp_18=`                      time*float3(0,0,1)*0.4 
warp_19=`                     );
warp_20=`ret *= (noise2)*2.5; 
warp_21=`ret.y=1-ret.y;
warp_22=`
warp_23=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`float2 uva = uv;
comp_5=`float2 uvb = -(uv - .5) + .5;
comp_6=`
comp_7=`ret = tex2D(sampler_main, uva).x + tex2D(sampler_main, uvb).x;
comp_8=`
comp_9=`float3 blurs = GetBlur1(uva).x + GetBlur3(uva).x;
comp_10=`blurs += GetBlur1(uvb).x + GetBlur3(uvb).x;
comp_11=`
comp_12=`ret = lerp (
comp_13=`blurs,
comp_14=`ret,
comp_15=`pow(ret,1));
comp_16=`
comp_17=`
comp_18=`
comp_19=`  
comp_20=`//  ret = tex2D(sampler_main, uv).x - GetBlur1(uv).x;
comp_21=`//    ret = pow(ret,float3(.3,.9,8))*1.25 - .25;
comp_22=`    ret = pow(ret,float3(5,1,.5));
comp_23=`    ret *= 1.0; //gamma
comp_24=` 
comp_25=`}
