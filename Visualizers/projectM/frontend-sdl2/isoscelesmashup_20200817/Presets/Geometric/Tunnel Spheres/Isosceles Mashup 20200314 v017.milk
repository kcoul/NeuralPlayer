MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.004
fWaveScale=0.010
fWaveSmoothing=0.000
fWaveParam=-0.440
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.040
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=1.000
ob_a=0.300
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=2.44415
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.000
wave_0_init1=t2 = 0;
wave_0_init2=t3 = 0;
wave_0_init3=t4 = 0;
wave_0_init4=cl = 0;
wave_0_per_frame1=t1 = 0;
wave_0_per_frame2=v = 0.01;
wave_0_per_frame3=j = j + (bass)*0.01;
wave_0_per_frame4=j2 = j2 + (mid_att)*0.01;
wave_0_per_frame5=j3 = j3 + (treb_att)*0.01;
wave_0_per_frame6=t2 = j;
wave_0_per_frame7=t3 = j2;
wave_0_per_frame8=t4 = j3;
wave_0_per_frame9=//t5 = 0;
wave_0_per_frame10=k = k*0.99 + 10*mid/fps;
wave_0_per_frame11=t5 = -k;
wave_0_per_frame12=
wave_0_per_frame13=cl1 = cl1 + 0.002;
wave_0_per_frame14=cl1 = if(above(cl1,1),0,cl1);
wave_0_per_frame15=cl1 = if(below(cl1,0),1,cl1);
wave_0_per_frame16=t8 = cl1;
wave_0_per_frame17=
wave_0_per_frame18=cl2 = cl2 -1*q1;
wave_0_per_frame19=cl2 = if(above(cl2,1),0,cl2);
wave_0_per_frame20=cl2 = if(below(cl2,0),1,cl2);
wave_0_per_frame21=t7 = cl2;
wave_0_per_frame22=
wave_0_per_frame23=cl3 = cl3 +0.001;
wave_0_per_frame24=cl3 = if(above(cl3,1),0,cl3);
wave_0_per_frame25=cl3 = if(below(cl3,0),1,cl3);
wave_0_per_frame26=t6 = cl3;
wave_0_per_point1=xx = ((sample*0983624912364)%10000000+100)/10000000;
wave_0_per_point2=yy = ((xx*1896575575)%10000000+100)/10000000;
wave_0_per_point3=zz = ((yy*58652340875)%10000000+100)/10000000;
wave_0_per_point4=
wave_0_per_point5=
wave_0_per_point6=d = sqrt(sqr(xx)+sqr(yy)+sqr(zz));
wave_0_per_point7=
wave_0_per_point8=zz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;
wave_0_per_point9=xx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;
wave_0_per_point10=yy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;
wave_0_per_point11=
wave_0_per_point12=v = 0.001;
wave_0_per_point13=
wave_0_per_point14=w = 1;// (sample*sin(time*0.3)*0.01-1);
wave_0_per_point15=bb = d*d*0.5;
wave_0_per_point16=n= 0.3;
wave_0_per_point17=s1 = sin(sin(t2*w+bb)*n);
wave_0_per_point18=s2 = sin(sin(t3*w+bb)*n);
wave_0_per_point19=s3 = sin(sin(t4*w+bb)*n);
wave_0_per_point20=c1 = cos(sin(t2*w+bb)*n);
wave_0_per_point21=c2 = cos(sin(t3*w+bb)*n);
wave_0_per_point22=c3 = cos(sin(t4*w+bb)*n);
wave_0_per_point23=
wave_0_per_point24=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_0_per_point25=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_0_per_point26=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_0_per_point27=
wave_0_per_point28=zoom = .5*(1/(z+0.5));
wave_0_per_point29=x = 0.5 + zoom*x1 + sin(time*0.1)*0.;;
wave_0_per_point30=y = 0.5 + zoom*y1 + cos(time*0.16801)*0.;
wave_0_per_point31=
wave_0_per_point32=pi3 = 3.1415*2*0.3333;
wave_0_per_point33=t = z*2+t2*1;
wave_0_per_point34=c=3;
wave_0_per_point35=//r = sin(t)*c;
wave_0_per_point36=
wave_0_per_point37=//g = sin(t+pi3)*c;
wave_0_per_point38=
wave_0_per_point39=//b = sin(t-pi3)*c;
wave_0_per_point40=
wave_0_per_point41=
wave_0_per_point42=r = if(above(r,1),1,r);
wave_0_per_point43=r = if(below(r,0),0,r);
wave_0_per_point44=g = if(above(g,1),1,g);
wave_0_per_point45=g = if(below(g,0),0,g);
wave_0_per_point46=b = if(above(b,1),1,b);
wave_0_per_point47=b = if(below(b,0),0,b);
wave_0_per_point48=
wave_0_per_point49=a = 0.4;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=2.44415
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=t2 = 0;
wave_1_init2=t3 = 0;
wave_1_init3=t4 = 0;
wave_1_init4=cl = 0;
wave_1_per_frame1=t8 = 1;
wave_1_per_point1=t8 = -t8;
wave_1_per_point2=y = sample;
wave_1_per_point3=x = 0.5 + t8*0.005;
wave_1_per_point4=
wave_1_per_point5=pi3 = 3.1415*2*0.3333;
wave_1_per_point6=t = time + sample*2;
wave_1_per_point7=c=2;
wave_1_per_point8=
wave_1_per_point9=r = sin(t)*c;
wave_1_per_point10=g = sin(t+pi3)*c;
wave_1_per_point11=
wave_1_per_point12=b = sin(t-pi3)*c;
wave_1_per_point13=
wave_1_per_point14=
wave_1_per_point15=r = if(above(r,1),1,r);
wave_1_per_point16=r = if(below(r,0),0,r);
wave_1_per_point17=g = if(above(g,1),1,g);
wave_1_per_point18=g = if(below(g,0),0,g);
wave_1_per_point19=b = if(above(b,1),1,b);
wave_1_per_point20=b = if(below(b,0),0,b);
wave_1_per_point21=
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=100.00000
wavecode_2_smoothing=0.60000
wavecode_2_r=0.000
wavecode_2_g=0.400
wavecode_2_b=1.000
wavecode_2_a=0.300
wave_2_per_frame1=t1 = q1;
wave_2_per_frame2=t2 = q2;
wave_2_per_frame3=t3 = q3;
wave_2_per_frame4=t4 = q4;
wave_2_per_frame5=t5 = q5;
wave_2_per_frame6=t6 = q6;
wave_2_per_frame7=t7 = q7;
wave_2_per_frame8=t8 = q8;
wave_2_per_point1=sample = 1-sample;
wave_2_per_point2=xxx = xx;
wave_2_per_point3=yyy = yy;
wave_2_per_point4=xx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2
wave_2_per_point5=+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;
wave_2_per_point6=
wave_2_per_point7=yy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6
wave_2_per_point8=+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;
wave_2_per_point9=d = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));
wave_2_per_point10=x = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;
wave_2_per_point11=y = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=2.44415
wavecode_3_smoothing=0.00000
wavecode_3_r=0.000
wavecode_3_g=0.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=t2 = 0;
wave_3_init2=t3 = 0;
wave_3_init3=t4 = 0;
wave_3_init4=cl = 0;
wave_3_per_frame1=t8 = 1;
wave_3_per_point1=t8 = -t8;
wave_3_per_point2=y = (1+t8)*0.01;
wave_3_per_point3=x = sample;
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.040
shapecode_0_rad=0.01000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.12566
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.010
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.490
shapecode_1_y=0.500
shapecode_1_rad=1.32907
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.49831
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.990
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=1.000
shapecode_2_y=0.500
shapecode_2_rad=3.00540
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.12566
shapecode_2_tex_zoom=1.51878
shapecode_2_r=0.000
shapecode_2_g=1.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=1.000
shapecode_3_y=0.500
shapecode_3_rad=0.39872
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.12566
shapecode_3_tex_zoom=1.51878
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
per_frame_init_1=prox = 1;
per_frame_1=dec_med = pow (0.8, 30/fps);
per_frame_2=dec_slow = pow (0.95, 30/fps);
per_frame_3=//dec_xlow = pow (0.999, 30/fps);
per_frame_4=beat = max (max (bass, mid), treb); 
per_frame_5=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_6=is_beat = above(beat, .2+avg+peak) * above (time, t0+.2);
per_frame_7=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_8=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_9=index = (index + is_beat) %32;
per_frame_10=index2 = (index2 + is_beat*bnot(index))%4;
per_frame_11=
per_frame_12=q22 = peak;
per_frame_13=q24 = is_beat;
per_frame_14=q26 = bass_att + mid_att + treb_att;
per_frame_15=vol = vol*dec_med + (1-dec_med)*q26;
per_frame_16=q27 = index + 1;
per_frame_17=q28 = index2 +1;
per_frame_18=
per_frame_19=p2 = .3*sin(time) + .3*cos(time/3);
per_frame_20=//*****tunnel tilting
per_frame_21=q1 = cos(p2 * 3.1416/4);
per_frame_22=q2 = sin(p2 * 3.1416/4);
per_frame_23=q3 = -q2;
per_frame_24=q4 = q1;
per_frame_25=
per_frame_26=//****tunnel viewpoint x,y
per_frame_27=vtrig = is_beat * bnot(index%2);
per_frame_28=vx = vx * bnot(vtrig) + vtrig * (int(rand(100))/100-.5);
per_frame_29=vy = vy * bnot(vtrig) + vtrig * (int(rand(100))/100-.5);
per_frame_30=vx = vx* below(index%15,5); //###
per_frame_31=vy = vy* below(index%15,5);
per_frame_32=q5 = vx*10;
per_frame_33=q6 = vy*12;
per_frame_34=
per_frame_35=//***tunnel width
per_frame_36=q21 = (1+sin(time/12))/8+.01;
per_frame_37=
per_frame_38=//**floor proximity
per_frame_39=prox = prox - above(vy,.3)*prox*2;
per_frame_40=q32 = .5 + .2*prox;
per_frame_41=monitor = prox;
per_frame_42=
per_frame_43=//****tunnel rotation
per_frame_44=rota = rota +.01*below(index%16,8)/fps*30;
per_frame_45=rota1 = rota1*dec_med + (1-dec_med)*rota;
per_frame_46=q7 = rota1;
per_frame_47=
per_frame_48=//****tunnel speed
per_frame_49=movez = movez + 1.2/(1+abs(vx)+abs(vy))/fps;
per_frame_50=q8 = movez * (1+q21/4);
per_frame_51=//dyn. Aenderung von q21 bewirkt auch Richt.wechsel
per_frame_52=
per_frame_53=//***********************
per_frame_54=trig1= q24*bnot(index%12);
per_frame_55=trig2= q24*bnot((index+4)%12);
per_frame_56=trig3= q24*bnot((index+8)%12);
per_frame_57=trel = trel + vol/fps;
per_frame_58=z0 = 1;
per_frame_59=speed = vol/2;
per_frame_60=hx = sin(trel);
per_frame_61=hy = cos(trel);
per_frame_62=
per_frame_63=p1z = bnot(trig1)* (p1z + (5+p1z)*speed/fps)+trig1*z0;
per_frame_64=p1z = max(p1z,.1);
per_frame_65=q9 = hx/(p1z); 
per_frame_66=q10 = hy/(p1z); 
per_frame_67=q11 = p1z;
per_frame_68=q12 = .1+.02*q26*bnot((index+2)%3)*p1z*exp(-p1z/100);
per_frame_69=
per_frame_70=p2z = bnot(trig2)* (p2z + (5+p2z)*speed/fps)+trig2*z0;
per_frame_71=p2z = max(p2z,.1);
per_frame_72=q13 = 2*hx/(p2z); 
per_frame_73=q14 = -.5*hy/(p2z); 
per_frame_74=q15 = p2z;
per_frame_75=q16 = .1+.02*q26*bnot((index+2)%3)*p2z*exp(-p2z/100);
per_frame_76=
per_frame_77=
per_frame_78=p3z = bnot(trig3)* (p3z + (5+p3z)*speed/fps)+trig3*z0;
per_frame_79=p3z = max(p3z,.1);
per_frame_80=q17 = -1.4*hx/(p3z); 
per_frame_81=q18 = 2*hy/(p3z); 
per_frame_82=q19 = p3z;
per_frame_83=q20 = .1+.02*q26*bnot((index+2)%3)*p3z*exp(-p3z/100);
warp_1=`shader_body
warp_2=`{
warp_3=`float2 pixelsize = texsize.zw;
warp_4=`float2 uvm = uv;
warp_5=`
warp_6=`float2 noise_uv = uv*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
warp_7=`float4 noiseVal = tex2D(sampler_noise_lq, noise_uv);
warp_8=`
warp_9=`ret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));
warp_10=`ret.xyz = tex2D( sampler_pw_main,uvm).xyz;
warp_11=`
warp_12=`
warp_13=`float3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;
warp_14=`if (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {
warp_15=`ret.xy = rsamp.xy;
warp_16=`}
warp_17=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_18=`                      ((noise_uv.xyy*q27
warp_19=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_20=`                      ).xyz*
warp_21=`                      float3(1,1,0)*0.05 + 
warp_22=`                      time*float3(0,0,1)*q29
warp_23=`                     );
warp_24=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_25=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_26=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_27=`rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;
warp_28=`if (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {
warp_29=`ret.xy = rsamp.xy;
warp_30=`}
warp_31=`
warp_32=`ret.z = tex2D(sampler_fw_main,ret.xy).z;
warp_33=`
warp_34=`ret.z += q29*.005;
warp_35=`if(ret.z+ret.y+ret.x<.9)ret*=.1;
warp_36=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`
comp_3=`float k1, k2, mask1, mask2, mask3, rad1, rad2, rad3;
comp_4=`float2 rs, rss, rss0, rs0, uv2, uv3,uv4, rsk, uvo;
comp_5=`float2 dz1, dz2, dz3, Kugel1, Kugel2, Kugel3,tmp;
comp_6=`float3 noise, ret1, ret2, cathed, sky, fire;
comp_7=`
comp_8=`shader_body {
comp_9=`uvo = uv*aspect.xy;
comp_10=`uv = mul(uv*aspect.xy,float2x2(_qa));
comp_11=`uv = uv + -.0- .2*float2(q5,q6);
comp_12=`float2 uv1 = (uv-.5 );//*aspect.xy;
comp_13=`
comp_14=`//Kugel1
comp_15=`rsk = (uv1 + float2 (q9,q10)) ;
comp_16=`dz1 = normalize(rsk);
comp_17=`rad1 = q11*length (rsk) ;
comp_18=`uv4 =  tan(rad1)*dz1;
comp_19=`mask1 = saturate(8-8*rad1);
comp_20=`Kugel1 = uv4*mask1*8/q11;
comp_21=`uv1 += Kugel1*.1;
comp_22=`
comp_23=`//Kugel2
comp_24=`rsk = (sin(q27*atan2(uv1.x,uv1.y)/2)) ;
comp_25=`dz2 = normalize(rsk);
comp_26=`rad2 = 1*length (rsk) ;
comp_27=`uv4 =  tan(rad2)*dz2;
comp_28=`mask2 = saturate(8-8*rad2);
comp_29=`Kugel2 = uv4*mask2;
comp_30=`
comp_31=`//Kugel3
comp_32=`float argu = length(uv1+q5*uv1.y);
comp_33=`rsk = (sin(.1*(q27-8)/ argu));
comp_34=`//rsk = (sin(.5*q27*atan2(uv1.x,uv1.y))) ;
comp_35=`dz3 = normalize(rsk);
comp_36=`rad3 = 1*length (rsk) ;
comp_37=`uv4 =  tan(-rad3)*dz3;
comp_38=`mask3 = saturate(8-8*rad3);
comp_39=`Kugel3 = uv4*mask3;
comp_40=`
comp_41=`float2 dz = (Kugel1 + q12*Kugel2*length(uv1) + q13*Kugel3*argu);
comp_42=`//******************** STARS
comp_43=`rss0.x = atan2(uv1.x, uv1.y)/3.1416;
comp_44=`rss0.y = .01/(length (uv1));
comp_45=`
comp_46=`rss = float2 (rss0.x,rss0.y+time/2)+dz;
comp_47=`rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_48=`float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.8 >= 0);
comp_49=`tmp = abs(frac(rss*8)-.5);
comp_50=`
comp_51=`//*************************
comp_52=`uv1 -= dz*.5;
comp_53=`float z = .2/(length(uv1)+q21);
comp_54=`uv2.y = z + q8;
comp_55=`uv2.x = rss0.x +q7;
comp_56=`uv3 =frac(uv2);
comp_57=`cathed =  tex2D (sampler_main,uv3+.4*dz)*12;
comp_58=`
comp_59=`float mod = (q22+1)/6;
comp_60=`
comp_61=`//Deckenbeleuchtung:
comp_62=`fire = saturate(.05*q22/length (uv1)*
comp_63=` (lum(tex2D (sampler_main,uv3+.0)))) ;
comp_64=`
comp_65=`//Tasaechl. Feuer; Problem: uv1 passt nicht zu uv3
comp_66=`fire += saturate(.02*q22/length (uv1)*
comp_67=` (lum(tex2D (sampler_main,uv1+.5))))/length(uv1);
comp_68=`
comp_69=`k1 = lum(fire);
comp_70=`fire = k1*float3(1,k1*.8,k1*k1/3)  ;
comp_71=`
comp_72=`uvo+=dz;
comp_73=`sky = saturate (.02/length(uvo-.3)) * 1;
comp_74=`
comp_75=`float3 dots = saturate(.04/length(tmp)) *noise;
comp_76=`dots *= saturate(.2/abs(rss0.y));
comp_77=`dots = saturate(lum(dots)*lum(dots)*1);
comp_78=`k1 = lum(dots);
comp_79=`dots= k1*float3(1,k1*.8,k1*k1/3) *2 ;
comp_80=`float cmask = saturate(1-16*lum(GetBlur1(frac(uv3))));
comp_81=`ret += sky * cmask;
comp_82=`ret += fire+dots;
comp_83=`
comp_84=`ret += sky*cathed/2;
comp_85=`float dis = length(uv1);
comp_86=`float crot = sin((dis+time)*12);
comp_87=`float3 blk = mod * float3 (crot,1-crot,2-dis)*dis;
comp_88=`blk *= (q12*(1/rad2+q15*mask2)+q13*(1/rad3+q15*mask3))/2 ;
comp_89=`blk += q22/rad1*roam_cos-mask1/4 ;
comp_90=`ret += blk;
comp_91=`
comp_92=`}
