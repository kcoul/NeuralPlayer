MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=0.907
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=100.000
fWaveScale=1.186
fWaveSmoothing=0.500
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99950
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00900
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=0.000
nMotionVectorsY=0.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=0.300
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.22167
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=2.21670
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=1.000
shape_0_per_frame1=r = q1;
shape_0_per_frame2=g = q2;
shape_0_per_frame3=b = q3;
shape_0_per_frame4=r2 = q2;
shape_0_per_frame5=g2 = q3;
shape_0_per_frame6=b2 = q1;
shape_0_per_frame7=x = x + 0.21*cos(time) + 0.121*sin(1.2*time) + 0.15*sin(0.63*time);
shape_0_per_frame8=y = y + 0.134*cos(1.13*time) + 0.2*sin(0.8*time) + 0.213*sin(0.43*time);
shape_0_per_frame9=border_r = q3;
shape_0_per_frame10=border_b = q2;
shape_0_per_frame11=border_g = q1;
shape_0_per_frame12=ang = ang + 4.52*cos(time);
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.24486
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.48885
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=1.000
shape_1_per_frame1=r = q2;
shape_1_per_frame2=g = q3;
shape_1_per_frame3=b = q1;
shape_1_per_frame4=r2 = q3;
shape_1_per_frame5=g2 = q1;
shape_1_per_frame6=b2 = q2;
shape_1_per_frame7=x = x + 0.11*cos(0.6*time) + 0.122*sin(1.12*time) + 0.155*sin(0.83*time);
shape_1_per_frame8=y = y + 0.134*cos(0.513*time) + 0.126*sin(1.48*time) + 0.13*sin(0.743*time);
shape_1_per_frame9=border_r = q1;
shape_1_per_frame10=border_b = q2;
shape_1_per_frame11=border_g = q3;
shape_1_per_frame12=ang = ang + 4.52*cos(time);
shapecode_2_enabled=1
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.27048
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.55044
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=1.000
shape_2_per_frame1=r = q3;
shape_2_per_frame2=g = q1;
shape_2_per_frame3=b = q2;
shape_2_per_frame4=r2 = q1;
shape_2_per_frame5=g2 = q2;
shape_2_per_frame6=b2 = q3;
shape_2_per_frame7=x = x + 0.201*cos(1.11*time) + 0.1022*sin(1.512*time) + 0.215*sin(0.83*time);
shape_2_per_frame8=y = y + 0.134*cos(1.03*time) + 0.1026*sin(0.648*time) + 0.2*sin(1.743*time);
shape_2_per_frame9=border_r = q1;
shape_2_per_frame10=border_b = q3;
shape_2_per_frame11=border_g = q2;
shape_2_per_frame12=ang = ang + 4.52*cos(time);
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=x1 = 2;
per_frame_init_2=y1= 2;
per_frame_init_3=z1 = 2;
per_frame_1=// raytraced sphere code
per_frame_2=
per_frame_3=d = 20; // distance of the sphere, the farther you're away the more you'll see on the horizon
per_frame_4=z = 4; // distance of the pane where the scene is projected on, wider distance = smaller apex angle of the camera, very small distances = fish eyes view
per_frame_5=
per_frame_6=zz = 1 + bass_att*0; // linear zoom
per_frame_7=
per_frame_8=pi = asin(1)*2;
per_frame_9=pi2inv = 0.5/pi;
per_frame_10=maskangle = asin( 1/d);
per_frame_11=q32 = maskangle; // hit = (cameras angle < mask_angle)
per_frame_12=q31 = d;
per_frame_13=q30 = z;
per_frame_14=q29 = pi2inv;
per_frame_15=q28 = pi;
per_frame_16=q27 = 1/zz;
per_frame_17=
per_frame_18=v = 0.4;
per_frame_19=j1 = j1*0.95 + sqr(bass*4)*v;
per_frame_20=j2 = j2*0.95 + sqr(mid*4)*v;
per_frame_21=j3 = j3*0.95 + sqr(treb*4)*v;
per_frame_22=
per_frame_23=n = n + j1*0.0152;
per_frame_24=n1 = n1 + j2*0.0152;
per_frame_25=n2 = n2 + j3*0.0152;
per_frame_26=
per_frame_27=vol=(bass+mid+treb)*0.25;
per_frame_28=vol=vol;
per_frame_29=q3=vol;
per_frame_30=mtime = mtime+vol*0.01;
per_frame_31=q1=mtime;
per_frame_32=
per_frame_33=zoom = zoom + 0.015*vol;
per_frame_34=
per_frame_35=w1 = n*0.01;    // solid angles to rotate the sphere in its origin
per_frame_36=w2 = n1*0.01;
per_frame_37=w3 = n2*0.01;
per_frame_38=
per_frame_39=q20 = cos(w1);
per_frame_40=q21 = sin(w1);
per_frame_41=q22 = cos(w2);
per_frame_42=q23 = sin(w2);
per_frame_43=q24 = cos(w3);
per_frame_44=q25 = sin(w3);
warp_1=`shader_body
warp_2=`{
warp_3=`ret = lerp(GetPixel((uv+uv_orig)/2 ),GetPixel(uv), 1);
warp_4=`ret *= (0.97 - .05*lum(GetBlur2(uv_orig)) - .1*q5);
warp_5=`ret -= 0.004;
warp_6=`
warp_7=`float2 uv2 = float2 (.2/rad,ang);
warp_8=`uv2 = uv_orig;
warp_9=`//ret += (tex2D (sampler_noise_lq,uv2*2+0*rand_frame).r-.0)*.05 * saturate(.1+(GetBlur2(uv)-GetPixel(uv))*1);
warp_10=`
warp_11=`}
comp_1=`#define sat saturate
comp_2=`float z, z0, radi;
comp_3=`float2 uv1, uv2, uva, dz;
comp_4=`static const int anz = 27;
comp_5=`static const float2 moonpos = .45;;
comp_6=`static const float2 hor = texsize.zw*float2(1,0);
comp_7=`static const float2 ver = texsize.zw*float2(1,0).yx;
comp_8=`float3 Get1 (float2 uvi, float par)
comp_9=`{return lerp(GetBlur1(uvi), GetPixel(uvi), 0*saturate(par/2))*par;}
comp_10=`
comp_11=`shader_body
comp_12=`{
comp_13=`    float rad_lq = rad * length(texsize.xy)*0.5;
comp_14=`    float ang_lq = ang;
comp_15=`    float2 uv_temp1 = (uv - 0.5) * texsize.xy;
comp_16=`    float rad_hq = length(uv_temp1);
comp_17=`    float ang_hq = atan2(-uv_temp1.y, uv_temp1.x);
comp_18=`
comp_19=`    float2 uv2 = (uv - 0.5);
comp_20=`    float rad2 = rad_lq*0.8;
comp_21=`    float ang2 = ang_lq * M_INV_PI_2 + rad_lq*0.000 + time*0.00;
comp_22=`
comp_23=`
comp_24=`        // FIN TYPE
comp_25=`        float fins = q26 + 4;
comp_26=`        ang2 = frac(ang2*fins)/fins;
comp_27=`              // ENABLE THIS TO MAKE THE FINS ALTERNATE: (seamless!)
comp_28=`              ang2 = abs(ang2 - 0.5/fins);
comp_29=`
comp_30=`
comp_31=`    ang2 *= M_PI_2;
comp_32=`    uv = 0.5 + rad2*float2(cos(ang2),sin(ang2))*texsize.zw;
comp_33=`
comp_34=`    ret = pow(1.25*saturate(GetBlur1(uv))*((tex2D(sampler_pc_main,uv)-GetBlur2(uv))), 0.333*sqrt(q31)); //invert
comp_35=`
comp_36=`    uva = (uv-0.5)*aspect.xy+0.5 + .4/q8;
comp_37=`    float moon = (1./q8 / length (uva-moonpos));
comp_38=`
comp_39=`    dz.x = lum(GetPixel(uv-hor)) - lum(GetPixel(uv+hor));
comp_40=`    dz.y = lum(GetPixel(uv-ver)) - lum(GetPixel(uv+ver));
comp_41=`
comp_42=`    float3 shine = GetPixel(uv); 
comp_43=`   uv2 = (uv-moonpos)*1.4 + moonpos;
comp_44=`   //shine += (pow(GetPixel(uv2),2))/2;
comp_45=`
comp_46=`    radi = pow(q9, .25) - .7;
comp_47=`    for (int n=1; n <= anz; n++)
comp_48=`    { 
comp_49=`      uv2 = (normalize(uv-moonpos)*radi+moonpos);
comp_50=`      shine += 2.5/anz*Get1((uv-moonpos)*radi+moonpos,radi) ;
comp_51=`      radi -= 0.75/anz;;
comp_52=`    }
comp_53=`
comp_54=`    float3 ret_s = min(1.5*shine*sqrt(q27)*sqrt(q9), 1.5*GetPixel(uv)*sqrt(q25*q32));
comp_55=`
comp_56=`    ret = 1.2*lum(ret)/sqrt(q9) + pow(1-exp(-ret_s*1.35), 2);
comp_57=`
comp_58=`//    float2 uv_echo = (uv - 0.5)*float2(-1,-1) + .5; ret = lerp( tex2D(sampler_main, uv).xyz, tex2D(sampler_main, uv_echo).xyz, .5)*1; ret = 1 - ret*(1 - ret)*4; // invert
comp_59=`
comp_60=`}
