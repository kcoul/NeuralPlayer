MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=2.000
fDecay=0.990
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.015
ob_r=0.000
ob_g=0.000
ob_b=1.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=32
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=13
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.500
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.500
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=trans = if(equal(q3,3),1,0);
shape_0_per_frame2=a = trans;
shape_0_per_frame3=a2 = trans;
shape_0_per_frame4=border_a = trans;
shape_0_per_frame5=
shape_0_per_frame6=x = q1 + rand(15)*0.01*bass_att*if(equal(rand(2),1),1,-1);
shape_0_per_frame7=y = q2 + rand(15)*0.01*bass_att*if(equal(rand(2),1),1,-1);
shape_0_per_frame8=rad = .09 + .002*rand(10);
shapecode_1_enabled=1
shapecode_1_sides=32
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=13
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.500
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.500
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=trans = if(equal(q3,6),1,0);
shape_1_per_frame2=a = trans;
shape_1_per_frame3=a2 = trans;
shape_1_per_frame4=border_a = trans;
shape_1_per_frame5=
shape_1_per_frame6=x = q1 + rand(15)*0.01*mid_att*if(equal(rand(2),1),1,-1);
shape_1_per_frame7=y = q2 + rand(15)*0.01*mid_att*if(equal(rand(2),1),1,-1);
shape_1_per_frame8=rad = .09 + .002*rand(10);
shapecode_2_enabled=1
shapecode_2_sides=32
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=13
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.500
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.500
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=trans = if(equal(q3,9),1,0);
shape_2_per_frame2=a = trans;
shape_2_per_frame3=a2 = trans;
shape_2_per_frame4=border_a = trans;
shape_2_per_frame5=
shape_2_per_frame6=x = q1 + rand(15)*0.01*treb_att*if(equal(rand(2),1),1,-1);
shape_2_per_frame7=y = q2 + rand(15)*0.01*treb_att*if(equal(rand(2),1),1,-1);
shape_2_per_frame8=rad = .09 + .002*rand(10);
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=t0a = time; t0 = time+.5;
per_frame_init_2=spb_ = .5; ;
per_frame_init_3=volb = .5; volx = .5;
per_frame_init_4=vol_= 1; index = 0; mov1 = 0;
per_frame_init_5=sdev = .1; wamp_ = .1;
per_frame_init_6=
per_frame_1=dec_med = pow (0.8, 30/fps); dec_slow = pow (0.95, 30/fps);
per_frame_2=vol = (bass+med+treb)/1.5; vol_ = vol_*dec_slow + (1-dec_slow)*vol;
per_frame_3=
per_frame_4=is_beat = above(vol, vol_+2*peak) * above (time, t0+spb_*.45);
per_frame_5=t0a  = if(is_beat,t0,t0a); t0 = if(is_beat,time,t0);
per_frame_6=peak = if(is_beat,vol,peak*dec_med);
per_frame_7=index = (index + is_beat) %128;
per_frame_8=
per_frame_9=spb = min(t0-t0a + .01,2);
per_frame_10=spb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);
per_frame_11=
per_frame_12=
per_frame_13=q20 = vol_;
per_frame_14=q21 = above(vol,2.7*vol_);
per_frame_15=q22 = max(0,peak-.0)+.01;
per_frame_16=hpeak = hpeak*dec_med + (1-dec_med)*q21;
per_frame_17=q23 = hpeak * (1+int(rand(8)));
per_frame_18=q24 = is_beat;
per_frame_19=q25 = q22*(1+int(rand(8)))/8;
per_frame_20=
per_frame_21=mindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));
per_frame_22=sdev = if(is_beat,sdev * .8 + .2*pow(mindev+.02,2),sdev);
per_frame_23=
per_frame_24=speed = 1/fps/spb_;
per_frame_25=trel = trel + speed;
per_frame_26=q10 = trel;
per_frame_27=
per_frame_28=wamp =  min(.001/sdev,.15);
per_frame_29=wamp_ = wamp_*dec_slow + (1-dec_slow)*wamp;
per_frame_30=q11 = sin(trel/2)*wamp_;
per_frame_31=q12 = wamp_/2;
per_frame_32=
per_frame_33=rota = 2*wamp_*sin(trel/3);
per_frame_34=//rota = .2*sin(wamp_*32);
per_frame_35=q5 = cos(rota);
per_frame_36=q6 = sin(rota);
per_frame_37=q7 = -q6;
per_frame_38=q8 = q5;
per_frame_39=
per_frame_40=q15 = -sin(trel*.5)*.05;
per_frame_41=q16 = cos(trel)*wamp_/2;
per_frame_42=
per_frame_43=q19 = .1*sin(trel/12);
per_frame_44=
per_frame_45=//ODD PLANET MOVEMENT
per_frame_46=trig1 = bnot(vis)*bnot(int(rand(100*fps)));
per_frame_47=vis = if (trig1,1,vis*below(mov1,1));
per_frame_48=q30 = vis;
per_frame_49=mov1 = if (vis,mov1+2*speed/fps,-1);
per_frame_50=dir = if(trig1,int(rand(100)),dir); 
per_frame_51=q31 = .5+.5*cos(dir)*mov1;
per_frame_52=q32 = .5+.5*sin(dir)*mov1;
per_frame_53=
per_frame_54=q29 = (2+sin(time/17)); //reflection water
per_frame_55=
per_frame_56=monitor = wamp;
per_pixel_1=zoom = 1+.02*rad*q20;
per_pixel_2=dy = -.00;
per_pixel_3=warp =.1; dx = .0;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret.xyz = tex2D( sampler_main, uv ).xyz;
warp_5=`
warp_6=`      // take the difference between the crisp and blurred images,
warp_7=`      // then add it back into the image.  Creates spots and stripes over time.
warp_8=`      ret.xyz += (ret.xyz - GetBlur2(uv))*0.3;
warp_9=`      ret.xyz *= 0.9;
warp_10=`
warp_11=`      // add noise:
warp_12=`      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;
warp_13=`      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 * saturate(treb_att-1);
warp_14=`
warp_15=`      // desaturate over time, to keep the globs white
warp_16=`      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);
warp_17=`}
comp_1=`float3 ret1, ret2, reta;
comp_2=`float2 sam;
comp_3=`shader_body
comp_4=`{
comp_5=`    sam = tex2D(sampler_main,uv*.5);
comp_6=`    ret1 = tex2D(sampler_main, float2(uv.x, uv.y));
comp_7=`    sam *= GetBlur1(uv)-GetBlur3(uv);       
comp_8=`
comp_9=`    reta = tex2D(sampler_main, sam+uv ).rgb;
comp_10=`    ret1 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret1;
comp_11=`    ret1 *= (ret1+1)/2; //gamma
comp_12=`
comp_13=`uv = (uv-.5)*.3+.5;
comp_14=`    sam = tex2D(sampler_main,uv*.5);
comp_15=`    ret2 = tex2D(sampler_main, float2(uv.x, uv.y));
comp_16=`    sam *= GetBlur1(uv)-GetBlur3(uv);       
comp_17=`
comp_18=`    reta = tex2D(sampler_main, sam+uv ).rgb;
comp_19=`    ret2 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret2;
comp_20=`    ret2 *= (ret1+1); //gamma
comp_21=`
comp_22=`
comp_23=`
comp_24=`ret = max(ret1, ret2);
comp_25=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_26=`                      ((sam.xyy*q28
comp_27=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_28=`                      ).xyz*
comp_29=`                      float3(1,1,0)*0.05 + 
comp_30=`                      time*float3(0,0,1)*q31
comp_31=`                     );
comp_32=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_33=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_34=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_35=`ret *= .5+.5*lum(ret);
comp_36=`//ret = (1+ret1)*ret2;
comp_37=`
comp_38=`}
comp_39=`
comp_40=`
