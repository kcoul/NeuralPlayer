MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.000
fDecay=0.940
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=0
bAdditiveWaves=1
bWaveDots=1
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.009
fWaveScale=15.172
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=1.200
fModWaveAlphaEnd=1.200
fWarpAnimSpeed=1.000
fWarpScale=3.138
fZoomExponent=1.00000
fShader=1.000
zoom=1.02300
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00054
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=1.000
wave_b=0.040
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=q1 = below(rand(100),4 + 10*(treb+mid+bass));
wave_0_per_point1=it = (it + 1)*above(sample,0)*below(it,53);
wave_0_per_point2=ita = (ita + equal(it,0))*above(sample,0);
wave_0_per_point3=
wave_0_per_point4=sw = 1-equal(it,0)*equal(ita,0);
wave_0_per_point5=swi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);
wave_0_per_point6=xv = if(sw - swi,xv,rand(1001)*.001*.8);
wave_0_per_point7=mx = xv + ita*.025;
wave_0_per_point8=my = if(sw - swi,my,rand(1001)*.001*.975);
wave_0_per_point9=
wave_0_per_point10=sz = .01;
wave_0_per_point11=vx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);
wave_0_per_point12=vy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);
wave_0_per_point13=
wave_0_per_point14=sa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;
wave_0_per_point15=sb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;
wave_0_per_point16=sc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;
wave_0_per_point17=sd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;
wave_0_per_point18=se = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;
wave_0_per_point19=sf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;
wave_0_per_point20=sg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;
wave_0_per_point21=sh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;
wave_0_per_point22=si = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;
wave_0_per_point23=sj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;
wave_0_per_point24=
wave_0_per_point25=lr = if(sw,lr,rand(10));
wave_0_per_point26=let = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;
wave_0_per_point27=
wave_0_per_point28=va = equal(let,23) + equal(let,24) + equal(let,26);
wave_0_per_point29=vb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);
wave_0_per_point30=vc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);
wave_0_per_point31=vd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);
wave_0_per_point32=ve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);
wave_0_per_point33=vf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);
wave_0_per_point34=vg = equal(let,1);
wave_0_per_point35=vh = equal(let,9) + equal(let,20);
wave_0_per_point36=vi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);
wave_0_per_point37=vj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);
wave_0_per_point38=vk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);
wave_0_per_point39=vl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);
wave_0_per_point40=vm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);
wave_0_per_point41=vn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);
wave_0_per_point42=vo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);
wave_0_per_point43=vp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_0_per_point44=vq = equal(let,2) + equal(let,4) + equal(let,22);
wave_0_per_point45=vr = equal(let,9) + equal(let,20) + equal(let,25);
wave_0_per_point46=vs = equal(let,22);
wave_0_per_point47=vt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_0_per_point48=
wave_0_per_point49=a = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));
wave_0_per_point50=
wave_0_per_point51=a = a*below(ita,8)*q1;
wave_0_per_point52=
wave_0_per_point53=x = mx + vx*sz*.75;
wave_0_per_point54=y = my + vy*sz*1.5;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.86640
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.030
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=5
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.98600
shapecode_1_ang=0.00000
shapecode_1_tex_ang=3.14159
shapecode_1_tex_zoom=0.99979
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.900
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shape_2_per_frame1=x = sin(time) * .4 + .5;
shape_2_per_frame2=
shape_2_per_frame3=
shape_2_per_frame4=pow( (bass*.15),2);
shapecode_3_enabled=0
shapecode_3_sides=36
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.81623
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.000
shapecode_3_g=0.040
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=x = 1-q1;
shape_3_per_frame2=y = q2;
shape_3_per_frame3=x = 0.5 + (x - 0.5)*0.25;
shape_3_per_frame4=y = 0.5 + (y - 0.5)*0.25;
per_frame_1=//wave_r = 0.85 + 0.35*sin(0.437*time+1) + 0.55*sin(0.197*time+4);
per_frame_2=//wave_g = 0.85 + 0.35*sin(0.544*time+2) + 0.55*sin(0.143*time+5);
per_frame_3=//wave_b = 0.85 + 0.35*sin(0.751*time+3) + 0.55*sin(0.117*time+6);
per_frame_4=//wave_r = wave_r + sqrt(wave_r);
per_frame_5=//wave_g = sqrt(wave_g);
per_frame_6=//wave_b = wave_b + sqrt(wave_b);
per_frame_7=
per_frame_8=wave_r = wave_r + sin(bass_att)*1.5;
per_frame_9=wave_b = wave_r + sin(mid_att)*1.5;
per_frame_10=wave_g = wave_r + sin(treb_att)*1.5;
per_frame_11=wave_a = wave_a + (mid_att+bass_att);
per_frame_12=
per_frame_13=
per_frame_14=
per_frame_15=
per_frame_16=rot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );
per_frame_17=cx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );
per_frame_18=cy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );
per_frame_19=dx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );
per_frame_20=dy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );
per_frame_21=decay = decay - 0.01*equal(frame%6,0);
per_frame_22=dx = dx + dx_residual;
per_frame_23=dy = dy + dy_residual;
per_frame_24=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);
per_frame_25=dx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;
per_frame_26=dy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;
per_frame_27=wave_x = wave_x - dx_residual*7;
per_frame_28=wave_y = wave_y - dy_residual*7;
per_frame_29=wave_mystery = time*0.03;
warp_1=`shader_body {
warp_2=`
warp_3=`//uv = uv_orig;
warp_4=`float corr = texsize.xy*texsize_noise_lq.zw;
warp_5=`float2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;
warp_6=`
warp_7=`float2 tmp = uv1;
warp_8=`tmp.x = ang*3; tmp.y = rad;
warp_9=`uv1 = tmp;
warp_10=`
warp_11=`float3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);
warp_12=`
warp_13=`float3 ret1 = GetBlur1 (uv)-.3;
warp_14=`float3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;
warp_15=`float3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;
warp_16=`
warp_17=`ret = -.4*blur + crisp;
warp_18=`    
warp_19=` ret *= 0.98 * pow(1-.01*q28*q28*rad,2); 
warp_20=`  ret -= 0.04;
warp_21=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_22=`                      ((uv.xyy*q27
warp_23=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_24=`                      ).xyz*
warp_25=`                      float3(1,1,0)*0.05 + 
warp_26=`                      time*float3(0,0,1)*q29
warp_27=`                     );
warp_28=`if(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; 
warp_29=`if(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z -= (noise9).y*.5; 
warp_30=`if(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; 
warp_31=`
warp_32=`}
comp_1=`#define sat saturate
comp_2=`#define sampler_test sampler_moss1
comp_3=`sampler sampler_pw_noise_lq;
comp_4=`sampler sampler_test;
comp_5=`float inten, z, tmp, lprof, gnd, ncloud;
comp_6=`float2 dz, uv1,uv2, uv3, uv4;
comp_7=`float3 back, back2, sky, ret1, ret2, rs, rs1, cloud, fcol, forest;
comp_8=`static const float3x3 RotMat = float3x3(q20,q21,q22,q23,q24,q25,q26,q27,q28);
comp_9=`static const float3 t = float3(q20,q23,q26);
comp_10=`static const float3 s = float3(q22,q25,q28);
comp_11=`static const float3 ts = cross(t,s);
comp_12=`static const float2 movxz = float2(q18,q19);
comp_13=`static const float3 col = pow(float3((q17%10.0)/10,((q17/10.0)%10)/10.0,int(q17/100.0)/10.0),.8);
comp_14=`static const float hlim = 11;
comp_15=`float3 screen;
comp_16=`
comp_17=`float3 lavcol (float t) { return pow(.5,2*t*slow_roam_cos);}
comp_18=`
comp_19=`float aTan2(float y, float x) {float angle;	 float abs_y = abs(y);
comp_20=`if (x >= 0) {float r = (x - abs_y) / (x + abs_y); angle = 1-r;} 
comp_21=`else {float r = (x + abs_y) / (abs_y - x); angle = 3-r; }	
comp_22=`angle = angle * .25;
comp_23=`return y < 0 ? -angle : angle;}
comp_24=`
comp_25=`float3 project  (float dist) {float z; 
comp_26=`  z = dist/mul(ts,screen); z = clamp(z,-hlim,hlim);
comp_27=`  return float3((mul(float2x3(t,s),cross(ts,screen))*z*.6+movxz),-z);}
comp_28=`
comp_29=`float noise4 (float2 uvi) { float n1,n2,zv; zv = 0.008*time;
comp_30=`  n1 = lum(tex2D(sampler_noise_hq, (uvi)));
comp_31=`  n2 = lum(tex2D(sampler_noise_hq, (uvi*2+zv)));
comp_32=`  return n1 + n2/2 ;}
comp_33=`
comp_34=`shader_body {
comp_35=`uv1 = (uv-.5)*aspect.xy+.5;
comp_36=`screen = float3 ((uv-float2(.5,.5+.0*pow((uv.x-.5),2)))*aspect.xy,.6);
comp_37=`
comp_38=`//CLOUDS
comp_39=`uv2 = mul(uv1*float2(1,1),float2x2(q1,q2,-q2,q1));
comp_40=`float anz = 3.0; float t_rel = q7;
comp_41=`cloud = 0;
comp_42=`for (int n=1;n<=anz;n++) {
comp_43=`    z = 1-frac(1.0*n/anz-1.0*frac(-t_rel/anz)); 
comp_44=`    inten =  (1-z)*z*2;
comp_45=`    uv2 = z*uv2*.2 + float2(q6,q5); //?
comp_46=`    tmp = sat(lum(tex2D (sampler_noise_hq,uv2 +.01*noise4(uv2*4))-.6));
comp_47=`    cloud = cloud + tmp*inten;}
comp_48=`ncloud = 1-cloud;
comp_49=`fcol = tex2D(sampler_test,uv2*.2);
comp_50=`cloud *= (.3+fcol);
comp_51=`
comp_52=`//SKY AND GROUND
comp_53=`rs = project (q10); float3 rs0 = rs;
comp_54=`float3 noise = tex2D (sampler_noise_hq,rs.xy*.1);
comp_55=`gnd = .4*(noise.z-.5)/rs.z;
comp_56=`
comp_57=`forest = 0;
comp_58=`for (int m = 1; m <= 2; m++)
comp_59=`{ rs = project(q10+gnd);
comp_60=`  rs.xy += .01*(tex2D (sampler_noise_hq,float2(rs.xy/2+time*.01))-.5);; //wind
comp_61=`  rs1 = rs;
comp_62=`  rs1.xy = 0.5 + (1.0 - abs( frac( rs.xy * 0.5 ) * 2 - 1.0 )-.5); // Eo.S. mirror code 
comp_63=`  back = tex2D (sampler_test,rs1.xy);;
comp_64=`  lprof =  back.g;
comp_65=`  tmp =  1-(saturate(1.8*lprof-.3*(2-m))); 
comp_66=`  forest += back * saturate(lprof*1)*.1 ;
comp_67=`  gnd += tmp/pow(rs.z,2)*.3; 
comp_68=`}
comp_69=`forest *= 1-noise.x+lprof;
comp_70=`forest += (.2/length(abs(noise.xy-.2-forest.g/2)))/rs.z * (.5+slow_roam_sin)/4 ;
comp_71=`back = forest/pow(rs.z,1) * (rs.z>0) * (rs.z < hlim);
comp_72=`
comp_73=`float k1 = saturate(1-10/abs(pow(rs.z,1.8)));
comp_74=`back = lerp(back,.08*lavcol(k1), k1) ;;
comp_75=`
comp_76=`ret1 = lerp(GetPixel(uv),2*GetBlur1(uv),.0) *3 * ncloud;
comp_77=`ret2 = GetBlur2(uv)*2.0 + GetBlur3(uv)*4.0;
comp_78=`ret1 = lerp (ret1, ret2, 2*cloud);;
comp_79=`ret = back*ncloud + ret1 + cloud/3;
comp_80=`
comp_81=`
comp_82=`uv2 = uv1-float2(q11,q12);
comp_83=`float flash = q13/(length(uv2));
comp_84=`flash *= flash/(abs(frac(q12*4+int(1+treb_att)*aTan2(uv2.x,uv2.y))-.5)+.18);
comp_85=`
comp_86=`uv2 = uv1-float2(q14,q15);
comp_87=`float head = pow(.0001/(length(uv2)),.8)*q16;
comp_88=`ret += pow(head+flash,ncloud)*col;
comp_89=`
comp_90=`ret += GetBlur3((uv-.5)/2+.5)/pow(rs.z,2)*(rs.z>0)*(rs.z<hlim)*lprof*2;
comp_91=`
comp_92=`}
comp_93=`
comp_94=`//-------------------------------------------
comp_95=`//Written by martin
comp_96=`
