MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=0
[preset00]
fRating=5.000000
fGammaAdj=1.900
fDecay=0.980
fVideoEchoZoom=1.169
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=2
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.625
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=0.800
fModWaveAlphaEnd=1.200
fWarpAnimSpeed=0.204
fWarpScale=8.471
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.15038
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.470
ob_size=0.005
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=44
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.80814
shapecode_0_ang=0.75398
shapecode_0_tex_ang=1.38230
shapecode_0_tex_zoom=1.10462
shapecode_0_r=1.000
shapecode_0_g=0.900
shapecode_0_b=0.700
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=0.800
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.400
shape_0_per_frame1=x = 0.5 + 0.03*cos(time*0.69 + 2);
shape_0_per_frame2=y = 0.5 + 0.02*cos(time*0.73 + 1);
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=x1 = 0;
per_frame_init_2=y1= .001;
per_frame_init_3=z1 = 0;
per_frame_1=zoom = 1;
per_frame_2=warp = 0;
per_frame_3=wave_a = 0;
per_frame_4=
per_frame_5=
per_frame_6=// below parameters belong to an extended "Lotka-Volterra" model (simple predator-prey differential equation system - see wikipedia)
per_frame_7=
per_frame_8=startx = 0.7; // initial predator population (used only for the phase plot)
per_frame_9=starty = 0.7; // initial prey population
per_frame_10=
per_frame_11=a = 1.0; // LV-model parameters - some pairs reach a so-called limit-cycle
per_frame_12=b = 0.14;
per_frame_13=d = 0.2;
per_frame_14=
per_frame_15=q1 = aspectx;
per_frame_16=q2 = aspecty;
per_frame_17=
per_frame_18=q3 = startx;
per_frame_19=q4 = starty;
per_frame_20=
per_frame_21=q5 = a; // the model parameters are synchronized for the phase plot wave and the per-vertex warp
per_frame_22=q6 = b;
per_frame_23=q7 = d;
per_frame_24=
per_frame_25=
per_frame_26=vol = bass*8 + mid*5 + treb*3;
per_frame_27=m = m*0.97 + vol*0.08;
per_frame_28=monitor = vol;
per_frame_29=beat = above(vol,res)*above(vol,m)*above(vol,16);
per_frame_30=diff = (1-beat)*diff + beat*(vol-res);
per_frame_31=res = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);
per_frame_32=res = max(0,res);
per_frame_33=
per_frame_34=w = if(beat,rand(3.14*2),w);
per_frame_35=x = if(beat,rand(1),x);
per_frame_36=y = if(beat,rand(1),y);
per_frame_37=
per_frame_38=// below parameters belong to a synchronized affine transformation for waves and the per-vertex code (rotate, scale, translate)
per_frame_39=
per_frame_40=q26 = 0.5*x; // center for rotation and scaling (x)
per_frame_41=q27 = 0.5*y; // center for rotation and scaling (y)
per_frame_42=q28 = 1; // scale
per_frame_43=q29 = 0.4; // translate x
per_frame_44=q30 = 0.1; // translate y
per_frame_45=q31 = sin(w);
per_frame_46=q32 = cos(w);
per_frame_47=q25 = w;
per_frame_48=// TODO: compensate parameter changes for an invariant canvas pane via difference quotients ;)
per_frame_49=
per_frame_50=// integration
per_frame_51=bb = bb*0.98 + bass*0.5;
per_frame_52=mm = mm*0.98 + mid*0.5;
per_frame_53=tt = tt*0.98 + treb*0.5;
per_frame_54=
per_frame_55=// normalization
per_frame_56=mx = max(max(bb,mm),tt);
per_frame_57=mn = min(min(bb,mm),tt);
per_frame_58=
per_frame_59=h1 = (bb-mn)/(mx-mn);
per_frame_60=h2 = (mm-mn)/(mx-mn);
per_frame_61=h3 = (tt-mn)/(mx-mn);
per_frame_62=
per_frame_63=// integration again (for constant change in one variable)
per_frame_64=v = 0.1/fps;
per_frame_65=bm = bm + (h1-h2)*v;
per_frame_66=mt = mt + (h2-h3)*v;
per_frame_67=bt = bt + (h1-h3)*v;
per_frame_68=
per_frame_69=// emit
per_frame_70=q10 = bm;
per_frame_71=q11 = mt;
per_frame_72=q12 = bt;
per_frame_73=v = bm;
per_frame_74=q13 = sin(v);
per_frame_75=q14 = cos(v);
per_pixel_1=x = 0.5 + (x-0.5)*q1;
per_pixel_2=y = 0.5 - (y-0.5)*q2;
per_pixel_3=
per_pixel_4=x = q26 + (x-q26)/q28 - q29;
per_pixel_5=y = q27 + (y-q27)/q28 - q30;
per_pixel_6=
per_pixel_7=// have a nice warp effect? - rotate it like a shape!
per_pixel_8=
per_pixel_9=  angle = -q25;
per_pixel_10=
per_pixel_11=/////////////////////////////////////////////////////////
per_pixel_12=X1 = x - q26;
per_pixel_13=Y1 = y - q27;
per_pixel_14=x = q26 + cos(-angle)*X1 -sin(-angle)*Y1; // rotate the x/y pane
per_pixel_15=y = q27 + sin(-angle)*X1 +cos(-angle)*Y1;
per_pixel_16=/////////////////////////////////////////////////////////
per_pixel_17=
per_pixel_18=
per_pixel_19=dx = x*(1-x)-q5*x*y/(x+q6);
per_pixel_20=dy = -q7*y*(1-y/x);
per_pixel_21=
per_pixel_22=dx = -0.01*dx/q1;
per_pixel_23=dy = -0.01*dy/q2;
per_pixel_24=
per_pixel_25=
per_pixel_26=//dx = 0;
per_pixel_27=//dy = 0;
per_pixel_28=
per_pixel_29=/////////////////////////////////////////////////////////
per_pixel_30=dx1 = cos(angle)*dx - sin(angle)*dy; // and finally the dx/dy pane is rotated to match the x/y pane
per_pixel_31=dy1 = sin(angle)*dx + cos(angle)*dy;
per_pixel_32=dx = dx1*aspectx;
per_pixel_33=dy = dy1*aspecty;
per_pixel_34=/////////////////////////////////////////////////////////
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`   // sample previous frame
warp_5=`ret = tex2D( sampler_fc_main, lerp(uv,uv_orig,.15)).xyz;
warp_6=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_7=`                      ((uv.xyy*q27
warp_8=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_9=`                      ).xyz*
warp_10=`                      float3(1,1,0)*0.05 + 
warp_11=`                      time*float3(0,0,1)*q29
warp_12=`                     );
warp_13=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_14=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_15=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_16=`ret.x += frac(GetPixel(uv+float2(1,2)*texsize.zw*GetPixel(uv).x).x);
warp_17=`ret.x -= GetBlur3(uv).x;
warp_18=`
warp_19=`ret.y += frac(GetPixel(uv+float2(2,-2)*texsize.zw*GetPixel(uv).y).y);
warp_20=`ret.y -= GetBlur3(uv).y;
warp_21=`
warp_22=`ret.z += frac(GetPixel(uv+float2(-2,-1)*texsize.zw*GetPixel(uv).z).z);
warp_23=`ret.z -= GetBlur3(uv).z;
warp_24=`
warp_25=`
warp_26=`    // darken (decay) over time
warp_27=`    ret = (ret*0.95)-.002; //or try: ret -= 0.004;
warp_28=`}
